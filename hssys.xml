<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2017.1.3 (Build 317_5_19136U)" ts="2020-04-08 08:36:19">
<Class name="DocBook.Catalog">
<Description>
This is a special container that renders the title of books and articles for the Documentation system.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<SqlTableName>db_catalog</SqlTableName>
<Super>DocBook.container</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>58822,45005</TimeCreated>

<Method name="GetBannerInfo">
<Internal>1</Internal>
<FormalSpec>info:DocBook.UI.BannerInfo</FormalSpec>
<Implementation><![CDATA[
	Set info.title = $$$T("Documentation Catalog")
	Set info.booktitle = $$$T("InterSystems Online Documentation")
	Set info.chap = ""
	Set info.prev = ""
	Set info.next = ""

]]></Implementation>
</Method>

<Method name="HTMLRender">
<Internal>1</Internal>
<Implementation><![CDATA[
	Do ..ShowCatalog()

]]></Implementation>
</Method>

<Method name="ShowCatalog">
<Description>
Display the catalog of titles</Description>
<Internal>1</Internal>
<Implementation><![CDATA[

	// preface
	&html<<DIV CLASS="para1">>
	Write $$$T("Welcome to the InterSystems online documentation."), !
	Write $$$T("What follows is a list of all the available online books and articles."), !
	Write $$$T("Clicking on the title will take you directly to the document."), !
	&html<</DIV>>
    
    &html<<DIV CLASS="set">Books</DIV>>
	Do ..ShowBooks()

    &html<<DIV CLASS="set">Articles</DIV>>
	Do ..ShowArticles()

]]></Implementation>
</Method>

<Method name="ShowBooks">
<Internal>1</Internal>
<Implementation><![CDATA[

	// loop over articles
	&sql(DECLARE BCursor CURSOR FOR
		SELECT ID,blockid,title,subtitle
		INTO :setid,:key,:title,:desc
		FROM DocBook.book
		ORDER BY title
	)
	
	&sql(OPEN BCursor)
	&sql(FETCH BCursor)

    &html<<DIV CLASS="para"><DL>>
    Set n = 0
	While (SQLCODE = 0) {
		Set n = n + 1

		Set link = "HREF=""DocBook.UI.Page.cls?KEY=" _ $ZCVT(key,"O","URL") _ """"

		&html<<DT>
		<A CLASS="TOCChapter" #(link)#>#(title)#</A>
		</DT>
		>

		&html<<DD>
		#(desc)#&nbsp;&#151;&nbsp;(<SPAN CLASS="filename">#(key)#</SPAN>)
		</DD>>

		&html<<P>>

		&sql(FETCH BCursor)
	}
	&sql(CLOSE BCursor)
    &html<</DL></DIV>>

]]></Implementation>
</Method>

<Method name="ShowArticles">
<Internal>1</Internal>
<Implementation><![CDATA[

	// loop over articles
	&sql(DECLARE ACursor CURSOR FOR
		SELECT ID,blockid,title,subtitle
		INTO :setid,:key,:title,:desc
		FROM DocBook.article
		ORDER BY title
	)
	
	&sql(OPEN ACursor)
	&sql(FETCH ACursor)

    &html<<DIV CLASS="para"><DL>>
    Set n = 0
	While (SQLCODE = 0) {
		Set n = n + 1

		Set link = "HREF=""DocBook.UI.Page.cls?KEY=" _ $ZCVT(key,"O","URL") _ """"

		&html<<DT>
		<A CLASS="TOCChapter" #(link)#>#(title)#</A>
		</DT>>

		&html<<DD>
		#(desc)#&nbsp;&#151;&nbsp;(<SPAN CLASS="filename">#(key)#</SPAN>)
		</DD>>

		&html<<P>>

		&sql(FETCH ACursor)
	}
	&sql(CLOSE ACursor)
    &html<</DL></DIV>>

]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
</Storage>
</Class>


<Class name="DocBook.CheckColor">
<Description>
Scan the DocBook load for colorization errors</Description>
<IncludeCode>DocBookMac</IncludeCode>
<Super>%RegisteredObject</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>59987,42931.960484</TimeCreated>

<Parameter name="MarkerBgn">
<Default>DLLResultCode:</Default>
</Parameter>

<Parameter name="MarkerEnd">
<Default><![CDATA[-->]]></Default>
</Parameter>

<Method name="Main">
<Description>
Drives the scanning process</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	
	Write $$$T("Scan programlisting items:"), !
	Do ..CheckStatus(..ScanDocBook())
	Write $$$T("End programlisting scan"), !
	
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="CheckStatus">
<Description>
Drives the setup of a new Cache 5.1 install</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>Code</FormalSpec>
<Implementation><![CDATA[
	If ($SYSTEM.Status.IsError(Code))
	{
		Do $SYSTEM.Status.DisplayError(Code)
		Write !
	}
	Quit
]]></Implementation>
</Method>

<Method name="ScanDocBook">
<Description>
Loads the DocBook application</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>NewDir:%String=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// build the query to look for errors
	Set SELECT = "SELECT ID, sourcefile, dblang, renderedContent"
	Set FROM = "FROM DocBook.programlisting"
	Set WHERE = "WHERE ($FIND(renderedContent, '" _ ..#MarkerBgn _ "') > 0)"
	Set STMT = SELECT _ " " _ FROM _ " " _ WHERE
	;;Write "Stmt: ", SELECT, !, "..... ", FROM, !, "..... ", WHERE, !
	
	Set RS = ##class(%Library.ResultSet).%New("%DynamicQuery:SQL")
	Set sc = RS.Prepare(STMT)
	If ($$$ISERR(sc))
	{
		Write $$$T("Error attempting to prepare <programlisting> query"), !
		Quit sc
	}
	Set sc = RS.Execute()
	If ($$$ISERR(sc))
	{
		Write $$$T("Error attempting to execute <programlisting> query"), !
		Quit sc
	}
	
	Set ErrorTotal = 0
	While (RS.Next())
	{
		Set ErrorTotal = ErrorTotal + 1
		
		Set ThisID = $GET(RS.Data("ID"))
		Set ThisFile = $GET(RS.Data("sourcefile"))
		Set ThisLang = $GET(RS.Data("dblang"))
		Set ThisText = $GET(RS.Data("renderedContent"))
		
		Set BgnInx = $FIND(ThisText, ..#MarkerBgn)
		Set EndInx = $FIND(ThisText, ..#MarkerEnd) - $LENGTH(..#MarkerEnd)
		Set MarkerData = $ZSTRIP($EXTRACT(ThisText, BgnInx, EndInx), "<>W")
		
		Write ErrorTotal, "//", ThisID, "//", ThisFile, "//", ThisLang, "//", MarkerData, !
	}
	
	If (ErrorTotal '= 0)
	{
		Write $$$T("Items found: "), ErrorTotal, !
	}
	
	Quit $$$OK
]]></Implementation>
</Method>
</Class>


<Class name="DocBook.ConfigUtils">
<Description>
This abstracts the location of the configuration data the DocBook uses.
It is done this way so that we can localize all the configuration data
references and thereby ease the transition to Cache 5.1.

</Description>
<ClassType/>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Library.RegisteredObject</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>58822,45005</TimeCreated>

<Method name="LocateGlobal">
<Description>
This looks for the global data first in
^DocBook.Config(...) and, failing that, in ^%SYS("DOCBOOK",...").
If it finds either, it returns the prefix of the first one it
finds as a string.  
If it does not find either, it returns an empty string.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>Subscript:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    ; construct each of the references
    set prefix50 = "^%SYS(""DOCBOOK"","
    set ref50 = prefix50 _ Subscript _ ")"

    set prefix51 = "^DocBook.Config("
    set ref51 = prefix51  _ Subscript _ ")"
    
    ; test each one
    quit:($DATA(@ref51) > 0) prefix51
    quit:($DATA(@ref50) > 0) prefix50
    quit ""
    
]]></Implementation>
</Method>

<Method name="CollectConfigParams">
<Description>
Collect the present settings of the various configuration parameters
</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>Sep:%String="~"</FormalSpec>
<Private>0</Private>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    set result = ""

    set div = ","
    set params = "TRACE"
               _ div _ "WIDECHARCHECK"
               _ div _ "PDFCHECK"
               _ div _ "ENTITYCHECK"
               _ div _ "INCLREMARK"
               _ div _ "INDEXCLASS"
               _ div _ "IGNORECOLORERROR"
               _ div _ "SUPPRESSFRAMEWARNING"
               _ div _ "URL"
               _ div _ "EXPIRES"
               _ div _ "VARYBYPARAM"
    
    for i = 1 : 1 : $LENGTH(params, div)
    {
        set name = $PIECE(params, div, i)
        set:($LENGTH(result) > 0) result = result _ Sep
        set result = result _ name _ " = " _ $CLASSMETHOD("DocBook.ConfigUtils", ("Get" _ name))
    }
    quit result
    
]]></Implementation>
</Method>

<Method name="DisplayConfigParams">
<Description>
This displays the present setings of the various configuration parameters
</Description>
<ClassMethod>1</ClassMethod>
<Private>0</Private>
<Implementation><![CDATA[
    set separator = "~"
    set pieces = ..CollectConfigParams(separator)
    for i = 1 : 1 : $LENGTH(pieces, separator)
    {
        write $PIECE(pieces, separator, i), !
    }
    quit
    
]]></Implementation>
</Method>

<Method name="VarValue">
<Description>
Gets the value of the configuration variable.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>Name:%String</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
    set subscript = """" _ Name _ """"

    ; find out where it is
    set prefix = ..LocateGlobal(subscript)
    quit:(prefix = "") 0
    set ref = prefix _ subscript _ ")"
        
    quit +$GET(@ref)
    
]]></Implementation>
</Method>

<Method name="GetTRACE">
<Description>
Gets the value of the TRACE variable.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec/>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
    ; init the subscript name
    set subscript = """TRACE"""
    
    ; find out where it is
    set prefix = ..LocateGlobal(subscript)
    quit:(prefix = "") 0
    set ref = prefix _ subscript _ ")"
        
    quit +$GET(@ref)
    
]]></Implementation>
</Method>

<Method name="GetWIDECHARCHECK">
<Description>
Gets the value of the WIDECHARCHECK variable.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec/>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
    ; init the subscript name
    set subscript = """WIDECHARCHECK"""
    
    ; find out where it is
    set prefix = ..LocateGlobal(subscript)
    quit:(prefix = "") 0
    set ref = prefix _ subscript _ ")"
        
    quit +$GET(@ref)
    
]]></Implementation>
</Method>

<Method name="GetPDFCHECK">
<Description>
Gets the value of the PDFCHECK variable.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec/>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
    ; init the subscript name
    set subscript = """PDFCHECK"""
    
    ; find out where it is
    set prefix = ..LocateGlobal(subscript)
    quit:(prefix = "") 0
    set ref = prefix _ subscript _ ")"
        
    quit +$GET(@ref)
    
]]></Implementation>
</Method>

<Method name="GetENTITYCHECK">
<Description>
Gets the value of the ENTITYCHECK variable.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec/>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
    ; init the subscript name
    set subscript = """ENTITYCHECK"""
    
    ; find out where it is
    set prefix = ..LocateGlobal(subscript)
    quit:(prefix = "") 0
    set ref = prefix _ subscript _ ")"
        
    quit +$GET(@ref)
    
]]></Implementation>
</Method>

<Method name="GetINCLREMARK">
<Description>
Gets the value of the INCLREMARK variable.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec/>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
    ; init the subscript name
    set subscript = """INCLREMARK"""
    
    ; find out where it is
    set prefix = ..LocateGlobal(subscript)
    quit:(prefix = "") 0
    set ref = prefix _ subscript _ ")"
        
    quit +$GET(@ref)
    
]]></Implementation>
</Method>

<Method name="GetINDEXCLASS">
<Description>
Gets the value of the INCLREMARK variable.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec/>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
    ; init the subscript name
    set subscript = """INDEXCLASS"""
    
    ; find out where it is
    set prefix = ..LocateGlobal(subscript)
    quit:(prefix = "") ""
    set ref = prefix _ subscript _ ")"
        
    quit $GET(@ref)
    
]]></Implementation>
</Method>

<Method name="GetIGNORECOLORERROR">
<Description>
Gets the value of the IGNORECOLORERROR variable.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec/>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
    ; init the subscript name
    set subscript = """IGNORECOLORERROR"""
    
    ; find out where it is
    set prefix = ..LocateGlobal(subscript)
    quit:(prefix = "") 0
    set ref = prefix _ subscript _ ")"
        
    quit +$GET(@ref)
    
]]></Implementation>
</Method>

<Method name="GetSUPPRESSFRAMEWARNING">
<Description>
Gets the value of the SUPPRESSFRAMEWARNING variable.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec/>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
    ; init the subscript name
    set subscript = """SUPPRESSFRAMEWARNING"""
    
    ; find out where it is
    set prefix = ..LocateGlobal(subscript)
    quit:(prefix = "") 0
    set ref = prefix _ subscript _ ")"
        
    quit +$GET(@ref)
    
]]></Implementation>
</Method>

<Method name="GetURL">
<Description>
Gets the value of the URL variable.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    ; init the subscript name
    set subscript = """URL"""
    
    ; find out where it is
    set prefix = ..LocateGlobal(subscript)
    quit:(prefix = "") ""
    set ref = prefix _ subscript _ ")"
        
    quit $GET(@ref)
    
]]></Implementation>
</Method>

<Method name="GetEXPIRES">
<Description>
Gets the value of the EXPIRES variable.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    ; init the subscript name
    set subscript = """EXPIRES"""
    
    ; find out where it is
    set prefix = ..LocateGlobal(subscript)
    quit:(prefix = "") "03600"
    set ref = prefix _ subscript _ ")"
        
    quit $GET(@ref)
    
]]></Implementation>
</Method>

<Method name="GetVARYBYPARAM">
<Description>
Gets the value of the VARYBYPARAM variable.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    ; init the subscript name
    set subscript = """VARYBYPARAM"""
    
    ; find out where it is
    set prefix = ..LocateGlobal(subscript)
    quit:(prefix = "") ""
    set ref = prefix _ subscript _ ")"
        
    quit $GET(@ref)
    
]]></Implementation>
</Method>

<Method name="GetSOURCE">
<Description>
Converts the search paths into a list.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec/>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
    ; init the subscript name
    set subscript = """SOURCE"""
    
    ; init the result
    set result = ""
    
    ; find out where it is
    set prefix = ..LocateGlobal(subscript)
    quit:(prefix = "") result
    
    ; see if there are any
    set ref = prefix _ subscript _ ")"
    set state = $DATA(@ref)
    quit:($DATA(@ref) < 10) result
    
    ; iterate over them
    set curkey = """"""
    set ref = prefix _ subscript _ "," _ curkey _ ")"
    set curkey = $ORDER(@ref)
    while (curkey '= "")
    {
        set ref = prefix _ subscript _ "," _ """" _ curkey _ """" _ ")"
        set candidate = $GET(@ref)
        set curkey = $ORDER(@ref)
        
        set candidate = $ZSTRIP(candidate,"<>W")
        continue:($LENGTH(candidate) = 0)
        continue:($EXTRACT(candidate,1) = "#")
        set result = result _ $LISTBUILD(candidate)
    }
        
    quit result
    
]]></Implementation>
</Method>
</Class>


<Class name="DocBook.DocBookParser">
<Description>
An XML parser for DocBook.</Description>
<ClassType/>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%XML.SAX.ContentHandler</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>58822,45005</TimeCreated>

<Property name="ElPtr">
<Description>
 Pointer to element and element counter stack</Description>
<Type>dbint</Type>
<Private>1</Private>
</Property>

<Property name="ElStack">
<Description>
 Element Stack</Description>
<Type>cdata</Type>
<MultiDimensional>1</MultiDimensional>
</Property>

<Property name="ObjStack">
<Description>
 Object Stack</Description>
<Type>block</Type>
<MultiDimensional>1</MultiDimensional>
</Property>

<Property name="ObjPtr">
<Description>
Pointer to object stack.</Description>
<Type>dbint</Type>
<Private>1</Private>
</Property>

<Property name="CurrSet">
<Description>
Current set object</Description>
<Type>set</Type>
</Property>

<Property name="CurrBook">
<Description>
Current book object</Description>
<Type>book</Type>
</Property>

<Property name="CurrComponent">
<Description>
Current component object</Description>
<Type>component</Type>
</Property>

<Property name="CurrText">
<Description>
Current text being gathered.</Description>
<Type>cdata</Type>
<Private>1</Private>
</Property>

<Property name="HasInline">
<Description>
True if we are processing a mixed content element</Description>
<Type>%Boolean</Type>
<Private>1</Private>
</Property>

<Property name="SourceFile">
<Description>
Name of file being processed.</Description>
<Type>cdata</Type>
</Property>

<Property name="SourceTime">
<Description>
Timestamp of file being processed.</Description>
<Type>%TimeStamp</Type>
</Property>

<Property name="ElCount">
<Description>
Internal element counter</Description>
<Type>%Integer</Type>
<Private>1</Private>
</Property>

<Property name="InEntity">
<Description>
Entity flag</Description>
<Type>%Boolean</Type>
<Private>1</Private>
</Property>

<Property name="InBlock">
<Description>
In a Block flag; contains name of block element</Description>
<Type>%String</Type>
<Private>1</Private>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="KnownTags">
<Description>
Comma-separated list of tags we are prepared to handle</Description>
<Type>%String</Type>
<Private>1</Private>
<Parameter name="MAXLEN" value="4096"/>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="IDValid">
<Description>
Holds names of all elements allowed to have ID attributes</Description>
<Type>%String</Type>
<Private>1</Private>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="BlockElements">
<Description>
Holds element names which are "block"</Description>
<Type>%String</Type>
<Private>1</Private>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="ContainerElements">
<Description>
Hold element names which are "container"</Description>
<Type>%String</Type>
<Private>1</Private>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="MetaElements">
<Description>
Hold element names which are "meta"</Description>
<Type>%String</Type>
<Private>1</Private>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="DeprecatedEntities">
<Description>
Holds entity names not to be used</Description>
<Type>%String</Type>
<Private>1</Private>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="Architectures">
<Description>
Permitted architecture values</Description>
<Type>%String</Type>
<Private>1</Private>
<Parameter name="TRUNCATE" value="1"/>
</Property>

<Property name="TraceValue">
<Description>
Turns on some tracing info when true</Description>
<Type>%Integer</Type>
<Private>1</Private>
</Property>

<Property name="TraceBgnElm">
<Description>
Tracing test values</Description>
<Type>%Integer</Type>
<InitialExpression>1</InitialExpression>
<Private>1</Private>
</Property>

<Property name="TraceEndElm">
<Type>%Integer</Type>
<InitialExpression>2</InitialExpression>
<Private>1</Private>
</Property>

<Property name="TraceBgnEnt">
<Type>%Integer</Type>
<InitialExpression>4</InitialExpression>
<Private>1</Private>
</Property>

<Property name="TraceEndEnt">
<Type>%Integer</Type>
<InitialExpression>8</InitialExpression>
<Private>1</Private>
</Property>

<Property name="TraceIgnore">
<Type>%Integer</Type>
<InitialExpression>16</InitialExpression>
<Private>1</Private>
</Property>

<Property name="TraceText">
<Type>%Integer</Type>
<InitialExpression>32</InitialExpression>
<Private>1</Private>
</Property>

<Property name="TraceWork">
<Type>%Integer</Type>
<InitialExpression>64</InitialExpression>
<Private>1</Private>
</Property>

<Property name="PDFChecking">
<Description>
Turns on added checking for PDF production</Description>
<Type>%Integer</Type>
<Private>1</Private>
</Property>

<Property name="InclRemark">
<Description>
Turns on load of reviewer comments and questions into the database</Description>
<Type>%Integer</Type>
<Private>1</Private>
</Property>

<Property name="EntityCheck">
<Description>
Turns on added checking for entity usage</Description>
<Type>%Integer</Type>
<Private>1</Private>
</Property>

<Parameter name="MAXLINE">
<Default>120</Default>
</Parameter>

<Method name="%OnClose">
<Internal>1</Internal>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    // clean up object stack
    While (..ObjPtr > 0) {
        Set i%ObjStack(..ObjPtr) = ""
        Set ..ObjPtr = ..ObjPtr - 1
    }

    Quit $$$OK
]]></Implementation>
</Method>

<Method name="fatalError">
<Description>
Error handler</Description>
<Internal>1</Internal>
<FormalSpec>fatalerror:%Library.String</FormalSpec>
<Implementation><![CDATA[
    Write !,$$$T("SAX Fatal Error (a document could not be loaded): "),fatalerror,!

    Do ##class(ErrorLog).AddError(..SourceFile, "SAX fatal", fatalerror)
]]></Implementation>
</Method>

<Method name="error">
<Internal>1</Internal>
<FormalSpec>error:%Library.String</FormalSpec>
<Implementation><![CDATA[
    Write !,$$$T("SAX Error (a document could not be loaded): "),error,!

    Do ##class(ErrorLog).AddError(..SourceFile, $$$T("SAX error"), error)
]]></Implementation>
</Method>

<Method name="GetElementType">
<Description>
converts an element name into a "category" type</Description>
<Internal>1</Internal>
<FormalSpec>localname:cdata</FormalSpec>
<Private>1</Private>
<Implementation><![CDATA[

    Quit:(localname = "") ""

    Set test = "," _ localname _ ","
    Quit:(..MetaElements [ test) "meta"
    Quit:(..ContainerElements [ test) "container"
    Quit:(..BlockElements [ test) "block"
    Quit ""
]]></Implementation>
</Method>

<Method name="GetTag">
<Description>
Returns a formatted start tag for the given element and attr values</Description>
<Internal>1</Internal>
<FormalSpec>localname:cdata,attrs:%Library.List</FormalSpec>
<Private>1</Private>
<ReturnType>cdata</ReturnType>
<Implementation><![CDATA[

    Set attrstring = ..GetAttrPairs(attrs)
    If (attrstring '= "")
    {
        Set tag = "<" _ localname _ " " _ attrstring _ ">"
    }
    Else
    {
        Set tag = "<" _ localname _ ">"
    }
    Quit tag
]]></Implementation>
</Method>

<Method name="GetAttrPairs">
<Description>
Returns a formatted string of the attribute values</Description>
<Internal>1</Internal>
<FormalSpec>attrs:%Library.List</FormalSpec>
<Private>1</Private>
<ReturnType>cdata</ReturnType>
<Implementation><![CDATA[

    Set result = ""
    For i = 1:5:$LL(attrs) {
        Set:(result '= "") result = result _ " "
        Set name = $LG(attrs, i+1)
        Set value = $ZCONVERT($LG(attrs, i+4), "O", "HTML")
        Set result = result _ name _ "=""" _ value _ """"
    }

    Quit result
]]></Implementation>
</Method>

<Method name="Assert">
<Description>
Test if condition is true, else write an error</Description>
<Internal>1</Internal>
<FormalSpec>cond:%Boolean,msg:cdata=""</FormalSpec>
<Private>0</Private>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
    If ('cond)
    {
        Set lin = 0
        Set pos = 0
        Do ..LocatePosition(.lin, .pos)
        Set assertion = $$$T("----- Assertion Check: ")
                      _ msg
                      _ $$$T(" at line ")
                      _ lin
                      _ $$$T(" offset ")
                      _ pos
        Write assertion ,!
        Quit 0
    }
    Quit 1
]]></Implementation>
</Method>

<Method name="Trace">
<Description>
Test if condition is true, else write an error</Description>
<Internal>1</Internal>
<FormalSpec>flag:%Integer</FormalSpec>
<Private>1</Private>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
    Quit:($ZBOOLEAN(+(..TraceValue), +(flag), 1)) 1
    Quit 0
]]></Implementation>
</Method>

<Method name="IsKnown">
<Description>
Test if condition is true, else write an error</Description>
<Internal>1</Internal>
<FormalSpec>name:%String</FormalSpec>
<Private>1</Private>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
    Set SearchString = "," _ name _ ","
    Quit:(..KnownTags [ SearchString) 1
    Quit 0
]]></Implementation>
</Method>

<Method name="UnpackAttrs">
<Description>
Converts list of attrs into an array keyed by attr name</Description>
<Internal>1</Internal>
<FormalSpec><![CDATA[attrs:%List,&array:cdata]]></FormalSpec>
<Private>1</Private>
<Implementation><![CDATA[

    ;
    ; Format of the attribute list
    ; A sequence of 5-element chunks as follows:
    ; +0 - the uri
    ; +1 - local (unqualified) name
    ; +2 - qualified name
    ; +3 - the type ("CDATA", NMTOKEN", "ENTITY", etc.)
    ; +4 - the attribute value.
    ;
    For i = 1:5:$LL(attrs) {
        If ($LG(attrs,i+1) '= "") {
            Set array($LG(attrs,i+1)) = $LG(attrs,i+4)
        }
    }
]]></Implementation>
</Method>

<Method name="ValidateID">
<Description>
Make sure the ID value is appropriate for the file</Description>
<Internal>1</Internal>
<FormalSpec>IDchars:%String,Filename:%String</FormalSpec>
<Private>1</Private>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
    ; empty id values are ok
    Quit:(IDchars = "") 1

    ; SET checks always succeed
    Quit:($ZCONVERT($EXTRACT(Filename, 1, 3), "U") = "SET") 1

    ; check for match up through first "." or "_"
    Set prefix = $PIECE($PIECE(Filename, ".", 1), "_", 1)
    Set len = $LENGTH(prefix)
    Quit ($EXTRACT(IDchars, 1, len) = prefix)
]]></Implementation>
</Method>

<Method name="CheckEntity">
<Description>
Check for proper usage of this entity</Description>
<Internal>1</Internal>
<FormalSpec>entityname:%String</FormalSpec>
<Private>1</Private>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
    Set NE = $$$T("Numeric entity")
    Set DE = $$$T("Deprecated entity")

    ; check for numeric entities
    Do ..Assert(($EXTRACT(entityname, 1, 1) '= "#"), (NE _ " - " _ entityname))

    ; check for deprecated entities
    Do ..Assert((..DeprecatedEntities '[ ("," _ entityname _ ",")),
                (DE _ " - " _ entityname))

    Quit
]]></Implementation>
</Method>

<Method name="CheckCharsLen">
<Description>
Check for excessively long strings</Description>
<Internal>1</Internal>
<FormalSpec>newchars:%String</FormalSpec>
<Private>1</Private>
<Implementation><![CDATA[
    Set boundary = 28000
    Set newlength = $LENGTH(..CurrText) + $LENGTH(newchars)
    Do ..Assert((newlength <= boundary),
                ($$$T("Aggregate text length may cause translation error: ") _ newlength _ " > " _boundary))
    Quit
]]></Implementation>
</Method>

<Method name="startDocument">
<Internal>1</Internal>
<Implementation><![CDATA[
    ; Write !
    Set ..ElPtr = 0
    Set ..ObjPtr = 0

    Set ..CurrText = ""
    Set ..HasInline = 0
    Set ..CurrBook = ""
    Set ..CurrSet = ""
    Set ..CurrComponent = ""
    Set ..ElCount = 0
    Set ..InEntity = 0
    Set ..InclRemark = 0
    Set ..PDFChecking = 0
    Set ..EntityCheck = 0
    Set ..TraceValue = 0
    Set ..InBlock = ""

    ; use of "+" in next line guarantees integer conversion
    Set ..TraceValue = ##class(DocBook.ConfigUtils).GetTRACE()
    if (..TraceValue '= 0)
    {
        Write !, "Tracing: ", ..TraceValue, !
    }
    Set ..PDFChecking = ##class(DocBook.ConfigUtils).GetPDFCHECK()
    ; ignore PDF checking for tutorials
    ; Set:($ZCONVERT($EXTRACT(..SourceFile, 1, 1), "U") = "T") ..PDFChecking = 0

    Set ..InclRemark = ##class(DocBook.ConfigUtils).GetINCLREMARK()

    Set ..EntityCheck = ##class(DocBook.ConfigUtils).GetENTITYCHECK()

    Set ..KnownTags = ",abstract"
                    _ ",anchor"
                    _ ",answer"
                    _ ",appendix"
                    _ ",application"
                    _ ",artheader"
                    _ ",article"
                    _ ",book"
                    _ ",bookinfo"
                    _ ",caution"
                    _ ",chapter"
                    _ ",citation"
                    _ ",citetitle"
                    _ ",classname"
                    _ ",colspec"
                    _ ",command"
                    _ ",emphasis"
                    _ ",entry"
                    _ ",envar"
                    _ ",errorcode"
                    _ ",errorname"
                    _ ",example"
                    _ ",figure"
                    _ ",filename"
                    _ ",firstterm"
                    _ ",formalpara"
                    _ ",function"
                    _ ",glossary"
                    _ ",glossdef"
                    _ ",glossentry"
                    _ ",glosslist"
                    _ ",glosssee"
                    _ ",glossterm"
                    _ ",graphic"
                    _ ",guibutton"
                    _ ",guiicon"
                    _ ",guilabel"
                    _ ",guimenu"
                    _ ",guimenuitem"
                    _ ",guisubmenu"
                    _ ",important"
                    _ ",indexterm"
                    _ ",informaltable"
                    _ ",inlinegraphic"
                    _ ",itemizedlist"
                    _ ",interface"
                    _ ",keycap"
                    _ ",keycode"
                    _ ",link"
                    _ ",listitem"
                    _ ",literal"
                    _ ",literallayout"
                    _ ",methodname"
                    _ ",note"
                    _ ",olink"
                    _ ",orderedlist"
                    _ ",para"
                    _ ",part"
                    _ ",partintro"
                    _ ",preface"
                    _ ",primary"
                    _ ",productname"
                    _ ",programlisting"
                    _ ",prompt"
                    _ ",property"
                    _ ",qandaset"
                    _ ",qandadiv"
                    _ ",qandaentry"
                    _ ",question"
                    _ ",quote"
                    _ ",refdescriptor"
                    _ ",refentry"
                    _ ",refentrytitle"
                    _ ",reference"
                    _ ",refmeta"
                    _ ",refname"
                    _ ",refnamediv"
                    _ ",refpurpose"
                    _ ",refsect1"
                    _ ",refsect2"
                    _ ",refsect3"
                    _ ",refsect4"
                    _ ",refsynopsisdiv"
                    _ ",remark"
                    _ ",replaceable"
                    _ ",row"
                    _ ",secondary"
                    _ ",sect1"
                    _ ",sect2"
                    _ ",sect3"
                    _ ",sect4"
                    _ ",see"
                    _ ",seealso"
                    _ ",set"
                    _ ",subscript"
                    _ ",subtitle"
                    _ ",superscript"
                    _ ",synopsis"
                    _ ",systemitem"
                    _ ",table"
                    _ ",tbody"
                    _ ",term"
                    _ ",tertiary"
                    _ ",tgroup"
                    _ ",thead"
                    _ ",tip"
                    _ ",title"
                    _ ",type"
                    _ ",ulink"
                    _ ",userinput"
                    _ ",varname"
                    _ ",warning"
                    _ ","

    Set ..IDValid = ",article"
                  _ ",anchor"
                  _ ",appendix"
                  _ ",book"
                  _ ",chapter"
                  _ ",example"
                  _ ",figure"
                  _ ",glossary"
                  _ ",glossentry"
                  _ ",part"
                  _ ",preface"
                  _ ",refentry"
                  _ ",reference"
                  _ ",refsect1"
                  _ ",refsect2"
                  _ ",refsect3"
                  _ ",refsect4"
                  _ ",sect1"
                  _ ",sect2"
                  _ ",sect3"
                  _ ",sect4"
                  _ ",set"
                  _ ",table"
                  _ ","

    Set ..BlockElements = ",anchor"
                        _ ",informaltable"
                        _ ",literallayout"
                        _ ",programlisting"
                        _ ",refdescriptor"
                        _ ",refname"
                        _ ",refpurpose"
                        _ ",remark"
                        _ ",synopsis"
                        _ ",table"
                        _ ","

    Set ..ContainerElements = ",abstract"
                            _ ",answer"
                            _ ",artheader"
                            _ ",article"
                            _ ",appendix"
                            _ ",book"
                            _ ",bookinfo"
                            _ ",caution"
                            _ ",chapter"
                            _ ",example"
                            _ ",figure"
                            _ ",formalpara"
                            _ ",glossary"
                            _ ",glossentry"
                            _ ",glossdef"
                            _ ",glosslist"
                            _ ",important"
                            _ ",itemizedlist"
                            _ ",listitem"
                            _ ",note"
                            _ ",orderedlist"
                            _ ",para"
                            _ ",part"
                            _ ",partintro"
                            _ ",preface"
                            _ ",qandaset"
                            _ ",qandadiv"
                            _ ",qandaentry"
                            _ ",question"
                            _ ",refentry"
                            _ ",reference"
                            _ ",refnamediv"
                            _ ",refsect1"
                            _ ",refsect2"
                            _ ",refsect3"
                            _ ",refsynopsisdiv"
                            _ ",sect1"
                            _ ",sect2"
                            _ ",sect3"
                            _ ",sect4"
                            _ ",set"
                            _ ",tip"
                            _ ",warning"
                            _ ","

    Set ..MetaElements = ",glossterm"
                       _ ",refmeta"
                       _ ",refentrytitle"
                       _ ",subtitle"
                       _ ",title"
                       _ ","

    Set ..DeprecatedEntities = ",mldr"
                             _ ","

    Set ..Architectures = ",cache"
                        _ ",ensemble"
                        _ ",hsfoundation"
                        _ ",healthshare"
                        _ ",hsfoundation"
                        _ ",trakcare"
                        _ ",intersystems"
                        _ ",internal"
                        _ ",tutorial"
                        _ ","

    Quit
]]></Implementation>
</Method>

<Method name="endDocument">
<Internal>1</Internal>
<Implementation><![CDATA[    Quit
]]></Implementation>
</Method>

<Method name="characters">
<Internal>1</Internal>
<FormalSpec>chars:%Library.String,length:%Library.Integer</FormalSpec>
<Implementation><![CDATA[
    // gather up text
    If ('(..InEntity))
    {
        // escape any incoming special characters
        // as SAX has already converted them
        Write:($ZB(..TraceValue, ..TraceText, 1)) !, "GATHER: ", chars
        Set newchars = $ZCVT(chars, "O", "HTML")
        Do ..CheckCharsLen(newchars)
        Set ..CurrText = ..CurrText _ newchars
    }
    Quit
]]></Implementation>
</Method>

<Method name="startEntity">
<Internal>1</Internal>
<FormalSpec>name:%String</FormalSpec>
<Implementation><![CDATA[
    // add entity to current text
    Set ..InEntity = 1
    Set ElementName = "&" _ name _ ";"
    if (..Trace(..TraceBgnEnt))
    {
        if (ElementName '= "&[dtd];")
        {
            Write:(..Trace(..TraceBgnEnt)) !, "BgnEnt: ", ElementName
        }
    }
    Quit
]]></Implementation>
</Method>

<Method name="endEntity">
<Internal>1</Internal>
<FormalSpec>name:%String</FormalSpec>
<Implementation><![CDATA[
    // add entity to current text
    Set ..InEntity = 0
    Set ElementName = "&" _ name _ ";"
    if (..Trace(..TraceEndEnt))
    {
        if (ElementName '= "&[dtd];")
        {
            Write:(..Trace(..TraceEndEnt)) !, "EndEnt: ", ElementName
        }
    }
    Do ..CheckCharsLen(ElementName)
    Set ..CurrText = ..CurrText _ ElementName
    Do:(..EntityCheck) ..CheckEntity(name)

    Quit
]]></Implementation>
</Method>

<Method name="startElement">
<Internal>1</Internal>
<FormalSpec>uri:%Library.String,localname:%Library.String,qname:%Library.String,attrs:%Library.List</FormalSpec>
<Implementation><![CDATA[

    Set $ZT="seERR"

    // feedback
    if (..Trace(..TraceWork))
    {
        If ( (..ElCount # 25) = 0) {
            Write "."
        }
        If ( (..ElCount # (25*60)) = 0) {
            Write !
        }
    }

    ; check the element tag name
    do ..Assert(..IsKnown(localname), ($$$T("Unsupported tag: ") _ "<" _ localname _ ">"))

    Set ..ElCount = ..ElCount + 1

    Write:(..Trace(..TraceBgnElm)) !,?..ElPtr,"<",localname,"> "

    // Check structural issues
    if (..ElPtr > 0)
    {
        Set GrandParentTag = "?"
        Set:(..ElPtr > 1) GrandParentTag = (..ElStack(..ElPtr - 1))

        Set ParentTag = (..ElStack(..ElPtr))
        Set ChildTag = localname
        Set GrandParentMatch = ("/" _ GrandParentTag _ "/")
        Set ParentMatch = ("/" _ ParentTag _ "/")
        Set ChildMatch = ("/" _ ChildTag _ "/")

        If (("/glossdef/" [ GrandParentMatch) && ("/para/" [ ParentMatch) && ("/caution/important/note/warning/" [ ChildMatch))
        {
            // Allow it
        }
        ElseIf ("/itemizedlist/orderedlist/programlisting/literallayout/remark/caution/important/note/warning/" [ ChildMatch)
        {
            Do ..Assert((ParentMatch '[ "/para/"),
                        ($$$T("Tag nesting") _ " - " _ ParentTag _ " / " _ ChildTag))
        }

        If ("/graphic/" [ ChildMatch)
        {
            Do ..Assert(("/figure/entry/para/" [ ParentMatch),
                        ($$$T("Tag nesting") _ " - " _ ParentTag _ " / " _ ChildTag))
        }
    }

    // push element
    Set ..ElPtr = ..ElPtr + 1
    Set ..ElStack(..ElPtr) = localname

    Do ..UnpackAttrs(attrs,.arr)

    // special attribute handling
    If (..ElPtr = 1)
    {
        If ((localname = "book") || (localname = "article"))
        {
            Set product = $G(arr("arch"), "")
            If ($LENGTH(product) = 0)
            {
                Do ..Assert(0, "Attribute ""arch"" missing; 'intersystems' assumed")
                Set product = "intersystems"
                Set attrs = attrs _ $LISTBUILD("", "arch", "arch", "CDATA", product)
                Set arr("arch") = product
            }
            if (..Architectures '[ ("," _ product _ ","))
            {
                Do ..Assert(0, "Attribute ""arch"" invalid: " _ product)
                Set product = "intersystems"
                For i = 1 : 5 : $LISTLENGTH(attrs)
                {
                    If ($LIST(attrs, (i + 1)) = "arch")
                    {
                        Set $LIST(attrs, (i + 4)) = product
                        Quit
                    }
                }
            }
            Else
            {
                Set ^DocBook.Config("ARCHITECTURES", $ZCONVERT(product, "U")) = 1
            }
            Set version = $G(arr("revision"), "")
            Do ..Assert(($LENGTH(version) = 0), ("Revision defined: " _ """" _ version _ """"))
        }
        If ((localname = "book") || (localname = "set"))
        {
            Set remap = $G(arr("remap"), "")
            If ($LENGTH(remap) = 0)
            {
                Do ..Assert(0, "Attribute ""remap"" value missing")
            }
            Else
            {
                If ('(remap?3N1"_"3N1"_"1.E))
                {
                    Do ..Assert(0, "Attribute ""remap"" formatted incorrectly")
                }
            }
        }
    }
    // in case of updates
    Do ..UnpackAttrs(attrs,.arr)

    // get outer elements
    If (..ElPtr > 1) {
        Set outer = $G(..ElStack(..ElPtr - 1))
    }
    Else {
        Set outer = ""
    }

    Set type = ..GetElementType(localname)
    Set outtype = ..GetElementType(outer)

    // Only accept id values for these elements; ignore all others
    Set key = $G(arr("id"))
    Do ..Assert(..ValidateID(key, ..SourceFile),
                ("ID/Filename mismatch: """ _ key _ """ vs " _ ..SourceFile))
    If (..IDValid '[ (","_localname_",")) {
        Set key = ""
    }

    If (..InBlock '= "")
    {
        If ((type = "container") || (type = "block"))
        {
            Do ..Assert(($LENGTH(..CurrText) > 0), ($$$T("Possible text loss in tag ") _ localname))
        }
    }

    If ((..InBlock = "") && (type = "container")) {

        // Create container instance
        // If id matches existing item, update
        Set id = ##class(DocBook.container).FindId(key)
        Set class = "DocBook." _ localname
        Set ReUseElement = 0

        If (id = "") {
            // insert
            Set container = $CLASSMETHOD(class,"%New")
            Set container.id = key
        }
        Else {
            // update
            Set ReUseElement = 1
            Write:(..Trace(..TraceWork)) !,"Updating container: ",key,!

            // first delete contents of container
            Do ##class(DocBook.container).DeleteDependents(id, ..Trace(..TraceWork))

            Write:(..Trace(..TraceWork)) !

            // open existing container
            Set container = ##class(DocBook.container).%OpenId(id)
            // reset counter for container
            Set container.lastChildPos = 0
        }

        Set container.tagattrs = attrs
        Set container.sourcefile = ..SourceFile
        Set container.sourcetime = ..SourceTime
        Set container.lang = $G(arr("lang"))
        Set container.role = $G(arr("role"))
        Set container.remap = $G(arr("remap"))
        Set container.status = $G(arr("status"))

        // set up pointer to parent
        If ((..ObjPtr > 0) && (outtype = "container")) {
            If (localname = "partintro") {
                If (i%ObjStack(..ObjPtr).%ClassName() = "part") {
                    // set up link to partintro
                    Set i%ObjStack(..ObjPtr).intro = container
                }
                Else {
                    Set container.container = i%ObjStack(..ObjPtr)
                    If (container.container '= "") {
                        // set up block pos
                        Set container.blockpos = container.container.lastChildPos
                        Set container.container.lastChildPos = container.container.lastChildPos + 1
                    }
                }
            }
            Else {
                Set container.container = i%ObjStack(..ObjPtr)
                If (container.container '= "") {
                    // set up block pos
                    Set container.blockpos = container.container.lastChildPos
                    Set container.container.lastChildPos = container.container.lastChildPos + 1
                }
            }
        }

        // set up book pointer
        If (localname = "book") {
            // we are the book
            Set ..CurrBook = container
            If (..CurrSet '= "") {
                Set container.set = ..CurrSet
            }
        }
        ElseIf (localname = "set") {
            // we are the set
            Set ..CurrSet = container
        }
        ElseIf (container.book = "") {
            Set container.book = ..CurrBook
        }
        ElseIf (..CurrBook = "") {
            Set ..CurrBook = container.book
        }

        // set up pointer to component
        If ((localname = "chapter")
             || (localname = "appendix")
             || (localname = "refentry")
             || (localname = "preface")
             || (localname = "article")
             || (localname = "reference"))
        {
            // we are the component
            Set ..CurrComponent = container
        }
        Else
        {
            If (ReUseElement = 0)
            {
                Set container.component = ..CurrComponent
            }
        }

        // reset text
        Set ..CurrText = ""

        // push block
        Set ..ObjPtr = ..ObjPtr + 1
        Set i%ObjStack(..ObjPtr) = container
    }
    ElseIf ((..InBlock = "") && (type = "block")) {
        // create block instance
        Set class = "DocBook." _ localname
        Set block = $CLASSMETHOD(class,"%New")
        Set block.id = key
        Set block.tagattrs = attrs
        Set block.sourcefile = ..SourceFile
        Set block.sourcetime = ..SourceTime
        Set block.lang = $G(arr("lang"))
        Set block.role = $G(arr("role"))
        Set block.remap = $G(arr("remap"))
        Set block.status = $G(arr("status"))

        If ((..ObjPtr > 0) && (outtype = "container")) {
            // set up pointer to parent
            Set block.container = i%ObjStack(..ObjPtr)

            // set blockpos
            If (block.container '= "") {
                Set block.blockpos = block.container.lastChildPos
                Set block.container.lastChildPos = block.container.lastChildPos + 1
            }

        }
        If (..CurrBook '= "") {
            Set block.book = ..CurrBook
        }
        If (..CurrComponent '= "") {
            Set block.component = ..CurrComponent
        }

        // special attr handling for tables
        If ((localname = "table") || (localname = "informaltable")) {
            Set block.frame = $G(arr("frame"))
            Set block.colsep = $G(arr("colsep"))
            If ('(##class(DocBook.ConfigUtils).GetSUPPRESSFRAMEWARNING())) {
                Do ..Assert(($LENGTH(block.frame) > 0), ($$$T("Missing value for ""frame"" attribute on ") _ localname _ $$$T(" element")))
            }
        }

        // push block
        Set ..ObjPtr = ..ObjPtr + 1
        Set i%ObjStack(..ObjPtr) = block
        Set ..CurrText = ""

        Set ..InBlock = localname
    }
    ElseIf (type = "meta") {
        Set ..CurrText = ""
    }
    Else {
        // append element to current text
        Set addendum = ..GetTag(localname,attrs)
        Do ..CheckCharsLen(addendum)
        Set ..CurrText = ..CurrText _ addendum
        If ((localname = "graphic") || (localname = "inlinegraphic"))
        {
            Set imagedir = $G(arr("fileref"), "Missing")
        }
    }

    Quit
seERR
    Set $ZT=""
    If $TLEVEL TROLLBACK
    Write $$$T("ERROR in startElement(): "),$ZE,!
    QUIT
]]></Implementation>
</Method>

<Method name="endElement">
<Internal>1</Internal>
<FormalSpec>uri:%Library.String,localname:%Library.String,qname:%Library.String</FormalSpec>
<Implementation><![CDATA[

    Set $ZT="eeERR"

    ; check the element tag name
    do ..Assert(..IsKnown(localname), ($$$T("Unsupported tag: ") _ "</" _ localname _ ">"))

    If (localname = "entry")
    {
        Set test = ..CurrText
        ;Write $ZCONVERT(test, "O", "HTML"), !
        If ($EXTRACT(test, $LENGTH(test)) = ">") {
            Set tagbgn = $FIND($REVERSE(test), "<")
            Set tagbgn = $LENGTH(test) - tagbgn + 3
            Set tagend = tagbgn + $LENGTH("entry") - 1
            ;Write "Tag:  ", tagbgn, ":", tagend, "<", $LENGTH(test), !
            Set test = $EXTRACT(test, tagbgn, tagend)
            ;Write "Text: ", $ZCONVERT(test, "O", "HTML"), !
            If (test = "entry") {
                // assure cell non-empty
                ;Write "Matched", !
                Do ..CheckCharsLen("&nbsp;")
                Set ..CurrText = ..CurrText _ "&nbsp;"
            }
        }
    }

    // get outer element
    If (..ElPtr > 1)
    {
        Set outer = $G(..ElStack(..ElPtr - 1))
    }
    Else
    {
        Set outer = ""
    }

    Set outtype = ..GetElementType(outer)
    Set type = ..GetElementType(localname)

    If ((localname = "title") && (outtype = "container"))
    {
        If (..ObjPtr > 0 )
        {
            Set obj = i%ObjStack(..ObjPtr)
            Set obj.title = ..CurrText
            Set ..CurrText = ""
        }
    }
    ElseIf ((localname = "subtitle") && (outtype = "container"))
    {
        If (..ObjPtr > 0 )
        {
            Set obj = i%ObjStack(..ObjPtr)
            Set obj.subtitle = ..CurrText
            Set ..CurrText = ""
        }
    }
    ElseIf ((..InBlock = "") && (type = "container"))
    {
        If (..ObjPtr > 0 )
        {
            Set obj = i%ObjStack(..ObjPtr)

            Set obj.content = ..CurrText
            Set ..CurrText = ""

            If (obj.id = ""){
                //AAH818 use sourcefile as initial part of generated ID
                set plain=$P(obj.sourcefile,".xml",1)
                set baseid=$P(plain,"_",1)
                set obj.id=baseid_ "_C" _ $I(^DocBook.blockID)
            }

            Set sc = obj.%Save()
            If ($system.Status.IsError(sc))
            {
                Set ErrText = $SYSTEM.Status.GetErrorText(sc)
                Do ..LocatePosition(.lin, .pos)
                Set Location = $$$T("line ")
                               _ lin
                               _ $$$T(" offset ")
                               _ pos
                Write ErrText _ " @" _ Location ,!
            }

            // if needed-clean up local pointer
            If (localname = "book")
            {
                Set ..CurrBook = ""
            }
            ElseIf (localname = "set")
            {
                Set ..CurrSet = ""
            }
            ElseIf ((localname = "chapter") || (localname = "appendix") || (localname = "refentry") || (localname = "article"))
            {
                Set ..CurrComponent = ""
            }

            // pop object stack
            Set i%ObjStack(..ObjPtr) = ""
            Set ..ObjPtr = ..ObjPtr - 1
        }
    }
    ElseIf ((type = "block") && (..InBlock = localname))
    {
        If (..ObjPtr > 0 )
        {
            Set obj = i%ObjStack(..ObjPtr)


            If (localname = "remark")
            {
                Set obj.remarkContent = ..CurrText
                Set obj.InclRemark = ..InclRemark
                Set ..CurrText = ""
            }

            Set obj.content = ..CurrText
            Set ..CurrText = ""

            If (obj.id = ""){
                //AAH818 use sourcefile as initial part of generated ID
                set plain=$P(obj.sourcefile,".xml",1)
                set baseid=$P(plain,"_",1)
                set obj.id=baseid_ "_B" _ $I(^DocBook.blockID)
            }

            If (..PDFChecking)
                {
                    If ((localname = "programlisting") || (localname = "literallayout"))
                    {

                        ; check for the presence of tab characters
                        Do ..Assert((obj.content '[ $CHAR(9)), ($$$T("Tab chars found in ") _ localname))

                        ; check for the presence of &nbsp;
                        Do ..Assert((obj.content '[ "&nbsp;"), ($$$T("Non-breaking space entities found in ") _ localname))

                        ; look for lines that are too long
                        Set pos = 0
                        Set i = 1
                        While (i <= $LENGTH(obj.content))
                        {
                            Set ch = $EXTRACT(obj.content, i)
                            ; tab character
                            If (ch = $char(9))
                            {
                                Set oldpos = pos
                                Set pos = pos + 8
                                Set pos = (pos \ 8) * 8
                                ; make temp copy to avoid screwing up the object
                                Set text = obj.content
                                Set $EXTRACT(text, i) = $EXTRACT("          ", 1, (pos - oldpos + 1))
                                Set obj.content = text
                                ;Write "Tab @ ", oldpos, " -> ", pos, !
                            }
                            ; carriage return or line feed (newline)
                            If ((ch = $CHAR(13)) || (ch = $CHAR(10)))
                            {
                                ; check for prior line too long
                                If (pos > ..#MAXLINE)
                                {
                                    quit
                                }
                                Set pos = 0
                            }
                            ; entity
                            If (ch = "&")
                            {
                                For j = 1 : 1 : 9
                                {
                                    Set ch = $EXTRACT(obj.content, (i + j))
                                    If (ch = ";")
                                    {
                                        quit
                                    }
                                }
                                Set i = i + j
                            }
                            ; update position
                            Set i = i + 1
                            Set pos = pos + 1
                        }
                        do ..Assert((pos <= ..#MAXLINE), ($$$T("Long line found in ") _ localname))
                    }
                }

            If (localname = "programlisting")
            {
                // pre-render syntax colored code
                Set errmsg = obj.Colorize()
                If (errmsg '= "") {
                    // log syntax error
                    Do ##class(ErrorLog).AddError(..SourceFile, $$$T("syntax"), errmsg, obj.id)
                }
                Else
                {
                    If (($LENGTH(obj.content) + $LENGTH(obj.renderedContent)) > 29999)
                    {
                        Do ..Assert(0, $$$T("Max length exceeded; programlisting color suppressed"))
                        Set obj.renderedContent = ""
                    }
                }
            }

            If (localname = "anchor")
            {
                Set sc = obj.Interpret()
                If $SYSTEM.Status.IsError(sc)
                {
                    Do ##class(ErrorLog).AddError(..SourceFile, $$$T("normalize"), $SYSTEM.Status.GetErrorText(sc), obj.id)
                }
                Set ref = obj.id
                Set lastchr = $EXTRACT(ref, *)
                Set suffix = "_anchor"
                If ("0123456789" [ lastchr)
                {
                    Set suffix = suffix _ lastchr
                }
                Set reflen = $LENGTH(ref)
                Do ..Assert(($EXTRACT(ref, (reflen - $LENGTH(suffix) + 1), reflen) = suffix),
                             ($$$T("Anchor id is malformed: ") _ ref))
            }

            Set sc = obj.%Save()
            If ($system.Status.IsError(sc))
            {
                Set ErrText = $SYSTEM.Status.GetErrorText(sc)
                Do ..LocatePosition(.lin, .pos)
                Set Location = $$$T("line ")
                               _ lin
                               _ $$$T(" offset ")
                               _ pos
                Write ErrText _ " @" _ Location ,!
            }

            Set ..HasInline = 0

            // pop object stack
            Set i%ObjStack(..ObjPtr) = ""
            Set ..ObjPtr = ..ObjPtr - 1
            Set ..InBlock = ""
        }
    }
    ElseIf ((localname = "refentrytitle") && (outer = "refmeta"))
    {
        If (..ObjPtr > 0 ) {
            Set obj = i%ObjStack(..ObjPtr)
            // !!! place refentry title in 2 places!
            Set obj.title = ..CurrText
            Set obj.refmeta.refentrytitle = ..CurrText
            Set ..CurrText = ""
        }
    }
    ElseIf ((localname = "glossterm") && (outer = "glossentry"))
    {
        If (..ObjPtr > 0 ) {
            Set obj = i%ObjStack(..ObjPtr)
            Set obj.glossterm = ..CurrText
            Set ..CurrText = ""
        }
    }
    ElseIf ((localname = "title") && (outer = "table"))
    {
        // title for a table
        If (..ObjPtr > 0 ) {
            Set obj = i%ObjStack(..ObjPtr)
            Set obj.title = ..CurrText
            Set ..CurrText = ""
        }
    }
   Else
   {
        // append closing tag to currtext\
        Set addendum = "</" _ localname _ ">"
        Do ..CheckCharsLen(addendum)
        Set ..CurrText = ..CurrText _ addendum
    }

    // pop element stack
    Set ..ElPtr = ..ElPtr - 1
    Write:(..Trace(..TraceEndElm)) !,?..ElPtr,"</",localname,"> "
    Quit

eeERR
    Set $ZT=""
    If $TLEVEL TROLLBACK
    Write $$$T("ERROR in endElement(): "),$ZE,!
    QUIT
]]></Implementation>
</Method>
</Class>


<Class name="DocBook.DumpMessages">
<Description>
This class extracts the text fragments that need to be
localized from the DocBook namespace and writes them to
an XML file acceptable to the localization tools.
</Description>
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>%RegisteredObject</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>59259,53667.352</TimeCreated>

<Method name="Run">
<Description>
Run the extraction</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>Path:%Library.String="C:\DocBookMessages.xml"</FormalSpec>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
	; initialize
	set result = $$$OK
	
	; set up the default output file
	set Out = ##class(%Library.File).%New(Path)
	do Out.Open("WSNK\UTF8\")
	
	; file header
	do Out.WriteLine("<?xml version=""1.0"" encoding=""UTF-8""?>")
	do Out.WriteLine("<!--  ***********************************************************  -->")
	do Out.WriteLine("<!--  In order to work with the Cache build translation mechanism, -->")
	do Out.WriteLine("<!--  this file format must be strictly followed:                  -->")
	do Out.WriteLine("<!--  1. encoding must be ""UTF-8""                                  -->")
	do Out.WriteLine("<!--  2. all tags must have open and close on same line            -->")
	do Out.WriteLine("<!--  ***********************************************************  -->")
	do Out.WriteLine("<MsgFile Language=""en"">")
   	do Out.WriteLine("  <MsgDomain Domain=""DOCBOOK"">")
	
	; loop over the entries in the global
	set key = ""
	set key = $ORDER(^CacheMsg("DOCBOOK", "en", key))
	set cnt = 0
	while (key '= "")
	{
		set text = $GET(^CacheMsg("DOCBOOK", "en", key))
		
		set text = ..Convert(text)
		
		set line = "    "
		set line = line _ "<Message Id=""" _ key _ """>"
		set line = line _ text
		set line = line _ "</Message>"
		do Out.WriteLine(line)
		set cnt = cnt + 1
		set key = $ORDER(^CacheMsg("DOCBOOK", "en", key))
	}
	
	; file trailer
   	do Out.WriteLine("  </MsgDomain>")
	do Out.WriteLine("</MsgFile>")
	
ABORT ;
	do Out.Close()
	write "Message fragments: ", cnt, !
	quit result
]]></Implementation>
</Method>

<Method name="Convert">
<Description>
Replace strings</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>Text:%Library.String</FormalSpec>
<ReturnType>%Library.String</ReturnType>
<Implementation><![CDATA[
	; convert non-standard entities to numeric
	set result = ""
	if (Text [ "&")
	{
		set Text = $ZCONVERT(Text, "I", "HTML")
	}
	
	for i = 1 : 1 : $LENGTH(Text)
	{
		set chr = $EXTRACT(Text, i)
		set val = $ASCII(chr)
		if (chr = "&")
		{
			set result = result _ "&amp;"
			continue
		}
		if (chr = "<")
		{
			set result = result _ "&lt;"
			continue
		}
		if (chr = ">")
		{
			set result = result _ "&gt;"
			continue
		}
		if ((val < 32) || (val > 127))
		{
			set result = result _ "&#" _ val _ ";"
			continue
		}
		set result = result _ chr
	}

	quit result
]]></Implementation>
</Method>
</Class>


<Class name="DocBook.ErrorLog">
<Description>
A list of errors found while loading the DocBook content.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Persistent</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>59241,40474</TimeCreated>

<Property name="SourceFile">
<Description>
Source file containing the error</Description>
<Type>cdata</Type>
<Parameter name="MAXLEN" value="100"/>
</Property>

<Property name="Type">
<Description>
Type of error</Description>
<Type>cdata</Type>
<Parameter name="MAXLEN" value="100"/>
</Property>

<Property name="content">
<Description>
Content of the error block	</Description>
<Type>cdata</Type>
<Parameter name="MAXLEN" value="2000"/>
</Property>

<Property name="blockID">
<Description>
blockId of object containing error (if known)	</Description>
<Type>id</Type>
</Property>

<Property name="ErrorTime">
<Description>
Time of the error</Description>
<Type>%TimeStamp</Type>
<InitialExpression>$ZDT($H,3)</InitialExpression>
</Property>

<Method name="GetCount">
<Description>
Returns a count of errors</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	&sql(SELECT COUNT(*) INTO :count FROM ErrorLog)
	
	Quit count
]]></Implementation>
</Method>

<Method name="Reset">
<Description>
Reset the error log</Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[	Kill ^DocBook.ErrorLogD
]]></Implementation>
</Method>

<Method name="ResetForFile">
<Description>
Reset the error log for a given file</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>file:cdata</FormalSpec>
<Implementation><![CDATA[
	Set f = file // !!!

	&sql(DELETE FROM ErrorLog WHERE SourceFile = :f)
]]></Implementation>
</Method>

<Method name="AddError">
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>file:cdata,type:cdata,content:cdata="",id:id=""</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	Set a = file,b = type, c = content, i = id  // !!!

	&sql(INSERT INTO ErrorLog (SourceFile, Type, content, blockID)
				VALUES (:a, :b, :c, :i))

	Quit SQLCODE
]]></Implementation>
</Method>

<Method name="List">
<Description>
List the error log</Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	&sql(DECLARE sql1 CURSOR FOR
			SELECT %ID,SourceFile,Type,ErrorTime,content,blockID
			INTO :id,:file,:type,:time,:content,:bid
			FROM ErrorLog )

	&sql(OPEN sql1)
	&sql(FETCH sql1)
	While (SQLCODE = 0) {
		Write !,"ERROR ",id," [",file,"] --",time,!
		Write type
		Write:bid'="" "(",bid,")"
		Write " ",$E(content,1,100),!
		&sql(FETCH sql1)
	}
	&sql(CLOSE sql1)
	
	Write !,$$$T("Errors found: "), ..GetCount(), !
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^DocBook.ErrorLogD</DataLocation>
<DefaultData>ErrorLogDefaultData</DefaultData>
<IdLocation>^DocBook.ErrorLogD</IdLocation>
<IndexLocation>^DocBook.ErrorLogI</IndexLocation>
<StreamLocation>^DocBook.ErrorLogS</StreamLocation>
<Data name="ErrorLogDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>ErrorTime</Value>
</Value>
<Value name="3">
<Value>SourceFile</Value>
</Value>
<Value name="4">
<Value>Type</Value>
</Value>
<Value name="5">
<Value>content</Value>
</Value>
<Value name="6">
<Value>blockID</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="DocBook.GettingStarted">
<Description>
This is a special container that renders the GettingStarted page for the Documentation system.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>58822,45005</TimeCreated>

<Method name="GetBannerInfo">
<Internal>1</Internal>
<FormalSpec>info:DocBook.UI.BannerInfo</FormalSpec>
<Implementation><![CDATA[
    If (##class(DocBook.Utils).TrakCareLoaded())
    {
        Set info.title = $$$T("Getting Started with TrakCare, HealthShare, Ensemble and Cach&eacute;")
    }
    ElseIf (##class(DocBook.Utils).HealthShareLoaded())
    {
        Set info.title = $$$T("Getting Started with HealthShare, Ensemble and Cach&eacute;")
    }
    ElseIf (##class(DocBook.Utils).EnsembleLoaded())
    {
        Set info.title = $$$T("Getting Started with Ensemble and Cach&eacute;")
    }
    else
    {
        Set info.title = $$$T("Getting Started with Cach&eacute;")
    }
    Set info.booktitle = $$$T("InterSystems Online Documentation")
    Set info.chap = ""
    Set info.prev = ""
    Set info.next = ""
]]></Implementation>
</Method>

<Method name="HTMLRender">
<Internal>1</Internal>
<Implementation><![CDATA[    Do ..ShowGettingStarted()
]]></Implementation>
</Method>

<Method name="EmitSet">
<Internal>1</Internal>
<FormalSpec>Title:%String</FormalSpec>
<Implementation><![CDATA[
    &html<<DIV CLASS="set">>
    Write Title, !
    &html<</DIV>>
    Quit
]]></Implementation>
</Method>

<Method name="EmitItem">
<Internal>1</Internal>
<FormalSpec>Key:%String,Title:%String,SubTitle:%String</FormalSpec>
<Implementation><![CDATA[
    Set TargetCnt = 99
    If (Key [ "//")
    {
        Set Ref = "HREF=""" _ Key _ """"
    }
    Else
    {
        Set Ref = "HREF=""DocBook.UI.Page.cls?KEY=" _ Key _ """"
        &sql(SELECT COUNT(*) INTO :TargetCnt FROM DocBook.block WHERE blockid = :Key)
    }
    
    If (TargetCnt > 0) 
    {
        Set IntroMarkup = "<A CLASS=""TOC"" " _ Ref _ ">"
        Set FinishMarkup = "</A>"
    }
    Else
    {
        Set IntroMarkup = "<SPAN CLASS=""TOC""><!-- " _ Ref _ " -->"
        Set FinishMarkup = "</SPAN>"
    }

    &html<<DIV CLASS="para">>
    &html<<UL>>
    &html<<LI CLASS="SetTOC">>
    &html<#(IntroMarkup)#>
    &html<<B>>
    Write Title, !
    &html<</B>>
    &html<#(FinishMarkup)#>
    Write "&#151;&nbsp;"
    Write SubTitle, !
    &html<</UL>>
    &html<</DIV>>
    
    Quit
]]></Implementation>
</Method>

<Method name="ShowGettingStarted">
<Description>
Show text</Description>
<Internal>1</Internal>
<Implementation><![CDATA[
    Write "<DIV CLASS=""para1"">", !
    Write $$$T("The material listed below will help you to get started using InterSystems products."),!
    Write "<BR/>", !
    If (##class(DocBook.Utils).TrakCareLoaded())
    {
        Write $$$T("InterSystems TrakCare, HealthShare, and Ensemble share many underlying core technologies with InterSystems Cach&eacute; so they are listed separately here."), !
    }
    If (##class(DocBook.Utils).HealthShareLoaded())
    {
        Write $$$T("InterSystems HealthShare and Ensemble share many underlying core technologies with InterSystems Cach&eacute; so they are listed separately here."), !
    }
    ElseIf (##class(DocBook.Utils).EnsembleLoaded())
    {
        Write $$$T("InterSystems Ensemble shares many underlying core technologies with InterSystems Cach&eacute; so they are listed separately here."), !
    }
    Write "<BR/>", !
    Write $$$T("You can also go to the ")
    Write "<SPAN CLASS=""citetitle"">"
    Write "<A HREF=""DocBook.UI.Page.cls"">"
    Write $$$T("Documentation Home Page")
    Write "</A></SPAN>",!
    Write "</DIV>"
    
    &html<<DIV CLASS="GettingStarted">>

    If (##class(DocBook.Utils).TrakCareLoaded())
    {
        // New TrakCare Users
        Do ..EmitSet($$$T("For New TrakCare Users"))
        Do ..EmitItem("KOVERVIEW_preface", $$$T("An Overview of TrakCare"), $$$T("Provides an overview of TrakCare and background information relevant to the process of implementing TrakCare."))

        // Experienced TrakCare Users
        Do ..EmitSet($$$T("For Experienced TrakCare Users"))
        Do ..EmitItem("KGSECURITY_preface", $$$T("TrakCare System Administration Guide"), $$$T("Describes system administration tasks and troubleshooting tips for TrakCare."))
    }
    If (##class(DocBook.Utils).HealthShareLoaded())
    {
        Do ..EmitSet($$$T("For New HealthShare Users"))
        Do ..EmitItem("FOVW_preface", $$$T("An Overview of HealthShare"), $$$T("Introduces the HealthShare component architecture."))

        // Experienced HealthShare Users
        Do ..EmitSet($$$T("For Experienced HealthShare Users"))
        Do ..EmitItem("FRN_preface", $$$T("HealthShare Release Notes"), $$$T("New Features and Key Corrections in HealthShare."))
    }
    If (##class(DocBook.Utils).EnsembleLoaded())
    {
        Do ..EmitSet($$$T("For New Ensemble Users"))
        Do ..EmitItem("EGIN_preface", $$$T("Introducing Ensemble"), $$$T("An overview of the Ensemble product architecture and features."))
        Do ..EmitItem("EPREP_preface", $$$T("Preparing to Use Ensemble"), $$$T("A road map for installing, upgrading, and getting started with Ensemble."))
        Do ..EmitItem("EGBP_preface", $$$T("Ensemble Best Practices"), $$$T("A description of best practices for organizing and developing Ensemble productions."))

        // Experienced Ensemble Users
        Do ..EmitSet($$$T("For Experienced Ensemble Users"))
        Do ..EmitItem("EGRN_preface", $$$T("Ensemble Release Notes"), $$$T("A listing of the new features in this release, as well as any upgrade issues."))
        Do ..EmitItem("EPREP_preface", $$$T("Preparing to Use Ensemble"), $$$T("A road map for installing, upgrading, and getting started with Ensemble."))
        Do ..EmitItem("EGDV_preface", $$$T("Developing Ensemble Productions"), $$$T("A complete guide to programming with Ensemble."))
        Do ..EmitItem("EGMG_preface", $$$T("Managing Ensemble"), $$$T("User documentation for the Ensemble Management Portal."))
    }
    
    // New Cache Users
    Do ..EmitSet($$$T("For New Cach&eacute; Users"))
    Do ..EmitItem("GIC_preface", $$$T("Introduction to Cach&eacute;"), $$$T("An overview of Cach&eacute; architecture and features."))
    Do ..EmitItem("TWEB_preface", $$$T("Building Web Applications with Cach&eacute;"), $$$T("A tutorial that takes you through the steps of building an object-based Web application using Cach&eacute;."))

    If (##class(DocBook.Utils).TrakCareLoaded())
    {
        Do ..EmitItem("GSA_preface", $$$T("Basic System Administration"), $$$T("A guide to administering your HealthShare, Ensemble and Cach&eacute; System."))
    }
    ElseIf (##class(DocBook.Utils).HealthShareLoaded())
    {
        Do ..EmitItem("GSA_preface", $$$T("Basic System Administration"), $$$T("A guide to administering your HealthShare, Ensemble and Cach&eacute; System."))
    }
    ElseIf (##class(DocBook.Utils).EnsembleLoaded())
    {
        Do ..EmitItem("GSA_preface", $$$T("Basic System Administration"), $$$T("A guide to administering your Ensemble and Cach&eacute; System."))
    }
    Else
    {
        Do ..EmitItem("GSA_preface", $$$T("Basic System Administration"), $$$T("A guide to administering your Cach&eacute; System."))
    }

    // Multivalue, if present
    if ($ZBITGET(($ZVERSION(0)_$C(0,0,0,0,0,0)), 39))
    {
        Do ..EmitItem("SETMV", $$$T("MultiValue and Cach&eacute;"), $$$T("Information on the MultiValue features of Cach&eacute;."))
    }

    Do ..EmitItem("TLKP_preface", $$$T("Other Tutorial Offerings"), $$$T("A map of the other tutorial offerings for self-paced learning."))

    // Experienced Cache Users
    Do ..EmitSet($$$T("For Experienced Cach&eacute; Users"))
    Do ..EmitItem("GCRN_preface", $$$T("Cach&eacute; Release Notes"), $$$T("A listing of the new features in this release."))
    Do ..EmitItem("GCNV_preface", $$$T("Cach&eacute; Upgrade Checklists"), $$$T("A listing of changes in the release that may affect upgrades from earlier releases."))
    Do ..EmitItem("GSTD_preface", $$$T("Using Cach&eacute; Studio"), $$$T("Documentation for Cach&eacute; Studio."))
    Do ..EmitItem("GCAS_preface",  $$$T("Cach&eacute; Security Guide"), $$$T("A description of the security features available with this version."))

    // Additional Info
    Do ..EmitSet($$$T("For Additional Information"))
    Do ..EmitItem("GDOC_preface", $$$T("InterSystems Documentation"), $$$T("A guide to finding and using information in online and PDF formats."))
    Do ..EmitItem("//www.intersystems.com", $$$T("InterSystems Web Site"), $$$T("Information about InterSystems Corporation and its products."))
    Do ..EmitItem("//www.intersystems.com/support/index.html" ,$$$T("InterSystems Support"), $$$T("Information about InterSystems Worldwide Response Center."))
    Do ..EmitItem("//www.intersystems.com/education/learning-svcs.html", $$$T("InterSystems Learning Services"), $$$T("Information about our variety of training and certification programs."))
    Do ..EmitItem("//www.intersystems.com/community/index.html", $$$T("Cach&eacute; News Groups"), $$$T("Discussion forums for Cach&eacute; developers and users."))

    &html<</DIV>>
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
</Storage>
</Class>


<Class name="DocBook.Home">
<Description>
This is a special container that renders the Home page for the Documentation system.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>59241,40474</TimeCreated>

<Method name="GetBannerInfo">
<Internal>1</Internal>
<FormalSpec>info:DocBook.UI.BannerInfo</FormalSpec>
<Implementation><![CDATA[
    Set info.title = $$$T("Documentation Home Page")
    Set info.booktitle = $$$T("InterSystems Online Documentation")
    Set info.chap = ""
    Set info.prev = ""
    Set info.next = ""
]]></Implementation>
</Method>

<Method name="HTMLRender">
<Internal>1</Internal>
<Implementation><![CDATA[
    // Modern browsers get the new front page:
    Set agent = %request.UserAgent

    // mozilla 5.0+
    Set ver = +$E(agent,$f(agent,"Mozilla")+1,*)
    Set mozilla = (ver '< 5.0)
    
    // opera 6.0.5+
    Set ver = +$E(agent,$f(agent,"Opera")+1,*)
    Set opera = (ver '< 6.05)
    
    //&html<<DIV class="para">#($$$T("Agent:"))# #(agent)#</DIV>>
    //&html<<DIV class="para">#($$$T("IE:"))# #(%ie)#</DIV>>
    //&html<<DIV class="para">#($$$T("IE6:"))# #(%ie6)#</DIV>>
    //&html<<DIV class="para">#($$$T("NS7:"))# #(%ns7)#</DIV>>
    //&html<<DIV class="para">#($$$T("Opera:"))# #(opera)#</DIV>>
    //&html<<DIV class="para">#($$$T("Mozilla:"))# #(mozilla)#</DIV>>
    
    If ('%ie && '%ie6 && '%ns7 && 'opera && 'mozilla) {
        Do ..ShowSetsDirect()
    }
    Else {
        Do ..ShowSetsCompact()
    }
]]></Implementation>
</Method>

<Method name="OrderSETs">
<Description>
Produce an array of set names in remap order</Description>
<Internal>1</Internal>
<FormalSpec><![CDATA[&SetList,&SetIds]]></FormalSpec>
<Implementation><![CDATA[

    Set setid = $O(^DocBook.blockI("setIdx",""))
    Set keyinx = 0
    While (setid '="") 
    {
        Set set = ##class(DocBook.set).%OpenId(setid)

        If (set '="") 
        {
            Set keyinx = $INCREMENT(keyinx)
            Set sortkey = set.remap
            If (sortkey = "")
            {
                Set sortkey = "~" _ (1000 + keyinx)
            }
            Set SetList(sortkey) = set
            Set SetIds(sortkey) = setid

            Set set = ""
        }
        
        Set setid = $O(^DocBook.blockI("setIdx",setid))
        ;Write "SETID=",setid,!
    }
    
    Quit
]]></Implementation>
</Method>

<Method name="ShowSetsDirect">
<Description>
Show list of sets</Description>
<Internal>1</Internal>
<Implementation><![CDATA[

    Set inEnsemble = ##class(DocBook.Utils).EnsembleLoaded()
    
    // preface
    &html<<DIV CLASS="para1">>
    Write $$$T("Welcome to the InterSystems online documentation."), !

    // intro text
    &html<<DIV CLASS="para">>
    Write $$$T("Listed below is a wide variety of Cach&eacute; documentation covering"), !
    &html<<A HREF="#SETAppDev">>
    Write $$$T("Application Development"), !
	&html<</A>, >
	&html<<A HREF="#SETLangBind">>
	Write $$$T("Language Bindings"), !
	&html<</A>, >
	&html<<A HREF="#SETTools">>
	Write $$$T("Tools"), !
	&html<</A>, >
	&html<<A HREF="#SETSysAdmin">>
	Write $$$T("System Administration"), !
	&html<</A>, >
	Write $$$T("and "), !
	&html<<A HREF="#SETRelease">>
	Write $$$T("Version Information"), !
	&html<</A> >
	Write $$$T("as well as "), !
	&html<<A HREF="#SETReferences">>
	Write $$$T("Reference Material"), !
	&html<</A>, >
	&html<<A HREF="#SETTutorial">>
	Write $$$T("Tutorials"), !
	&html<</A>, >
	Write $$$T("and "), !
	&html<<A HREF="#KNBASE">>
	Write $$$T("Technical Articles"), !
	&html<</A>.>
	&html<</DIV>>
       
     
    Do ..OrderSETs(.setorder)

    Set setid = $ORDER(setorder(""))
    While (setid '="") {
        Set set = $GET(setorder(setid))
        //Set set = ##class(DocBook.set).%OpenId(setid)
        Set skip = 1
        If (set '="") {
            Set skip = 0

            If ('skip) {
                &html<<A NAME="#(set.id)#"></A><DIV CLASS="set">#(set.title)#</DIV><DIV CLASS="para">#(set.subtitle)#</DIV>>
            }

            If ('skip && (set.id = "SETReferences")) {
                // trick to display link to Documatic
                If ('static) {
                    Set link = "HREF=""/csp/documatic/%25CSP.Documatic.cls"""
                    &html<<DIV CLASS="para"><UL><LI CLASS="SetTOC">>
                    Write "<A CLASS=""TOC""" _ (link) _ " TITLE='" _ $$$T("The Online Class Reference") _ "'>", !
                    &html<<B>>
                    Write $$$T("Cach&eacute; Class Reference"), !
                    &html<</B></A>>
                    &html<</UL></DIV>>
                }
            }
            ElseIf (set.id = "SETRelease") {
                // trick to display link to GettingStarted & Feature Map
                If ('static) {
                    &html<<DIV CLASS="para"><UL><LI CLASS="SetTOC">>
                    Write "<A CLASS=""TOC"" HREF=""DocBook.UI.Page.cls?KEY=GettingStarted"" TITLE='" _ $$$T("The Cach&eacute; Getting Started Page") _ "'>", !
                    &html<<B>>
                    Write $$$T("Getting Started"), !
                    &html<</B></A>>
                    &html<</UL></DIV>>
                }
                If ('static) {
                    &html<<DIV CLASS="para"><UL><LI CLASS="SetTOC">>
                    Write "<A CLASS=""TOC"" HREF=""featuremap.csp"" TITLE='" _ $$$T("The Cach&eacute; Feature Map") _ "'>", !
                    &html<<B>>
                    Write $$$T("Cach&eacute; Feature Map"), !
                    &html<</B></A>>
                    &html<</UL></DIV>>
                }
            }
        }

        Do:'skip ..ShowBooks(set.%Id())

        Set setid = $ORDER(setorder(setid))
        //Set setid = $O(^DocBook.blockI("setIdx",setid))
    }

    // KNBASE
    
    Set link = "HREF=""DocBook.UI.Page.cls?KEY=KNBASE"""

    &html<<A NAME="KNBASE"></A><DIV CLASS="set">>
    Write $$$T("Technical Articles"), !
    &html<</DIV>>
    &html<<DIV CLASS="para">>
    Write $$$T("A compendium of technical articles on various topics."), !
    &html<</DIV>>

    &html<<DIV CLASS="para"><UL><LI CLASS="SetTOC">>
    Write "<A CLASS=""TOC""" _ (link) _ " TITLE='" _ $$$T("Technical Articles") _ "'>", !
    &html<<B>>
    Write $$$T("Technical Articles"), !
    &html<</B></A>>
    &html<</UL></DIV>>

    // CATALOG
    
	Set link = "HREF=""DocBook.UI.Page.cls?KEY=CATALOG"""

	&html<<A NAME="CATALOG"></A><DIV CLASS="set">>
	Write $$$T("Documentation List"), !
	&html<</DIV>>

	&html<<DIV CLASS="para">>
	Write $$$T("A catalog of the titles of the available books and articles in the online documentation."), !
	&html<</DIV>>

	&html<<DIV CLASS="para"><UL><LI CLASS="SetTOC">>
	Write "<A CLASS=""TOC""" _ (link) _ " TITLE='" _ $$$T("List of Titles") _ "'>", !
	&html<<B>>
	Write $$$T("Documentation List"), !
	&html<</B></A>>
	&html<</UL></DIV>>
]]></Implementation>
</Method>

<Method name="ShowSetsCompact">
<Description>
Show list of sets (compact format with links to Set pages)</Description>
<Internal>1</Internal>
<Implementation><![CDATA[

    Set inEnsemble = ##class(DocBook.Utils).EnsembleLoaded()
    
    // preface
    &html<<DIV CLASS="para1">>
    Write $$$T("Welcome to the InterSystems online documentation."), !
    &html<<BR>>
    Write $$$T("Click on one of the topics below to find more information."), !
    &html<</DIV><BR>>

    &html<<TABLE CLASS="Home" BORDER="0" CELLPADDING="0" CELLSPACING="0" COLS="2">>

    // list sets        
    Set setid = $O(^DocBook.blockI("setIdx",""))
    &html<<TR CLASS="HomeGap"><TD COLSPAN="2">&nbsp;</TD></TR>>
    
    Do ..OrderSETs(.setorder)

    Set setid = $ORDER(setorder(""))
    While (setid '="") {
        Set set = $GET(setorder(setid))

        If (set '="") {
            Set url = "DocBook.UI.Page.cls?KEY=" _ set.id
            &html<<TR CLASS="Home">>
            &html<<TD CLASS="HomeTitle"
                      NOWRAP 
                      onclick="self.document.location='#(url)#';" 
                      onmouseover="this.className = 'HomeTitleHi'; self.document.all.item('#(set.id)#').className = 'HomeSubTitleHi';" 
                      onmouseout="this.className='HomeTitle'; self.document.all.item('#(set.id)#').className = 'HomeSubTitle';">>
            Write "<A HREF="""_url_""" TITLE=""" _ $$$T("Show this set of books.") _ """>" _ (set.title) _ "&nbsp;</A>", !
            &html<</TD>>
            &html<<TD CLASS="HomeSubTitle" ID='#(set.id)#'>#(set.subtitle)#</TD></TR>>
            &html<<TR CLASS="HomeGap"><TD COLSPAN="2">&nbsp;</TD></TR>>

            Set set = ""
        }

        Set setid = $ORDER(setorder(setid))
    }
    
    // extra items:

    Set cnt = 0
    
    Set cnt = $INCREMENT(cnt)
    Set extra(cnt,"title") = $$$T("Technical Articles")
    Set extra(cnt,"subtitle") = $$$T("A compendium of technical articles on various topics of interest.")
    Set extra(cnt,"url") = "DocBook.UI.Page.cls?KEY=KNBASE"
    Set extra(cnt,"attrib") = ""

    set cnt = $INCREMENT(cnt)
    Set extra(cnt,"title") = $$$T("Documentation List")
    Set extra(cnt,"subtitle") = $$$T("A catalog of the titles of the available books and articles in the online documentation.")
    Set extra(cnt,"url") = "DocBook.UI.Page.cls?KEY=CATALOG"
    Set extra(cnt,"attrib") = ""

    Set cnt = $INCREMENT(cnt)
    Set extra(cnt,"title") = $$$T("Cach&eacute; Feature Map")
    Set extra(cnt,"subtitle") = $$$T("A graphical overview of Cach&eacute; with links to relevant documentation.")
    Set extra(cnt,"url") = "featuremapCache.csp"
    Set extra(cnt,"attrib") = ""
    
    If (##class(DocBook.Utils).EnsembleLoaded())
    {
        Set cnt = $INCREMENT(cnt)
        Set extra(cnt,"title") = $$$T("Ensemble Feature Map")
        Set extra(cnt,"subtitle") = $$$T("A graphical overview of Ensemble with links to relevant documentation.")
        Set extra(cnt,"url") = "featuremapEnsemble.csp"
        Set extra(cnt,"attrib") = ""
    }
    
    If (##class(DocBook.Utils).HealthShareLoaded())
    {
        Set cnt = $INCREMENT(cnt)
        Set extra(cnt,"title") = $$$T("HealthShare Feature Map")
        Set extra(cnt,"subtitle") = $$$T("A graphical overview of HealthShare with links to relevant documentation.")
        Set extra(cnt,"url") = "featuremapHealthShare.csp"
        Set extra(cnt,"attrib") = ""
    }

    Set cnt = $INCREMENT(cnt)
    Set extra(cnt,"title") = $$$T("Class Reference Information")
    Set extra(cnt,"subtitle") = $$$T("Online documentation for the classes in the InterSystems Class Library. Also displays documentation for all user-defined classes.")
    Set extra(cnt,"url") = "../documatic/%25CSP.Documatic.cls"
    Set extra(cnt,"attrib") = "TARGET=""_top"""
    
    Set cnt = $INCREMENT(cnt)
    Set extra(cnt,"title") = $$$T("Search Page")
    Set extra(cnt,"subtitle") = $$$T("The main Search Page for the online documentation.")
    Set extra(cnt,"url") = "DocBook.UI.SearchPageZen.cls"
    Set extra(cnt,"attrib") = ""
    
    //AAH791
    /*
    Set cnt = $INCREMENT(cnt)
    Set extra(cnt,"title") = $$$T("Master Index")
    Set extra(cnt,"subtitle") = $$$T("The Master Index page (list of main topics) for the online documentation.")
    Set extra(cnt,"url") = "DocBook.UI.Index.cls"
    Set extra(cnt,"attrib") = ""
    */

    Set x = $O(extra(""))
    While (x '= "") {
        Set url = $G(extra(x,"url"))
        &html<<TR CLASS="Home">>
        &html<<TD CLASS="HomeTitle" NOWRAP onclick="self.document.location='#(url)#';" onmouseover="this.className = 'HomeTitleHi'; self.document.all.item('x_#(x)#').className = 'HomeSubTitleHi';" onmouseout="this.className='HomeTitle'; self.document.all.item('x_#(x)#').className = 'HomeSubTitle';">>
        Write "<A HREF=""" _ url _ """ TITLE=""" _ $$$T("Show this set of books.") _ """ " _ ($G(extra(x,"attrib"))) _ ">" _ ($G(extra(x,"title"))) _ "&nbsp;</A>", !
        &html<</TD>>
        &html<<TD CLASS="HomeSubTitle" ID="x_#(x)#">#($G(extra(x,"subtitle")))#</TD></TR>>
        &html<<TR CLASS="HomeGap"><TD COLSPAN="2">&nbsp;</TD></TR>>
        Set x = $O(extra(x))
    }

    &html<</TABLE>>
]]></Implementation>
</Method>

<Method name="ShowBooks">
<Description>
Show list of books for the given set</Description>
<Internal>1</Internal>
<Implementation><![CDATA[

    // loop over books
    &sql(DECLARE BookCursor CURSOR FOR
        SELECT ID,blockid,title,subtitle,dbrole,remap
        INTO :id,:bookKey,:title,:desc, :role, :remap
        FROM DocBook.book
        WHERE container = :setid
        ORDER BY remap, title
    )
    
    &sql(OPEN BookCursor)
    &sql(FETCH BookCursor)

    While (SQLCODE = 0) {
        
        // if there is a preface, link to it (tutorial only!)
        If (role = "tutorial" && (##class(DocBook.preface).FindId(bookKey _ "_preface") '= "")) {
            Set link = "HREF=""DocBook.UI.Page.cls?KEY=" _ $ZCVT(bookKey,"O","URL") _ "_preface"""
        }
        Else {
            // link to TOC
            Set link = "HREF=""DocBook.UI.Page.cls?KEY=" _ $ZCVT(bookKey,"O","URL") _ """"
        }

        &html<<DIV CLASS="para"><UL><LI CLASS="SetTOC">
        <A CLASS="TOC" #(link)# TITLE='#(desc)#'><B>#(title)#</B></A>
        </UL></DIV>>

        &sql(FETCH BookCursor)
    }
    &sql(CLOSE BookCursor)
]]></Implementation>
</Method>

<Method name="GetGotoList">
<Description>
 Provide info for the goto list </Description>
<Internal>1</Internal>
<FormalSpec><![CDATA[&gtl:cdata]]></FormalSpec>
<Implementation><![CDATA[

    Set id = ..%Id()

    Quit // !!!!
    
    // list all of the books
    &sql(DECLARE G1Cursor CURSOR FOR
        SELECT ID,blockid,title,remap
        INTO :id,:key,:title,:remap
        FROM DocBook.book
        ORDER BY remap, Title
    )

    &sql(OPEN G1Cursor)
    &sql(FETCH G1Cursor)

    Set num = 1
    // KNBASE
    Set gtl(num) = $LB("KNBASE",$$$T("Technical Articles"))
    Set num = num + 1

    While (SQLCODE = 0) {
        Set gtl(num) = $LB(key,title)
        &sql(FETCH G1Cursor)
        Set num = num + 1
    }
    
    &sql(CLOSE G1Cursor)
    
    Quit
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
</Storage>
</Class>


<Class name="DocBook.IndexedText">
<Description>
This is a specialized datatype for properties that are word-search indexed.</Description>
<Super>%Library.Text</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>60807,47614.371157</TimeCreated>

<Parameter name="LANGUAGECLASS">
<Default>^DocBook.Config("INDEXCLASS")</Default>
</Parameter>

<Parameter name="IGNOREMARKUP">
<Default>1</Default>
</Parameter>
</Class>


<Class name="DocBook.IndexedTextE">
<Description>
This is a specialized datatype for properties that are word-search indexed.</Description>
<Super>%Text.English</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>60807,47614.371157</TimeCreated>

<Parameter name="FILTERNOISEWORDS">
<Description><![CDATA[
<PARAMETER>FILTERNOISEWORDS</PARAMETER> controls whether common-word filtering is enabled.  
Specifying a list of noise words can greatly reduce the size of a text index and the associated
index update time; however, to perform text search it is necessary to also remove noise words
from the search pattern, and this can produce some counter-intuitive results.  See example below.
<p>
Setting up noise word filtering is
a two-step process:  First enable noise word filtering by setting FILTERNOISEWORDS=1.  Second,
populate the noise word dictionary by calling the <METHOD>ExcludeCommonTerms</METHOD>
with the desired number of noise words to populate the corresponding DICTIONARY.  ExcludeCommonTerms
purges the previous set of noise words, so it may be called any number of times, but it is necessary
to rebuild all text indexes on the corresponding properties whenever the list of noise words is changed.
<p>
<b>Note:</b> The SQL predicate:
<EXAMPLE LANGUAGE=SQL>
SELECT myDocument FROM table t WHERE myDocument %CONTAINS ('to be or not to be')
</EXAMPLE>
will not find any qualifying rows if 'to, be, or, not' are all noise words; however, if <i>any</i>
of these terms are not noise words, then only the non-noise words will participate in the matching
process.
]]></Description>
<Default>0</Default>
</Parameter>

<Parameter name="NGRAMLEN">
<Description><![CDATA[
<PARAMETER>NGRAMLEN</PARAMETER> is the maximum number of words that will be regarded as a single 
search term.  When NGRAMLEN=2, two-word combinations will be added to any
index, in addition to single words.  Consecutive words exclude noise words.
]]></Description>
<Default>1</Default>
</Parameter>

<Parameter name="MINWORDLEN">
<Description><![CDATA[
MINWORDLEN specifies the minimum length word that will be retained
excluding ngram words and post-stemmed words.

<PARAMETER>MINWORDLEN</PARAMETER> provides a simple means of excluding terms based on their 
length, since it is usually the case that short words such as 'a', 'to', 'an', etc., are 
connectives that contain little information content.  The length refers to the number of 
characters in the original document.  Note that if stemming or thesaurus translation is 
enabled, then the length of the term in a text index may have fewer than MINWORDLEN 
characters.
<p>
<b>Note:</b> MINWORDLEN should typically be set to 3 or less when <PARAMETER>STEMMING</PARAMETER>=1,
since otherwise a word stem could be classified as a noise word even though alternate forms of the
word would not be classified as a noise word.  For example, with MINWORDLEN=5 "jump" would be discarded
as a noise word, whereas "jumps" would not.
 ]]></Description>
<Default>1</Default>
</Parameter>

<Parameter name="WORDCHARS">
<Description><![CDATA[
<PARAMETER>WORDCHARS</PARAMETER> specifies the characters other than alphabetic that may 
appear in a word.  For example, to regard hyphenated words as terms, include "-" in WORDCHARS.
Note that characters that are not numbers or words are ignored for the purpose of comparison
with the %CONTAINS operator, therefore the search pattern "off-hand" will match "off hand"
if WORDCHARS="", but not if WORDCHARS="-"; conversely, "off-hand" will match "offhand" if 
WORDCHARS="-", but not if WORDCHARS="".]]></Description>
<Default>$%</Default>
</Parameter>

<Parameter name="SEPARATEWORDS">
<Default>0</Default>
</Parameter>

<Method name="SeparateWords">
<Description>
Normally, the SeparateWords method is not called for
English text.  The parameter, SEPARATEWORDS, has been set so that 
DocBook-specific process can be done prior to building the value array.
</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>rawText:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	Set out = rawText

	Quit out
]]></Implementation>
</Method>
</Class>


<Class name="DocBook.IndexedTextJ">
<Description>
This is a specialized datatype for properties that are word-search indexed.</Description>
<Super>%Text.Japanese</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>60807,47614.371157</TimeCreated>

<Parameter name="FILTERNOISEWORDS">
<Description><![CDATA[
<PARAMETER>FILTERNOISEWORDS</PARAMETER> controls whether common-word filtering is enabled.  
Specifying a list of noise words can greatly reduce the size of a text index and the associated
index update time; however, to perform text search it is necessary to also remove noise words
from the search pattern, and this can produce some counter-intuitive results.  See example below.
<p>
Setting up noise word filtering is
a two-step process:  First enable noise word filtering by setting FILTERNOISEWORDS=1.  Second,
populate the noise word dictionary by calling the <METHOD>ExcludeCommonTerms</METHOD>
with the desired number of noise words to populate the corresponding DICTIONARY.  ExcludeCommonTerms
purges the previous set of noise words, so it may be called any number of times, but it is necessary
to rebuild all text indexes on the corresponding properties whenever the list of noise words is changed.
<p>
<b>Note:</b> The SQL predicate:
<EXAMPLE LANGUAGE=SQL>
SELECT myDocument FROM table t WHERE myDocument %CONTAINS ('to be or not to be')
</EXAMPLE>
will not find any qualifying rows if 'to, be, or, not' are all noise words; however, if <i>any</i>
of these terms are not noise words, then only the non-noise words will participate in the matching
process.
]]></Description>
<Default>0</Default>
</Parameter>

<Parameter name="NGRAMLEN">
<Description><![CDATA[
<PARAMETER>NGRAMLEN</PARAMETER> is the maximum number of words that will be regarded as a single 
search term.  When NGRAMLEN=2, two-word combinations will be added to any
index, in addition to single words.  Consecutive words exclude noise words.
]]></Description>
<Default>1</Default>
</Parameter>

<Parameter name="MINWORDLEN">
<Description><![CDATA[
MINWORDLEN specifies the minimum length word that will be retained
excluding ngram words and post-stemmed words.

<PARAMETER>MINWORDLEN</PARAMETER> provides a simple means of excluding terms based on their 
length, since it is usually the case that short words such as 'a', 'to', 'an', etc., are 
connectives that contain little information content.  The length refers to the number of 
characters in the original document.  Note that if stemming or thesaurus translation is 
enabled, then the length of the term in a text index may have fewer than MINWORDLEN 
characters.
<p>
<b>Note:</b> MINWORDLEN should typically be set to 3 or less when <PARAMETER>STEMMING</PARAMETER>=1,
since otherwise a word stem could be classified as a noise word even though alternate forms of the
word would not be classified as a noise word.  For example, with MINWORDLEN=5 "jump" would be discarded
as a noise word, whereas "jumps" would not.
 ]]></Description>
<Default>1</Default>
</Parameter>

<Parameter name="WORDCHARS">
<Description><![CDATA[
<PARAMETER>WORDCHARS</PARAMETER> specifies the characters other than alphabetic that may 
appear in a word.  For example, to regard hyphenated words as terms, include "-" in WORDCHARS.
Note that characters that are not numbers or words are ignored for the purpose of comparison
with the %CONTAINS operator, therefore the search pattern "off-hand" will match "off hand"
if WORDCHARS="", but not if WORDCHARS="-"; conversely, "off-hand" will match "offhand" if 
WORDCHARS="-", but not if WORDCHARS="".]]></Description>
<Default>$%</Default>
</Parameter>

<Method name="DBIsAN">
<Description>
This returns true is it's argument is an
ASCII alphanumeric character.  The argument is given as the 
code for the character.
</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>chrcode:%Integer</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	// short-circuit
	//Quit 0
	
	// numbers
	Quit:((chrcode > 47) && (chrcode < 58)) 1
	
	// uppercase
	Quit:((chrcode > 64) && (chrcode < 91)) 1
	
	//lowercase
	Quit:((chrcode > 96) && (chrcode < 123)) 1
	
	// fail
	Quit 0
]]></Implementation>
</Method>

<Method name="DBIsSpecial">
<Description>
This checks for other miscellaneous
sequences where we do not want spaces inserted.
</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>chr1:%Integer,chr2:%Integer</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	// short-circuit
	//Quit 0
	
	// pairs of sign characters: 43=plus, 45=minus
	Quit:(((chr1 = 43) || (chr1 = 45)) && ((chr2 = 43) || (chr2 = 45))) 1
	
	// signs preceding digits
	Quit:(((chr1 = 43) || (chr1 = 45)) && ((chr2 > 47) && (chr2 < 58))) 1
	
	// decimal preceding numbers: decimal=46
	Quit:((chr1 = 46) && ((chr2 > 47) && (chr2 < 58))) 1
	
	// numbers preceding decimal
	Quit:(((chr1 > 47) && (chr1 < 58)) && (chr2 = 46)) 1
	
	// fail
	Quit 0
]]></Implementation>
</Method>

<Method name="DBIsKatakana">
<Description>
This checks for Katakana characters
</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>chr1:%Integer,chr2:%Integer</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	// short-circuit
	//Quit 0
	
	// limits are x30A0 - x30FF  (12448 - 12543)
	//x30FB (12539) is middle dot
	Quit:((chr1 = 122539)  ||  (chr2 = 12539)) 0
	
	// remaining character range
	Quit:(((chr1 > 12447) && (chr1 < 12544)) && ((chr2 > 12447) && (chr2 < 12544))) 1
	
	// fail
	Quit 0
]]></Implementation>
</Method>

<Method name="DBIsMarkup">
<Description>
This checks for diacritical marks
</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>chr:%Integer</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	// short-circuit
	//Quit 0
	
	// half-width katakana voiced sound mark = xFF9E
	Quit:(chr = 65438) 1
		
	// half-width katakana semivoiced sound mark = xFF9F
	Quit:(chr = 65439) 1
		
	// katakana middle dot = x30FB
	Quit:(chr = 12539) 1
		
	// half-width katakana middle dot = xFF65
	Quit:(chr = 65381) 1
		
	// ideographic comma = x3001
	Quit:(chr = 12289) 1
		
	// ideographic full stop = x3002
	Quit:(chr = 12290) 1
	
	// fail
	Quit 0
]]></Implementation>
</Method>

<Method name="ConvertNameEntities">
<Description>
Convert entities used in product names
</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>text:%String</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	// short-circuit
	//Quit 0
	
	Set special = "eacute,Eacute,ntilde,Ntilde"
	Set replace = "e,E,n,N"
	
	For n = 1 : 1 : $LENGTH(special, ",")
	{
		Set pattern = "&" _ $PIECE(special, ",", n) _ ";"
		Set after = $FIND(text, pattern)
		While (after > 0)
		{
			Set $EXTRACT(text, (after - $LENGTH(pattern)), (after - 1)) = $PIECE(replace, ",", n)
			Set after = $FIND(text, pattern)
		}
	}
	
	// done
	Quit text
]]></Implementation>
</Method>

<Method name="EntitySize">
<Description>
This checks for diacritical marks
</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>text:%String</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	// short-circuit
	//Quit 0
	
	Set common = "amp,lt,gt"
	Set common = common _ ",eacute,Eacute,ntilde,Ntilde"
	Set common = common _ ",nbsp"
	Set common = common _ ",mdash,ndash"
	Set common = common _ ",quot,ldquo,rdquo,rsquo"
	Set common = common _ ",#39"
	
	// test common ones
	Set sz = 0
	For i = 1 : 1 : $LENGTH(common, ",")
	{
		Set entity = "&" _ $PIECE(common, ",", i) _ ";"
		If ($EXTRACT(text, 1, $LENGTH(entity)) [ entity)
		{
			Set sz = $LENGTH(entity)
			Quit
		}
	}
	Quit:(sz > 0) sz
	
	// find the end
	Set span = $FIND(text, ";")
	
	// too far
	Quit:(span > 9) 0
	Set span = span - 1
	
	// hexidecimal entity
	If ($ZCONVERT($EXTRACT(text, 2, 3), "U") [ "#X")
	{
		For i = 4 : 1 : (span - 1)
		{
			Set c = $ZCONVERT($EXTRACT(text, i), "U")
			If ('("ABCDEF0123456789" [ c))
				{
					Set span = 0
					Quit
				}
		}
		Quit span
	}
	
	// numeric entity
	If ($EXTRACT(text, 2) [ "#")
	{
		For i = 3 : 1 : (span - 1)
		{
			Set c = $EXTRACT(text, i)
			If ('("0123456789" [ c))
				{
					Set span = 0
					Quit
				}
		}
		Quit span
	}
	
	// arbitrary entity
	For i = 2 : 1 : (span - 1)
	{
		Set c = $ZCONVERT($EXTRACT(text, i), "U")
		If ('("ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" [ c))
			{
				Set span = 0
				Quit
			}
	}
	Quit span
	
	// fail
	Quit 0
]]></Implementation>
</Method>

<Method name="SeparateWords">
<Description>
This is a copy of the default routine from %Text.Japanese
except that it does a better job at grouping characters.  For example, some ASCII 
strings are kept together.  Groups of katakana characters are kept together 
and only separated by the middle-dot (x30FB).  Also diacritical marks are removed
from words.
</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>rawText:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	Set filteredText = rawText
	
	// convert any katakana word separator (middle dot, x30FB) to space
	Set filteredText = $TRANSLATE(filteredText, $CHAR(12539), $CHAR(32))
	
	// convert product names
	Set filteredText = ..ConvertNameEntities(filteredText)
	
	Set out = ""
	Set lastc = 0
	Set N = 1
	While (N <= $LENGTH(filteredText))
	{	Set c = $EXTRACT(filteredText, N)
		Set sep = " "
		Set thisc = $ASCII(c)
		
		If (..DBIsMarkup(thisc))
		{
			Set lastc = 0
			Set N = N + 1
			Continue
		}
		
		// treat entities as units
		If (thisc = 38)
		{
			Set sz = ..EntitySize($EXTRACT(filteredText, N, *))
			If (sz > 0)
			{
				Set out = out _ sep _ $EXTRACT(filteredText, N, (N + sz - 1))
				Set lastc = 59
				Set N = N + sz
				Continue
			}
		}
		
		// other compact sequences
		If ((..DBIsAN(lastc)) && (..DBIsAN(thisc)))
		{
			Set sep = ""
		}
		ElseIf (..DBIsSpecial(lastc, thisc))
		{
			Set sep = ""
		}
		ElseIf (..DBIsKatakana(lastc, thisc))
		{
			Set sep = ""
		}
		ElseIf (thisc = 32)
		{
			Set sep = ""
		}
		
		Set out = out _ sep _ c
		Set lastc = thisc
		Set N = N + 1
	}
	Set $extract(out,1,2) = $extract(out,2,2)
	
	If (0)
	//If (($DATA(^CACHETEMPGB) > 0) && ($LENGTH(out) > 0) && ($LENGTH(rawText) > 0))
	{
		Set ^CACHETEMPGB = ^CACHETEMPGB + 1
		Set ^CACHETEMPGB(^CACHETEMPGB, "In") = rawText
		Set ^CACHETEMPGB(^CACHETEMPGB, "Ot") = out
	}

	Quit out
]]></Implementation>
</Method>
</Class>


<Class name="DocBook.InventoryXML">
<Description>
This class contains methods used to construct the inventory
of the database as an XML structure.  It counts the SETs, BOOKs,
and ARTICLEs, including tutorials.
</Description>
<ClassType/>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Library.RegisteredObject</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>60423,56772</TimeCreated>

<Parameter name="DefaultOutput">
<Default>C:\TEMP\DBInventory.xml</Default>
</Parameter>

<Method name="Generate">
<Description>
This generates the inventory in the file path given</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>OutputPath:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	; Set up the temp file
	Set Status = ..SetupFile(.File, OutputPath)
	If ($SYSTEM.Status.IsError(Status))
	{
		Do $SYSTEM.Status.DisplayError(Status)
		Quit
	}

	; write the standard file header
	Do ..WritePrologue(File)

	; write the book data
	Do File.WriteLine("<!-- Sets -->")
	Do ..WriteSets(File)

	; write the article data
	Do File.WriteLine("<!-- Articles -->")
	Do ..WriteArticles(File)

	; write the standard file trailer
	Do ..WriteEpilogue(File)

	; Done with the file
	Do File.Close()

	Write $$$T("Wrote: "),File.Name,!

	Quit $$$OK

]]></Implementation>
</Method>

<Method name="SetupFile">
<Description>
Writes the standard file header</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&XMLFile:%Library.File,OutTarget:%Library.String]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// Use the current datetime as part of the name
	Set filepath = ..#DefaultOutput
	Set:($LENGTH(OutTarget) > 0) filepath = OutTarget

	Set XMLFile = ##class(%Library.File).%New(filepath)
	Do XMLFile.Open("WSNK\UTF8\")

	Quit $$$OK

]]></Implementation>
</Method>

<Method name="WritePrologue">
<Description>
Writes the standard file header</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>XMLFile:%Library.File</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// the prologue for an inventory file
	Do XMLFile.WriteLine("<?xml version=""1.0"" encoding=""utf-8""?>")
	Do XMLFile.WriteLine("<!DOCTYPE inventory [")
	Do XMLFile.WriteLine("")
	Do XMLFile.WriteLine("<!ELEMENT inventory (description*, sets?, articles?)>")
	Do XMLFile.WriteLine("<!ATTLIST inventory product CDATA #REQUIRED")
	Do XMLFile.WriteLine("                    version CDATA #REQUIRED")
	Do XMLFile.WriteLine("                    date CDATA #REQUIRED")
	Do XMLFile.WriteLine("                    time CDATA #REQUIRED>")
	Do XMLFile.WriteLine("")
	Do XMLFile.WriteLine("<!ELEMENT description (#PCDATA)>")
	Do XMLFile.WriteLine("")
	Do XMLFile.WriteLine("<!ELEMENT sets (set*)>")
	Do XMLFile.WriteLine("")
	Do XMLFile.WriteLine("<!ELEMENT set (title, subtitle, books*)>")
	Do XMLFile.WriteLine("<!ATTLIST set id CDATA #REQUIRED")
	Do XMLFile.WriteLine("              name CDATA #REQUIRED")
	Do XMLFile.WriteLine("              status CDATA #REQUIRED")
	Do XMLFile.WriteLine("              order CDATA #REQUIRED>")
	Do XMLFile.WriteLine("")
	Do XMLFile.WriteLine("<!ELEMENT books (book*)>")
	Do XMLFile.WriteLine("")
	Do XMLFile.WriteLine("<!ELEMENT book (title, subtitle)>")
	Do XMLFile.WriteLine("<!ATTLIST book id CDATA #REQUIRED")
	Do XMLFile.WriteLine("               name CDATA #REQUIRED")
	Do XMLFile.WriteLine("               status CDATA #REQUIRED")
	Do XMLFile.WriteLine("               order CDATA #REQUIRED")
	Do XMLFile.WriteLine("               role CDATA #REQUIRED>")
	Do XMLFile.WriteLine("")
	Do XMLFile.WriteLine("<!ELEMENT articles (role*)>")
	Do XMLFile.WriteLine("")
	Do XMLFile.WriteLine("<!ELEMENT role (article*)>")
	Do XMLFile.WriteLine("<!ATTLIST role category CDATA #REQUIRED>")
	Do XMLFile.WriteLine("")
	Do XMLFile.WriteLine("<!ELEMENT article (title, subtitle)>")
	Do XMLFile.WriteLine("<!ATTLIST article id CDATA #REQUIRED")
	Do XMLFile.WriteLine("                  name CDATA #REQUIRED")
	Do XMLFile.WriteLine("                  status CDATA #REQUIRED")
	Do XMLFile.WriteLine("                  order CDATA #REQUIRED")
	Do XMLFile.WriteLine("                  role CDATA #REQUIRED>")
	Do XMLFile.WriteLine("")
	Do XMLFile.WriteLine("<!ELEMENT title (#PCDATA)>")
	Do XMLFile.WriteLine("")
	Do XMLFile.WriteLine("<!ELEMENT subtitle (#PCDATA)>")
	Do XMLFile.WriteLine("")
	Do XMLFile.WriteLine("<!ENTITY % winansi SYSTEM ""winansi.entities"">")
	Do XMLFile.WriteLine("%winansi;")
	Do XMLFile.WriteLine("")
	Do XMLFile.WriteLine("]>")

	Do XMLFile.WriteLine("<!-- Generated file - Do Not Edit -->")

	Set FmtMaj = $SYSTEM.Version.GetMajor()
	Set FmtMin = $SYSTEM.Version.GetMinor()
	Set FmtPnt = $SYSTEM.Version.GetPoint()
	Set FmtBld = $SYSTEM.Version.GetBuildNumber()

	Set FmtVersion = FmtMaj
	    	        _ "."
	    	        _ FmtMin
	    	        _ "."
	    	        _ $SELECT($LENGTH(FmtPnt = 0):"0", 1:FmtPnt)
	    	        _ "."
	    	        _ FmtBld

	Set now = $ZUTIL(188)
	Set FmtDate = $ZDATE(now, 3)
	Set FmtTime = $ZTIME(now, 1)

	Do XMLFile.Write("<inventory")
	Do XMLFile.Write((" product=""" _ $SYSTEM.Version.GetProduct() _ """"))
	Do XMLFile.Write(" version=""" _ FmtVersion _ """")
	Do XMLFile.Write(" date=""" _ FmtDate _ """")
	Do XMLFile.Write(" time=""" _ FmtTime _ """")
	Do XMLFile.WriteLine(">")
	Do XMLFile.WriteLine("<description/>")

	Quit $$$OK

]]></Implementation>
</Method>

<Method name="WriteEpilogue">
<Description>
Writes the standard file trailer</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>XMLFile:%Library.File</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// end the file
	Do XMLFile.WriteLine("</inventory>")
	Quit $$$OK

]]></Implementation>
</Method>

<Method name="GetSets">
<Description>
Get the SETs in the proper order</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&SetData]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// collect the sets from the index
    Set setid = $O(^DocBook.blockI("setIdx",""))
    Set keyinx = 0

    While (setid '="")
    {
        Set set = ##class(DocBook.set).%OpenId(setid)

        If (set '="")
        {
            Set keyinx = $INCREMENT(keyinx)
            Set sortkey = set.remap
            If (sortkey = "")
            {
                Set sortkey = "~" _ (1000 + keyinx)
            }
            Set setorder(sortkey) = set

            Set set = ""
        }

        Set setid = $O(^DocBook.blockI("setIdx",setid))
    	;Write "SETID=",setid,!
    }

    Set setid = $ORDER(setorder(""))
    Set keyinx = 0
    While (setid '="")
    {
        Set set = $GET(setorder(setid))

    	; ignore tutorial material
    	;If ($ZCONVERT(set.id, "L") [ "tutorial")
    	;{
       	;	Set setid = $ORDER(setorder(setid))
    	;	continue
    	;}
    	Set keyinx = keyinx + 1
        Set SetData(keyinx, "ID") = set.%Id()
        Set SetData(keyinx, "name") = set.id
        Set SetData(keyinx, "title") = set.title
        Set SetData(keyinx, "subtitle") = set.subtitle
        Set SetData(keyinx, "status") = set.status
        Set SetData(keyinx, "order") = setid

        Set set = ""
        Set setid = $ORDER(setorder(setid))
    }
    Set SetData(0) = keyinx

	Quit $$$OK
]]></Implementation>
</Method>

<Method name="GetBooks">
<Description>
Get the books belonging to the SET</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[SetID:%Integer,&BookData]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    ; loop over books
    &sql(DECLARE BookCursor CURSOR FOR
        SELECT ID, blockid, title, subtitle, dbstatus, dbrole, remap
        INTO :id, :bookKey, :title, :desc, :dbstatus, :role, :remap
        FROM DocBook.book
        WHERE container = :SetID
        ORDER BY remap, title
    )

    &sql(OPEN BookCursor)
    &sql(FETCH BookCursor)

    Set keyinx = 0
    While (SQLCODE = 0)
    {
    	Set keyinx = keyinx + 1
    	Set BookData(keyinx, "ID") = id
        Set BookData(keyinx, "name") = bookKey
        Set BookData(keyinx, "title") = title
        Set BookData(keyinx, "subtitle") = desc
        Set BookData(keyinx, "status") = dbstatus
        Set BookData(keyinx, "order") = remap
        Set BookData(keyinx, "role") = role

        &sql(FETCH BookCursor)
    }
    &sql(CLOSE BookCursor)

    Set BookData(0) = keyinx

	Quit $$$OK
]]></Implementation>
</Method>

<Method name="GetArticles">
<Description>
Get the articles that have been loaded</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&ArticleData]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    ; loop over articles within role
	&sql(DECLARE ArticleCursor CURSOR FOR
		SELECT ID, blockid, title, subtitle, dbstatus, dbrole, remap
		INTO :id, :key, :title, :desc, :dbstatus, :subj, :remap
		FROM DocBook.article
		ORDER BY dbrole, remap, title
	)

	&sql(OPEN ArticleCursor)
	&sql(FETCH ArticleCursor)

    Set keyinx = 0
    While (SQLCODE = 0)
    {
    	Set keyinx = keyinx + 1
    	Set ArticleData(keyinx, "ID") = id
        Set ArticleData(keyinx, "name") = key
        Set ArticleData(keyinx, "title") = title
        Set ArticleData(keyinx, "subtitle") = desc
        Set ArticleData(keyinx, "status") = dbstatus
        Set ArticleData(keyinx, "role") = subj
        Set ArticleData(keyinx, "order") = remap

        &sql(FETCH ArticleCursor)
    }
    &sql(CLOSE ArticleCursor)

    Set ArticleData(0) = keyinx

	Quit $$$OK
]]></Implementation>
</Method>

<Method name="TEXT">
<Description>
WHandle text appropriately</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>text:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	Quit (text)
	Quit ("<!" _ "[CDATA[" _ text _ "]" _ "]" _ ">")
]]></Implementation>
</Method>

<Method name="WriteSets">
<Description>
Write the sets page, each of the books contents and then the articles</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>XMLFile:%Library.File</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	// start the iventory
	Set Status = ..GetSets(.SETs)
	If ($SYSTEM.Status.IsError(Status))
	{
		Do $SYSTEM.Status.DisplayError(Status)
		Quit
	}

	Do XMLFile.WriteLine("<sets>")
	For i = 1 : 1 : SETs(0)
	{
		Do XMLFile.Write("<set")
		Do XMLFile.Write(" id=""" _ SETs(i, "ID") _ """")
		Do XMLFile.Write(" name=""" _ SETs(i, "name") _ """")
		Do XMLFile.Write(" status=""" _ SETs(i, "status") _ """")
		Do XMLFile.WriteLine(" order=""" _ SETs(i, "order") _ """>")

		Do XMLFile.WriteLine("<title>" _ ..TEXT(SETs(i, "title")) _ "</title>")
		Do XMLFile.WriteLine("<subtitle>" _ ..TEXT(SETs(i, "subtitle")) _ "</subtitle>")

		Do XMLFile.WriteLine("<books>")
		Do ..WriteBooks(XMLFile, SETs(i, "ID"))
		Do XMLFile.WriteLine("</books>")

		Do XMLFile.WriteLine("</set>")
	}
	Do XMLFile.WriteLine("</sets>")

	Quit $$$OK

]]></Implementation>
</Method>

<Method name="WriteBooks">
<Description>
Writes the books in the set</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>XMLFile:%Library.File,setid:%Integer</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set Status = ..GetBooks(setid, .BOOKs)
	If ($SYSTEM.Status.IsError(Status))
	{
		Do $SYSTEM.Status.DisplayError(Status)
		Quit
	}

	For i = 1 : 1 : BOOKs(0)
	{
		Do XMLFile.Write("<book")
		Do XMLFile.Write(" id=""" _ BOOKs(i, "ID") _ """")
		Do XMLFile.Write(" name=""" _ BOOKs(i, "name") _ """")
		Do XMLFile.Write(" status=""" _ BOOKs(i, "status") _ """")
		Do XMLFile.Write(" order=""" _ BOOKs(i, "order") _ """")
		Do XMLFile.WriteLine(" role=""" _ BOOKs(i, "role") _ """>")

		Do XMLFile.WriteLine("<title>" _ ..TEXT(BOOKs(i, "title")) _ "</title>")
		Do XMLFile.WriteLine("<subtitle>" _ ..TEXT(BOOKs(i, "subtitle")) _ "</subtitle>")

		Do XMLFile.WriteLine("</book>")
	}

	Quit $$$OK

]]></Implementation>
</Method>

<Method name="WriteArticles">
<Description>
Writes the page for the articles</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>XMLFile:%Library.File</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set Status = ..GetArticles(.ARTICLEs)
	If ($SYSTEM.Status.IsError(Status))
	{
		Do $SYSTEM.Status.DisplayError(Status)
		Quit
	}

	Do XMLFile.WriteLine("<articles>")

	Set lastrole = ""
	For i = 1 : 1 : ARTICLEs(0)
	{
		If (lastrole '= ARTICLEs(i, "role"))
		{
			If (i > 1)
			{
				Do:(lastrole '= "") XMLFile.WriteLine("</role>")
			}
			Do XMLFile.Write("<role")
			Do XMLFile.WriteLine(" category=""" _ ARTICLEs(i, "role") _ """>")
			Set lastrole = ARTICLEs(i, "role")
		}

		Do XMLFile.Write("<article")
		Do XMLFile.Write(" id=""" _ ARTICLEs(i, "ID") _ """")
		Do XMLFile.Write(" name=""" _ ARTICLEs(i, "name") _ """")
		Do XMLFile.Write(" status=""" _ ARTICLEs(i, "status") _ """")
		Do XMLFile.Write(" order=""" _ ARTICLEs(i, "order") _ """")
		Do XMLFile.WriteLine(" role=""" _ ARTICLEs(i, "role") _ """>")

		Do XMLFile.WriteLine("<title>" _ ..TEXT(ARTICLEs(i, "title")) _ "</title>")
		Do XMLFile.WriteLine("<subtitle>" _ ..TEXT(ARTICLEs(i, "subtitle")) _ "</subtitle>")

		Do XMLFile.WriteLine("</article>")
	}

	Do:(lastrole '= "") XMLFile.WriteLine("</role>")
	Do XMLFile.WriteLine("</articles>")

	Quit $$$OK

]]></Implementation>
</Method>
</Class>


<Class name="DocBook.KNBase">
<Description>
This is a special container that renders the Technical Articles index page for the Documentation system.</Description>
<ClassType>persistent</ClassType>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>59241,40474</TimeCreated>

<Method name="GetBannerInfo">
<Internal>1</Internal>
<FormalSpec>info:DocBook.UI.BannerInfo</FormalSpec>
<Implementation><![CDATA[
	Set info.title = $$$T("Technical Articles")
	Set info.booktitle = $$$T("InterSystems Online Documentation")
	Set info.chap = ""
	Set info.prev = ""
	Set info.next = ""

]]></Implementation>
</Method>

<Method name="HTMLRender">
<Internal>1</Internal>
<Implementation><![CDATA[
	Do ..ShowArticles()

]]></Implementation>
</Method>

<Method name="ShowArticles">
<Description>
Show list of articles</Description>
<Internal>1</Internal>
<Implementation><![CDATA[

	Set sort = "SUBJECT"
	Set sort = $G(%request.Data("Sort",1),sort)
	
	// preface
	&html<<DIV CLASS="para1">>
	Write $$$T("Welcome to the InterSystems technical articles for version ") _ $system.Version.GetNumber(), !
	Write $$$T("These are a compendium of material on specific technical topics."), !
	Write $$$T("The available articles are listed below."), !
	&html<</DIV>>
		
	// sort form
	&html<<DIV CLASS="para">>
	&html<<FORM NAME="SORT">>
	&html<<TABLE CLASS="SearchForm" CELLPADDING="2" BGCOLOR="silver" CELLSPACING="0" BORDER="0">>
	&html<<TR><TD><B>#($$$T("Sort articles by:"))#</B>&nbsp;>
	&html<<INPUT TYPE="HIDDEN" NAME="KEY" VALUE="KNBASE">>
	&html<<INPUT TYPE="RADIO" NAME="Sort" VALUE="SUBJECT" #($S(sort="SUBJECT":"CHECKED",1:""))# onclick="self.document.SORT.submit();">#($$$T("Subject"))#&nbsp;>
	&html<<INPUT TYPE="RADIO" NAME="Sort" VALUE="TITLE" #($S(sort="TITLE":"CHECKED",1:""))# onclick="self.document.SORT.submit();">#($$$T("Title"))#&nbsp;>
	&html<<INPUT TYPE="RADIO" NAME="Sort" VALUE="DATE" #($S(sort="DATE":"CHECKED",1:""))# onclick="self.document.SORT.submit();">#($$$T("Date"))#&nbsp;>
	&html<</TD></TR></TABLE>>
	&html<</FORM></DIV>>

	Do:sort="TITLE" ..ShowByTitle()
	Do:sort="SUBJECT" ..ShowBySubject()
	Do:sort="DATE" ..ShowByDate()

]]></Implementation>
</Method>

<Method name="ShowByTitle">
<Internal>1</Internal>
<Implementation><![CDATA[

	// loop over articles
	&sql(DECLARE TCursor CURSOR FOR
		SELECT ID,blockid,title,subtitle,sourcetime,dbrole
		INTO :setid,:key,:title,:desc,:time,:subj
		FROM DocBook.article
		ORDER BY title
	)
	
	&sql(OPEN TCursor)
	&sql(FETCH TCursor)

	While (SQLCODE = 0) {
		
		Set link = "HREF=""DocBook.UI.Page.cls?KEY=" _ $ZCVT(key,"O","URL") _ """"

		&html<<DIV CLASS="para"><UL><LI>
		<A CLASS="TOC" #(link)# TITLE='#($ZCVT(desc,"O","HTML"))#'>#(title)#</A>&#151;#(subj)#&#151;<SPAN CLASS="sourcetime">#(time)#</SPAN>
		</UL></DIV>>

		&sql(FETCH TCursor)
	}
	&sql(CLOSE TCursor)

]]></Implementation>
</Method>

<Method name="ShowBySubject">
<Internal>1</Internal>
<Implementation><![CDATA[

	// loop over articles
	&sql(DECLARE SCursor CURSOR FOR
		SELECT ID,blockid,title,subtitle,sourcetime,dbrole,remap
		INTO :setid,:key,:title,:desc,:time,:subj,:remap
		FROM DocBook.article
		ORDER BY remap,dbrole,title
	)
	
	&sql(OPEN SCursor)
	&sql(FETCH SCursor)
	
	Set lastsubj = ""

	While (SQLCODE = 0) {
		
		Set link = "HREF=""DocBook.UI.Page.cls?KEY=" _ $ZCVT(key,"O","URL") _ """"
		
		If (lastsubj '= subj) {
			&html<<DIV CLASS="set">#(subj)#</DIV>>
			Set lastsubj = subj
		}

		&html<<DIV CLASS="para"><UL><LI>
		<A CLASS="TOC" #(link)# TITLE='#($ZCVT(desc,"O","HTML"))#'>#(title)#</A>&#151;<SPAN CLASS="sourcetime">#(time)#</SPAN>
		</UL></DIV>>

		&sql(FETCH SCursor)
	}
	&sql(CLOSE SCursor)

]]></Implementation>
</Method>

<Method name="ShowByDate">
<Internal>1</Internal>
<Implementation><![CDATA[

	// loop over articles
	&sql(DECLARE DCursor CURSOR FOR
		SELECT ID,blockid,title,subtitle,sourcetime,dbrole
		INTO :setid,:key,:title,:desc,:time,:subj
		FROM DocBook.article
		ORDER BY sourcetime DESC
	)
	
	&sql(OPEN DCursor)
	&sql(FETCH DCursor)

	While (SQLCODE = 0) {
		
		Set link = "HREF=""DocBook.UI.Page.cls?KEY=" _ $ZCVT(key,"O","URL") _ """"

		&html<<DIV CLASS="para"><UL><LI>
		<A CLASS="TOC" #(link)# TITLE='#($ZCVT(desc,"O","HTML"))#'>#(title)#</A>&#151;#(subj)#&#151;<SPAN CLASS="sourcetime">#(time)#</SPAN>
		</UL></DIV>>

		&sql(FETCH DCursor)
	}
	&sql(CLOSE DCursor)

]]></Implementation>
</Method>

<Method name="GetGotoList">
<Description>
 Provide info for the goto list </Description>
<Internal>1</Internal>
<FormalSpec><![CDATA[&gtl:cdata]]></FormalSpec>
<Implementation><![CDATA[

	Set id = ..%Id()

	// list all of the articles
	&sql(DECLARE G1Cursor CURSOR FOR
		SELECT ID,blockid,title
		INTO :id,:key,:title
		FROM DocBook.article
		ORDER BY title
	)

	&sql(OPEN G1Cursor)
	&sql(FETCH G1Cursor)

	Set num = 1
	While (SQLCODE = 0) {
		Set gtl(num) = $LB(key,title)
		&sql(FETCH G1Cursor)
		Set num = num + 1
	}
	&sql(CLOSE G1Cursor)
	
	Quit

]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
</Storage>
</Class>


<Class name="DocBook.L10N">
<Description>
Utility class for localization</Description>
<ClassType/>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Library.RegisteredObject</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>58822,45005</TimeCreated>

<Method name="DBMsg">
<Description>
Localizer for message fragments</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>cls:%String,num:%String,args...:%List</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    // begin temp code used for testing
    Set msg = $GET(^DocBook.L10N(cls, num), "")
    If (msg = "")
    {
        // this avoids getting the test text tangled in the 
        // localization automation
        // Cannot{space}
        Set msg = $CHAR(67, 97, 110, 110, 111, 116, 32)
        // find{space}
        Set msg = msg _ $CHAR(102, 106, 110, 100, 32)
        // message:{space}
        Set msg = msg _ $CHAR(109, 101, 115, 115, 97, 103, 101, 58, 32)
        Set msg = msg _ cls _ %CHAR(95) _ num
    }
    Quit msg
    // end temp code used for testing
    
	// get the message

	Set id = cls _ "_" _ num
	Set msg = %response.GetText("","DocBookApp",id,id,args...)
	Quit msg

]]></Implementation>
</Method>
</Class>


<Class name="DocBook.Librarian">
<Description><![CDATA[
The librarian finds matches for requested information.<BR>
NAMESPACE:  current namespace<BR>
CONTEXT: where you are calling this from: EDITOR | INSPECTOR<BR>
LANGUAGE: language of of help item (COS, BASIC, etc.)<BR>
ELEMENT: For editor, the syntax element #; for Inspector what type of keyword: Class, Property, etc.<BR>
TOKEN: Either the current token (editor) or the current keyword (inspector)<BR>]]></Description>
<Abstract>1</Abstract>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>59241,40474</TimeCreated>

<Method name="FindURL">
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>context:%String="",language:%String="",element:%String="",token:%String="",namespace:%String="",selected:%String="",document:%String=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    Set url = "DocBook.UI.Page.cls"
    Set searchBook = ""
    Set anchor = ""

    // COS  element: 31 = objname
    // CLS  element: 5 = class
    // BAS  element: 5 = class
    // SQL  element: 8 = class
    
    Set language = ..GetLangName(language)
    Set context = $ZCVT(context,"L")
    
    If ((context = "editor") && 
            (((language = "COS") && (element = 31)) ||
            ((language = "CLS") && (element = 5)) ||
            ((language = "BAS") && (element = 5)) ||
            ((language = "SQL") && (element = 8)) )
            ) {
                
        // we are looking for a class name
        // (or an SQL table name...)
        // We *should* test if the class/table exists....
        
        // get IP address of this machine
        Set url = "/csp/documatic/%25CSP.Documatic.cls?APP=1" 
        
        // get normalized classname
        If ($E(token,1,1) = "%") {
            // % class should be ok
            Set classname = token
        }
        ElseIf (token [ ".") {
            // if there is a dot, assume this is a full class name
            Set classname = token
        }
        Else {
            // normalize using the Document name
            Set classname = token
            
            // get classname part of document (after final /)
            Set docpkg = $P(document,"/",$L(document,"/"))
            
            // take off .cls & classname
            Set docpkg = $P(docpkg,".",1,$L(docpkg,".")-2)
            Set:docpkg'="" classname = docpkg _ "." _ classname 
        }
        
        Set url = url _ "&CLASSNAME=" _ $zcvt(classname,"O","URL")
        
        // make sure we are pointing to right namespace
        Set:(namespace'="") url = url _ "&LIBRARY=" _ $zcvt(namespace,"O","URL")
    }
    ElseIf (context = "wizard") {
        Set id = "GSTD_" _ element _ "_wizard"
        If (##class(DocBook.block).FindId(id) '= "") {
            
            &sql(SELECT component->blockid INTO :chapter FROM block WHERE blockid = :id)
            If (chapter '= "") {
                Set url = "DocBook.UI.Page.cls?KEY=" _ chapter _ "#" _ id
            }
            Else {
                Set url = "DocBook.UI.Page.cls?KEY=" _ id
            }
        }
        Else {
            Set url = "DocBook.UI.SearchPageZen.cls?KEY=&KeyWord=" _ $S(selected'="":selected,1:token)
        }
    }
    ElseIf (context = "options") {
        // options dialog
        Set url = "DocBook.UI.Page.cls?KEY=GSTD_Options"
    }
    ElseIf (context = "template") {
        // template dialog
        Set url = "DocBook.UI.Page.cls?KEY=GSTD_Templates"
    }
    ElseIf (context = "browser") {
        // class browser
        Set url = "DocBook.UI.Page.cls?KEY=GSTD_classes#GSTD_classes_browser"
    }
    ElseIf (context = "attach") {
        // attach to process dlg
        Set url = "DocBook.UI.Page.cls?KEY=GSTD_debugger#GSTD_debugger_attach"
    }
    ElseIf (context = "projectsettings") {
        // project settings dialog
        Set url = "DocBook.UI.Page.cls?KEY=GSTD_Commands#GSTD_Commands_Project"
    }
    ElseIf (context = "debugsettings") {
    // debug settings dialog
        Set url = "DocBook.UI.Page.cls?KEY=GSTD_Debugger"
    }
    ElseIf (context = "package") {
        // package settings dialog
        Set url = "DocBook.UI.Page.cls?KEY=GSTD_classes#GSTD_classes_package"
    }
    ElseIf (context = "inherit") {
        // inherited/derived classes dialog
        Set url = "DocBook.UI.Page.cls?KEY=GSTD_classes#GSTD_classes_super"
    }
    ElseIf (context = "override") {
        // override wizard
        Set url = "DocBook.UI.Page.cls?KEY=GSTD_methods#GSTD_methods_override"
    }
    Else {
        // look it up
        Set id = ..Lookup(context,language,element,token,selected,.searchBook,.anchor)
        If (id '= "") {
            Set url = "DocBook.UI.Page.cls?KEY=" _ id
            Set:anchor'="" url = url _ "#" _ anchor
        }
        Else {
            Set txt = $ZSTRIP($S(selected'="":selected,1:token),"<>W")
            If (txt = "") {
                // nothing to do: show Studio TOC
                Set url = "DocBook.UI.Page.cls?KEY=GSTD"
            }
            Else {
                Set txt = $ZCVT(txt,"O","URL")
                Set url = "DocBook.UI.SearchPageZen.cls?KEY=&KeyWord=" _ $S(selected'="":selected,1:txt)
                If (searchBook '= "") {
                    // find ID of searchBlock
                    &sql(SELECT ID INTO :sid FROM DocBook.BOOK WHERE blockid = :searchBook)
                    Set url = url _ "&BkFilter=" _ sid
                    
                    If (searchBook = "ROBJ") {
                        // !!!
                        Set url = url _ "&Include=Title"
                    }
                }
            }
        }
    }
    
    Quit url
]]></Implementation>
</Method>

<Method name="GetLangName">
<Description>
Convert a Studio language id values to a string</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%Integer</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    If (id = 1) {
        Quit "COS"
    }
    ElseIf (id = 2) {
        Quit "SQL"
    }
    ElseIf (id = 3) {
        Quit "CLS"
    }
    ElseIf (id = 4) {
        Quit "BAS"
    }
    ElseIf (id = 5) {
        Quit "CSP"
    }
    ElseIf (id = 11) {
        Quit "JS"
    }
    ElseIf (id = 13) {
        Quit "JAVA"
    }
    
    Quit "UNKNOWN"
]]></Implementation>
</Method>

<Method name="Lookup">
<Description><![CDATA[
Finds the closest docid for the requested information.<br>
<var>context</var> is the Studio context: EDITOR | INSPECTOR<br>
<var>language</var> is the current language.<br>
<var>element</var> syntax element # or keyword type.<br>
<var>token</var> current token or keyword.<br>
<var>selected</var> selected text.<br>]]></Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[context:%String,language:%String,element:%String,token:%String,selected:%String,&searchBook:%String,&anchor:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    Set id = ""
    
    // first branch on context
    If (context = "inspector") {
        Set id = ..LookupClassKeyword(element,token)
    }
    ElseIf (context = "editor") {
        If (language = "COS") {
            Set id =  ..LookupCOS(element,token,selected,.anchor)
        }
        ElseIf (language = "BAS") {
            Set id =  ..LookupBASIC(element,token)
        }
        ElseIf (language = "CSP") {
            Set id =  ..LookupCSP(element,token,.searchBook)
        }
        ElseIf (language = "SQL") {
            Set id =  ..LookupSQL(element,token)
        }
        ElseIf (language = "CLS") {
            Set id =  ..LookupCLS(element,token,.searchBook,.anchor)
        }
    }
    
    Quit id
]]></Implementation>
</Method>

<Method name="LookupClassKeyword">
<Description>
Search for a class definition keyword</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>element:%String,token:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    Set id = "ROBJ_" _ $ZCVT(element,"L") _ "_" _ $ZCVT(token,"L")
    If (##class(DocBook.block).FindId(id) '= "") {
        Quit id
    }

    Quit ""
]]></Implementation>
</Method>

<Method name="LookupCOS">
<Description>
Search for a Cache ObjectScript item.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[element:%String,token:%String,selected:%String="",&anchor:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    // convert Studio element id # to letter
    Set token = $ZCVT(token,"L")
    // strip out leading $
    Set token = $TR(token,"$","")

    Set selected = $ZCVT(selected,"L")
        
    Set el = ""
    Set id = ""
    Set anchor = ""
    If (element = 32) {
        // command
        Set el = "c"
        
        // expand commands
        Set token = $CASE(token,"b":"break","c":"close","d":"do","e":"else","f":"for",
                                "g":"goto","h":"hang","i":"if","j":"job",
                                "k":"kill","l":"lock","m":"merge","n":"new","o":"open",
                                "p":"print","q":"quit","r":"read",
                                "s":"set","tc":"tcommit","tro":"trollback","ts":"tstart",
                                "u":"use","v":"view","w":"write","x":"xecute",
                                "zb":"zbreak","zi":"zinsert","zk":"zkill","zl":"zload",
                                "zn":"znamespace","zp":"zprint","zq":"zquit","zr":"zremove",
                                "zs":"zsave","zw":"zwrite","zq":"zquit","zr":"zremove",
                                :token)
        
    }
    ElseIf (element = 17) {
        // function
        Set el = "f"

        // expand functions
        Set token = $CASE(token,"a":"ascii","c":"char","d":"data","e":"extract","f":"find","fn":"fnumber",
                                "g":"get","i":"increment","in":"inumber","j":"justify","l":"length",
                                "li":"list","lb":"listbuild","ld":"listdata","lf":"listfind","lg":"listget","ll":"listlength",
                                "na":"name","n":"next","num":"number","o":"order",
                                "p":"piece","ql":"qlength","qs":"qsubscript","q":"query","r":"random",
                                "re":"reverse",
                                "s":"select","st":"stack","t":"text","tr":"translate",
                                "vi":"view",
                                "zd":"zdate","zdh":"zdateh","zdt":"zdatetime","zdth":"zdatetimeh",
                                "zh":"zhex","zt":"ztime","zth":"ztimeh",
                                "zu":"zutil",
                                "zcvt":"zconvert","zc":"zcyc","zis":"ziswide","zla":"zlascii","zlc":"zlchar",
                                "zpos":"zposition","zp":"zprevious","zse":"zsearch",
                                :token)
        If ((selected [ "zu") && (token = "zutil")) {
            // special zu logic
            // strip out leading $ and (, peel off trailing ), convert ',' to -,
            Set token = $P($TR(selected,",$(","-"),")")
            
            If (token '[ "zutil") {
                Set token = "zutil" _ $P(token,"zu",2)
            }
            
        }
    }
    ElseIf (element = 28) {
        // system variable
        Set el = "v"

        // expand variables
        Set token = $CASE(token,"ec":"ecode","es":"estack","et":"etrap","h":"horolog","i":"io","j":"job",
                                "k":"key","p":"principal","q":"quit","st":"stack",
                                "s":"storage","t":"test","tl":"tlevel",
                                "zc":"zchild","zh":"zhorolog","zi":"zio","zn":"zname",
                                "zo":"zorder","zp":"zparent","zr":"zreference","zs":"zstorage",
                                "zts":"ztimestamp","ztz":"ztimezone","zt":"ztrap","zv":"zversion",
                                :token)
        
    }
    ElseIf (element = 24) {
        // operator
        Set el = "o"
        Set id = "GCOS_operators"
    }
    ElseIf (element = 41) {
        // pattern
        Set id = "GCOS_operators"

        Set anchor = "GCOS_operators_pattern"
    }
    
    If ((id = "") && (el = "")) {
        Quit ""
    }

    Set:id="" id = "RCOS_" _ el _ token
    If (##class(DocBook.block).FindId(id) '= "") {
        Quit id
    }

    Quit ""
]]></Implementation>
</Method>

<Method name="LookupBASIC">
<Description>
Search for a Cache Basic item.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>element:%String,token:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    Set token = $ZCVT(token,"L")
    
    // convert Studio element id # to letter
    Set el = ""
    If (element = 13) {
        // command
        Set el = "c"
        
        // find command aliases!
        If ((token = "for") || (token = "next")) {
            Set token = "fornext"
        }
        ElseIf ((token = "if")  || (token = "then") || (token = "else")){
            Set token = "ifthen"
        }
        ElseIf (token = "println"){
            Set token = "print"
        }
        ElseIf ((token = "do")  || (token = "loop")) {
            Set token = "doloop"
        }
        ElseIf ((token = "on") || (token = "goto") || (token = "error")){
            Set token = "onerrorgoto"
        }
        ElseIf ((token = "while")  || (token = "wend")){
            Set token = "whilewend"
        }
    }
    ElseIf (element = 11) {
        // identifier (treat as a function)
        Set el = "f"
    }
    ElseIf (element = 24) {
        // function
        Set el = "f"
    }
    ElseIf (element = 15) {
        // system object
        Set el = "b"
    }
    ElseIf (element = 4) {
        // operator
        Set el = "o"
        
        // find operator name
        If (token = "+") {
            Set token = "addition"
        }
        ElseIf (token = "=") {
            Set token = "assign"
        }
        ElseIf (token = "&") {
            Set token = "concat"
        }
        ElseIf (token = "/") {
            Set token = "division"
        }
        ElseIf (token = "^") {
            Set token = "exponent"
        }
        ElseIf (token = "\") {
            Set token = "intdiv"
        }
        ElseIf (token = "mod") {
            Set token = "modulo"
        }
        ElseIf (token = "*") {
            Set token = "multiply"
        }
        ElseIf (token = "-") {
            Set token = "subtraction"
        }
    }
    ElseIf (element = 13) {
        // keyword !!!
    }
    ElseIf (element = 20) {
        // relational operator
        Set el = "o"
        Set token = "comparison"
    }
    
    If (el = "") {
        Quit ""
    }

    Set id = "RBAS_" _ el _ token
    If (##class(DocBook.block).FindId(id) '= "") {
        Quit id
    }

    Quit ""
]]></Implementation>
</Method>

<Method name="LookupSQL">
<Description>
Search for a Cache SQL item.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>element:%String,token:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    // strip out leading %
    Set token = $ZCVT(token,"L")
    Set token = $TR(token,"%","")
    
    If (element = 9) {
        // host variable  !!!
        Quit "GSQL_esql"
    }

    Set id = "RSQL_" _ token
    If (##class(DocBook.block).FindId(id) '= "") {
        Quit id
    }

    Quit ""
]]></Implementation>
</Method>

<Method name="LookupCLS">
<Description>
Search for a Class Definition item.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[element:%String,token:%String,&searchBook:%String,&anchor:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    Set token = $ZCVT(token,"L")
    
    If (element = 6) {
        // comment
        Set anchor = "GSTD_Syntax_Comments"
        Quit "GSTD_syntax"
    }
    ElseIf (element = 7) {
        // description
        Set anchor = "GSTD_Syntax_Description"
        Quit "GSTD_syntax"
    }
    ElseIf (element = 4) {
        // class keyword
        If ("/class/property/method/trigger/query/classmethod/relationship/index/projection/parameter/foreignkey/" [ ("/"_token_"/")) {
            // class member keyword
            If (token = "classmethod") {
                Set token = "method"
            }
            
            Set anchor = "GSTD_Syntax_" _ token _ "Statement"
            Quit "GSTD_syntax"
        }
        ElseIf (token = "as") {
            Quit "GSTD_syntax"
        }
        ElseIf (token = "extends") {
            Set anchor = "GSTD_Syntax_ClassStatement"
            Quit "GSTD_syntax"
        }
        Else {
            // goto search page, but limit search to CLS Reference
            Set searchBook = "ROBJ"
        }
    }

    Quit ""
]]></Implementation>
</Method>

<Method name="LookupCSP">
<Description>
Search for a CSP item.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[element:%String,token:%String,&searchBook:%String]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    Set token = $ZCVT(token,"L")
    
    // test element #
    Set istag = 0
    If (element = 11) {
        // tag
        Set istag = 1
    }
    ElseIf (element = 7) {
        // attribute
        // goto search page, but limit search to CSP Reference
        Set searchBook = "RCSP"
    }
    
    If ('istag) {
        Quit ""
    }

    If (token [ "csp:") {
        Set id = "RCSP_CSP_" _ $P(token,":",2)
    }
    Else {
        Set id = "RCSP_" _ token
    }

    If (##class(DocBook.block).FindId(id) '= "") {
        Quit id
    }

    Quit ""
]]></Implementation>
</Method>
</Class>


<Class name="DocBook.PortalUtils">
<Description>
Utilities for manipulating system management portal references</Description>
<ClassType/>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Library.RegisteredObject</Super>
<TimeChanged>62063,63337.943157</TimeChanged>
<TimeCreated>58696,41768</TimeCreated>

<Method name="substitute">
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>text:%String,lookfor:%String,replacewith:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set result = text
	set looklen = $LENGTH(lookfor)
	
	set inx = $FIND(result, lookfor)
	while(inx > 0)
	{
		set $extract(result, (inx - looklen), (inx - 1)) = replacewith
		set inx = $FIND(result, lookfor)
	}

	Quit result
]]></Implementation>
</Method>

<Method name="Normalize">
<Description>
Convert the INTERFACE reference to a comma-separated list of item
with extraneous spaces and commas removed.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>text:cdata</FormalSpec>
<ReturnType>cdata</ReturnType>
<Implementation><![CDATA[
	
	set text = ..substitute(text, $CHAR(9), " ")
	set text = ..substitute(text, $CHAR(10), " ")
	set text = ..substitute(text, $CHAR(13), " ")
	set text = ..substitute(text, """", " ")
	set text = $ZSTRIP(text, "*C")
	set text = $ZSTRIP(text, "<>W")
	set text = ..substitute(text, "  ", " ")
	set text = ..substitute(text, ", ", ",")
	set text = ..substitute(text, " ,", ",")
	set text = ..substitute(text, ",,", ",")
	if ($extract(text, 1)) = ","
	{
		set $EXTRACT(text, 1) = ""
	}
	if ($extract(text, $LENGTH(text))) = ","
	{
		set $EXTRACT(text, $LENGTH(text)) = ""
	}
	
	// JMD665
	// Convert System to Home for compatibility
	Set p1 = $P(text,",",1)
	If ($$$UPPER(p1)="SYSTEM") {
		Set $P(text,",",1) = "Home"
	}
	
	quit text
]]></Implementation>
</Method>

<Method name="Display">
<Description>
Convert the INTERFACE value from a comma-separated list 
to the form it has on the Management Portal address bar.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>text:cdata</FormalSpec>
<ReturnType>cdata</ReturnType>
<Implementation><![CDATA[
	Set result = ""
	Set piececnt = $LENGTH(text, ",")
	For i = 1:1:piececnt
	{
		Set:($LENGTH(result) > 0) result = result _ " &gt; "
		Set result = result _ "[" _ $PIECE(text, ",", i) _ "]"
	}
	Quit result
]]></Implementation>
</Method>

<Method name="FormatSubscript">
<Description>
Take a canonicalized portal reference and form the
appropriate subscript for use in a global reference.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>canonref:cdata</FormalSpec>
<ReturnType>cdata</ReturnType>
<Implementation><![CDATA[
	Set subs = ""
	Set piececnt = $LENGTH(canonref, ",")
	For i = 1:1:piececnt
	{
		Set:($LENGTH(subs) > 0) subs = subs _ ","
		Set subs = subs _ """" _ $PIECE(canonref, ",", i) _ """"
	}
	Quit subs
]]></Implementation>
</Method>

<Method name="GetPortalURL">
<Description>
Take a canonicalized portal reference and attempt to obtain
a URL for it using ^%MgtPortal.Index.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>canonref:cdata</FormalSpec>
<ReturnType>cdata</ReturnType>
<Implementation><![CDATA[
	Set result = ""
	
	Set global = "^%qMgtPortal.Index"

	#; JMD665
	#; convert "Home" reference to "System"
	#;If ($P($$$UPPER(canonref),",",1)="HOME") {
	#;	Set $P(canonref,",",1) = "System"
	#;}

	Set ref = global _ "(" _ ..FormatSubscript(canonref) _ ")"
	#;Write canonref, " ::= ", ref,!
	Set result = $GET(@ref, "")
	Quit result
]]></Implementation>
</Method>

<Method name="IdToRef">
<Description>
Convert a block number into a URL.
Liberally cribbed from method, ShowResult in DocBook.UI.SearchBM</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>id:cdata</FormalSpec>
<ReturnType>cdata</ReturnType>
<Implementation><![CDATA[
	Set result = ""

	&sql(SELECT blockid,
			    component->blockid,
			    x__classname
		INTO :paraKey, :docKey, :cls
		FROM DocBook.block
		WHERE ID = :id
	)

	If (SQLCODE '= 0) 
	{
		Quit "/csp/docbook/DocBook.UI.PortalHelp.cls"
	}

	If (docKey = "") 
	{
		Set docKey = paraKey
		Set paraKey = ""
	}

	Set srch = ""
	If (paraKey '= "") 
	{
		Set srch = "#" _ paraKey
	}

	Set result = "/csp/docbook/DocBook.UI.Page.cls?KEY=" _ $$$URLENCODE(docKey) _ srch

	Quit result
]]></Implementation>
</Method>
</Class>


<Class name="DocBook.Renderer">
<Description>
Tools for rendering text for DocBook.</Description>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Library.RegisteredObject</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>59241,40474</TimeCreated>

<Parameter name="TagInline">
<Default>",classname,command,computeroutput,constant,citetitle,emphasis,filename,firstterm,function,guibutton,guilabel,guimenu,guimenuitem,guisubmenu,indexterm,keycap,literal,methodname,parameter,primary,productname,property,quote,replaceable,superscript,systemitem,type,userinput,varname,"</Default>
</Parameter>

<Parameter name="TagTable">
<Default>",colspec,entry,row,thead,tbody,tgroup,"</Default>
</Parameter>

<Parameter name="TagLink">
<Default>",link,olink,ulink,"</Default>
</Parameter>

<Parameter name="TagBlock">
<Default>",para,listitem,itemizedlist,remark,literallayout,orderedlist,programlisting,"</Default>
</Parameter>

<Parameter name="TagInterface">
<Default>",interface,"</Default>
</Parameter>

<Method name="FilterText">
<Description>
Convert any entities in text to HTML-safe representation</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>textin:cdata</FormalSpec>
<ReturnType>cdata</ReturnType>
<Implementation><![CDATA[

	// remove any indexterms from consideration
	Set text = textin
	Set bgntag = "<indexterm"
	Set endtag = "</indexterm>"
	Set f1 = 0
	While (1)
	{
		Set f1 = $FIND(text, bgntag, f1)
		Quit:(f1 = 0)
		Set termbgn = f1 - $LENGTH(bgntag)
		Set f2 = $FIND(text, endtag, f1)
		Set termend = f2 - 1
		Set $EXTRACT(text, termbgn, termend) = ""
		Set f1 = termbgn
	}

	// Now remove any empty paragraphs that result
	Set bgntag = "<para"
	Set endtag = "</para>"
	Set f1 = 0
	While (1)
	{
		Set f1 = $FIND(text, bgntag, f1)
		Quit:(f1 = 0)
		Set txtbgn = f1
		Set termbgn = f1 - $LENGTH(bgntag)
		
		Set f2 = $FIND(text, endtag, f1)
		Set txtend = f2 - $LENGTH(endtag) - 1
		Set termend = f2 - 1
		
		Set paratext = $EXTRACT(text, txtbgn, txtend)
		Set paratext = $TRANSLATE(paratext, ($CHAR(9) _ $CHAR(10) _ $CHAR(13) _ $CHAR(32)))
		If ($LENGTH(paratext) > 0)
		{
			Set f1 = termend
		}
		else
		{
			Set $EXTRACT(text, termbgn, termend) = ""
			Set f1 = termbgn
		}
	}
	
	Quit text
]]></Implementation>
</Method>

<Method name="RenderText">
<Description>
Performs the rendering for this Text block.
Performs substitutions for any inline tags.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>text:cdata,searchword:cdata="",frame:cdata="",colsep:dbint="",noimg:dbint=0</FormalSpec>
<Implementation><![CDATA[
	
	If (frame '= "") {
		Set frmcls = " CLASS=""Frame-" _ frame _ """"
	}
	Else {
		Set frmcls = ""
	}
	
	Set tpart = ""

	// remove any indexterms from consideration
	Set text = ..FilterText(text)

	// make a quick test to see if we can skip processing
	If (text '[ "<") {
		If (searchword = "") {
			// Test if we need to xform any entities
			If (text [ "&") {
				Write ..XFormEntity(text)
			}
			Else {
				Write text
			}
		}
		Else {
			Do ..ShowText(text, searchword)
		}
		Quit
	}
	
	// scan what is left as tokens	
	Set tokens = ##class(%CSP.TokenStream).%New()
	Do tokens.OpenFromString(text)
	Set skipTo = ""
	Set classLink = 0

	While (tokens.NextToken()) {
		If (skipTo '= "") {
			// skip until end of skip to
			If (skipTo = tokens.Tag) {
				Set skipTo = ""
			}			
		}
		Else 
		{
			// start of inline elements
			If ((tokens.Type = "TAG") && (..IsINLINE(tokens.Tag))) 
			{
				If ((tokens.Tag = "remark") && ($G(%session.Data("Remarks"),0) = 0)) 
				{
					Write "<SPAN CLASS=""hidden"">"
				}
				ElseIf (tokens.Tag = "firstterm")
				{
					Write "<SPAN CLASS=""firstterm"">"
				}
				ElseIf (tokens.Tag = "systemitem")
				{
					Write "<SPAN CLASS=""systemitem""><NOBR>"
				}
				ElseIf (tokens.Tag = "quote")
				{
					Write "<A TITLE=""",tokens.Tag,"""><SPAN CLASS=""",tokens.Tag,"""><NOBR>"
					Write "&#147;"
				}
				ElseIf (tokens.Tag = "classname")
				{
					Write "<A TITLE=""",tokens.Tag,"""><SPAN CLASS=""",tokens.Tag,"""><NOBR>"
					// check for classname autolinks
					Set classLink = 1
				}
				ElseIf (tokens.Tag = "emphasis")
				{
				    Kill attrs
				    Do tokens.GetAttrs(.attrs)
				    Set DispClass = tokens.Tag
                    Set role = $ZCVT($G(attrs("role","value"), ""),"U")
                    If ($LENGTH(role) > 0)
                    {
                        Set:(role = "CAPTION") DispClass = "EmphasisCaption"
                        Set:(role = "UNDERLINE") DispClass = "EmphasisUnderline"
                    }
					Write "<A TITLE=""",tokens.Tag,"""><SPAN CLASS=""",DispClass,"""><NOBR>"
				}
				Else 
				{
					// all other tags
					Write "<A TITLE=""",tokens.Tag,"""><SPAN CLASS=""",tokens.Tag,"""><NOBR>"
				}
			}
			
			// end of inline
			ElseIf ((tokens.Type = "TAG") && ($E(tokens.Tag,1,1) = "/") && (..IsINLINE($E(tokens.Tag,2,$L(tokens.Tag))))) 
			{
				If (tokens.Tag = "/firstterm")
				{
					Write "</SPAN>"
				}
				ElseIf (tokens.Tag = "/systemitem")
				{
					Write "</NOBR></SPAN>"
				}
				ElseIf (tokens.Tag = "/quote") 
				{
					Write "&#148;"
					Write "</NOBR></SPAN></A>"
				}
				ElseIf (tokens.Tag = "/classname") 
				{
					Write "</NOBR></SPAN></A>"
				}
				ElseIf (tokens.Tag = "/emphasis") 
				{
					Write "</NOBR></SPAN></A>"
				}
				Else
				{
					Write "</NOBR></SPAN></A>"
				}
			}

			// start of inline block elements !!!
			ElseIf ((tokens.Type = "TAG") && (..IsBLOCK(tokens.Tag))) 
			{
				If (tokens.Tag = "para")
				{ 
					Write "<DIV CLASS=""para"">"
				}
				ElseIf (tokens.Tag = "programlisting")
				{ 
					Write "<DIV CLASS=""programlisting"">"
				}
				ElseIf (tokens.Tag = "itemizedlist")
				{ 
					Write "<UL>"
				}
				ElseIf (tokens.Tag = "orderedlist")
				{ 
					Write "<OL>"
				}
				ElseIf (tokens.Tag = "listitem")
				{ 
					Write "<LI>"
				}

			}
			
			// end of inline block
			ElseIf ((tokens.Type = "TAG") && ($E(tokens.Tag,1,1) = "/") && (..IsBLOCK($E(tokens.Tag,2,$L(tokens.Tag))))) 
			{
				If (tokens.Tag = "/para")
				{ 
					Write "</DIV>"
				}
				ElseIf (tokens.Tag = "/programlisting")
				{ 
					Write "</DIV>"
				}
				ElseIf (tokens.Tag = "/itemizedlist")
				{ 
					Write "</UL>"
				}
				ElseIf (tokens.Tag = "/orderedlist")
				{ 
					Write "</OL>"
				}
				ElseIf (tokens.Tag = "/listitem")
				{ 
					Write "</LI>"
				}
			}
			
			// start of interface elements
			ElseIf ((tokens.Type = "TAG") && (..IsINTERFACE(tokens.Tag)))
			{
				Write "<SPAN class=""interface"">"
				Set IFText = ""
				Set continue = tokens.NextToken()
				While (continue)
				{
					If ((tokens.Type = "TAG") && ($E(tokens.Tag,1,1) = "/") && (..IsINTERFACE($E(tokens.Tag,2,$L(tokens.Tag)))))
					{
						Write ..FmtInterface(IFText)
						Write "</SPAN>"
						Set continue = 0
					}
					Else
					{
						Set IFText = IFText _ tokens.Text
						Set continue = tokens.NextToken()
					}
				}
			}
			
			// end of interface elements
			ElseIf ((tokens.Type = "TAG") && ($E(tokens.Tag,1,1) = "/") && (..IsINTERFACE($E(tokens.Tag,2,$L(tokens.Tag))))) 
			{
				// the whole thing is done in the "start" processing
			}
			
			// start of link elements
			ElseIf ((tokens.Type = "TAG") && (..IsLINK(tokens.Tag))) 
			{
				Kill attrs
				Do tokens.GetAttrs(.attrs)
							
				Set url = ""
				If (tokens.Tag = "ulink") 
				{
					// 'url' attribute of ulink tag contains link
					Set linktype = $ZCONVERT($GET(attrs("type","value"),""), "L")
					Set url = $G(attrs("url","value"))
					Set url = $ZCONVERT(url, "I", "HTML")
				
					If (url '= "") 
					{
						Set href = ..ProcessURL(url)
					Do ..EmitLink(href, linktype)
					}
				}
				ElseIf (tokens.Tag = "link") 
				{
					// 'linkend' attribute of link tag contains link
					Set linktype = $ZCONVERT($GET(attrs("type","value"),""), "L")
					Set url = $G(attrs("linkend","value"))
					Set url = $ZCONVERT(url, "I", "HTML")
				
					If (url '= "") 
					{
						Set href = ..ProcessURL(url)
						Do ..EmitLink(href, linktype)
					}
				}
				ElseIf (tokens.Tag = "olink") 
				{
					// link target is contained in attributes
					Set linktype = $ZCONVERT($GET(attrs("type","value"),""), "L")
					Set linkinfo = $GET(attrs("localinfo","value"), "")
					Set linkrole = $GET(attrs("role","value"), "")
					Set url = ""
					
					If (linktype = "documatic")
					{
						Set url = "../documatic/%25CSP.Documatic.cls"
						Set url = url _ "?PAGE=CLASS"
						// parse the target reference
						Set PieceCnt = $LENGTH(linkinfo, ":")
						If ((PieceCnt < 2) || (PieceCnt > 3))
						{
							Set url = ""
						}
						Else
						{
							If (PieceCnt = 2)
							{
								Set namespace = ""
								Set fqclassname = $PIECE(linkinfo, ":", 1)
								Set componentname = $PIECE(linkinfo, ":", 2)
							}
							Else
							{
								Set namespace = $PIECE(linkinfo, ":", 1)
								Set fqclassname = $PIECE(linkinfo, ":", 2)
								Set componentname = $PIECE(linkinfo, ":", 3)
							}
							If ($LENGTH(namespace) = 0)
							{
								Set namespace = "%SYS"
							}
							Set url = url _ "&LIBRARY=" _ $ZCONVERT(namespace, "O", "URL")
							Set url = url _ "&CLASSNAME=" _ $ZCONVERT(fqclassname, "O", "URL")
							// now the component is there is one
							If (componentname '= "")
							{
								//Set url = url _ "#" _ $ZCONVERT(componentname, "O", "URL")
								// documatic does not escape component names
								Set url = url _ "#" _ componentname
							}
						}
					}
					If (url '= "") 
					{
						Set href = ..ProcessURL(url)
						Do ..EmitLink(href, "new", linkrole)
					}
				}
			}
			
			// end of link
			ElseIf ((tokens.Type = "TAG") && ($E(tokens.Tag,1,1) = "/") && (..IsLINK($E(tokens.Tag,2,$L(tokens.Tag))))) {
				Write "</A>"
			}
			
			// start of tables
			ElseIf ((tokens.Type = "TAG") && (..IsTABLE(tokens.Tag))) 
			{
				If (tokens.Tag = "entry") {
					// test for 'morerows'
					Kill attrs
					Do tokens.GetAttrs(.attrs)
					
					If (+$G(attrs("morerows","value")) > 0) 
					{
						Set rowspan = " rowspan=""" _ (attrs("morerows","value") + 1) _ """"
					}
					Else 
					{
						Set rowspan = ""
					}

					If (tpart = "thead") 
					{
						Write "<TH",frmcls,rowspan,">"
					}
					Else 
					{
						Write "<TD",frmcls,rowspan,">"
					}
				}				
				ElseIf (tokens.Tag = "row") 
				{
					Write "<TR>"
				}				
				ElseIf (tokens.Tag = "tgroup") 
				{
					// reset statevars
					Set tpart = ""
					Write "<TABLE ALIGN=""CENTER"" CLASS=""CALSTable"" CELLPADDING=""5"" CELLSPACING=""0"" BORDER=""0"">"
				}				
				ElseIf (tokens.Tag = "thead") 
				{
					Set tpart = "thead"
				}
				ElseIf (tokens.Tag = "tbody") 
				{
					Set tpart = "tbody"
				}
				Else 
				{
					Set skipTo = "/" _ tokens.Tag
				}
			}
			
			// end of tables
			ElseIf ((tokens.Type = "TAG") && ($E(tokens.Tag,1,1) = "/") && (..IsTABLE($E(tokens.Tag,2,$L(tokens.Tag))))) 
			{
				If (tokens.Tag = "/entry") 
				{
					If (tpart = "thead") 
					{
						Write "</TH>",!
					}
					Else 
					{
						// ensure that no cells are empty!
						Write "</TD>",!
					}
				}				
				ElseIf (tokens.Tag = "/row") 
				{
					Write "</TR>",!
				}				
				ElseIf (tokens.Tag = "/tgroup") 
				{
					Write "</TABLE>",!
				}				
				ElseIf (tokens.Tag = "/thead") 
				{
					Set tpart = ""
				}
				ElseIf (tokens.Tag = "/tbody") 
				{
					Set tpart = ""
				}
			}
			
			// graphic tag
			ElseIf ((tokens.Type = "TAG") && ((tokens.Tag = "graphic") || (tokens.Tag = "inlinegraphic"))) 
			{
				If ('noimg) 
				{
					Kill attrs
					Do tokens.GetAttrs(.attrs)
					// lowercase and normalize for UNIX
					Set href = $TR($ZCVT($G(attrs("fileref","value")),"L"),"\","/")
					
					Set align = $G(attrs("align","value"),"center")
					If (tokens.Tag = "graphic") 
					{
						//JMD257: Write "<TABLE ALIGN=""CENTER"" WIDTH=""80%"" BORDER=""0"" CELLPADDING=""0"" CELLSPACING=""0""><TR ALIGN=""",align,"""><TD>"
						Write "<DIV class=""graphic"">"
					}
					// treat SVG differently
					If (href?1.E1".svg")
					{
						Write "<EMBED TYPE=""image/svg+xml"" SRC=""",href,""""
					}
					Else
					{
						Write "<IMG HSPACE=""10"" BORDER=""0"" SRC=""",href,""""
					}
					// Write:align'="" "ALIGN=""",align,""""
					Write ">"
					//JMD257 Write:(tokens.Tag = "graphic") "</TD></TR></TABLE>"
					Write:(tokens.Tag = "graphic") "</div>"
				}
			}
			
			// /graphic tag
			ElseIf ((tokens.Type = "TAG") && ((tokens.Tag = "/graphic") || (tokens.Tag = "/inlinegraphic"))) 
			{
				// do nothing
			}
			
			Else 
			{
				If (searchword '= "") 
				{
					Do ..ShowText(tokens.Text,searchword)
				}	
				Else {
					Set render = 0
					If (classLink = 1) 
					{
						Set classLink = 0

						Set cls = tokens.Text
						Set ClassOK = 0
						If ($E(cls,1) = "%")
						{
							Do NormalizeClassnameByDef^%occName(.cls,cls,cls)
							Set ClassOK = 1
						}
						Else
						{
							Set ClassOK = 1
							Set:($PIECE($ZCONVERT(cls, "U"), ",", 1) [ "SAMPLE") ClassOK = 0
						}
						If (ClassOK)
						{
							// find out if system class exists
							Set namesp = ..ProbeClass(cls)
							If ($LENGTH(namesp) > 0)
							{
								// get IP address of this machine
								Set href = "../documatic/%25CSP.Documatic.cls"
								Set href = href _ "?"
								Set href = href _ "APP=1"
								Set href = href _ "&"
								Set href = href _ "LIBRARY=" _ $zcvt(namesp,"O","URL")								
								Set href = href _ "&"
								Set href = href _ "CLASSNAME=" _ $zcvt(cls,"O","URL")								

								Write "<A HREF=""",href,""" target=""_blank"">"
								Write tokens.Text
								;Write $zcvt(cls,"O","URL")
								Write "</A>"
								Set render = 1
							}
							Else
							{
								// cannot get there from here
								Write "<!-- "
								Write "[", $ZNSPACE, "] "
								Write $$$T("Class not found in ^oddDEF: "), cls
								Write " -->"
							}
						}
						Else
						{
							// we will not let people go to Samples
							Write "<!-- "
							Write "[", $ZNSPACE, "] "
							Write $$$T("Class restricted: "), cls
							Write " -->"
						}
					}
						

					If (render = 0) 
					{
						// we did not render: do it here
						
						// Test if we need to xform any entities
						If (tokens.Text [ "&") {
							Write ..XFormEntity(tokens.Text)
						}
						Else 
						{
							Write tokens.Text
						}
					}
				}
			}
		}
	}
]]></Implementation>
</Method>

<Method name="ProcessURL">
<Description>
Common URL processing</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>url:cdata</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[

	Set xlink = ""
	Set xhash = ""
	
	// short-circuit
	If (url = "")
	{
	    Quit ""
	}
	
	// replace superserver and webserver ports if present
	if (url [ "localhost:1972")
	{
		Set SSport = $PIECE($ZU(172,0), ";", 1)
		Set Before = $PIECE(url, ":1972", 1)
		Set After = $PIECE(url, ":1972", 2)
		Set url = Before _ ":" _ SSport _ After
	}
	if (url [ "localhost:57772")
	{
		Set WSport = $GET(^%SYS("WebServer", "Port"), "57772")
		Set Before = $PIECE(url, ":57772", 1)
		Set After = $PIECE(url, ":57772", 2)
		Set url = Before _ ":" _ WSport _ After
	}
	Set href = ""
	Set Passed = 0
	If ((url [ "http:") || (url [ "https:") || (url [ "ftp:"))
	{
		Set Passed = 1
	}
	ElseIf ((url [ ".html") || (url [ ".htm") || (url [ ".cls") || (url [ ".csp"))
	{
		Set Passed = 1
	}
	ElseIf (url [ "file:")
	{
		If ((url [ ".png") 
		    || (url [ ".jpg") 
		    || (url [ ".jpeg") 
		    || (url [ ".mpeg") 
		    || (url [ ".gif") 
		    || (url [ ".png")
		    || (url [ ".htm")
		    || (url [ ".html"))
		{
			Set Passed = 1
		}
	}
	
	If (Passed)
	{
		// trick for links to static files
		Set href = $TR(url,"\","/") // normalize
	}
	ElseIf ..GetLink(url, .xlink, .xhash) 
	{
		If ($G(%tutorial)=1) 
		{
			If (xhash '= "") 
			{
				Set xlink = xhash
			}
			Set href = "DocBook.UI.Page.cls?KEY=" _ xlink
		}
		Else 
		{
			Set href = "DocBook.UI.Page.cls?KEY=" _ xlink
			If (xhash '= "") 
			{
				Set href = href _ "#" _ xhash
			}
		}
	}
	ElseIf (url [ "file:")
	{
		Set href = url
	}
	Else 
	{
		// invalid link
		Set href = ""
	}
	
	Quit href
]]></Implementation>
</Method>

<Method name="EmitLink">
<Description>
Generate the link HTML entry sequence</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>href:cdata,linktype:cdata,displaymod:cdata=""</FormalSpec>
<Implementation><![CDATA[
	Set displayclass = "Link" _ displaymod
	Write "<A CLASS=""" _ displayclass _ """ "
	If (href '= "") 
	{
		Write "HREF=""", href,""""
	}
	If (("," _ linktype _ ",") [ ",new,") 
	{
		Write " target=""_blank"""
	}
	Write ">"
	
	Quit
]]></Implementation>
</Method>

<Method name="ProbeClass">
<Description>
Guardedly check for the existence of a class</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>clsnm:cdata</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	
	Set $ZTRAP = "NoAccess"
	Set NSlist($i(NSlist)) = $lb("%SYS","%SYS")
	Set result = ""
	
	If ##class(%Library.EnsembleMgr).IsEnsembleInstalled() {
		Set NSlist($i(NSlist)) = $lb("ENSLIB",##class(%Library.EnsembleMgr).GetENSLIB(1))
		If ##class(%Library.EnsembleMgr).IsHealthShareInstalled() {
			Set NSlist($i(NSlist)) = $lb("HSLIB", "HSLIB")
		}
	}
	For i=1:1:NSlist {
		Set NSData = NSlist(i)
		Set SysNS = $lg(NSData, 1)
		Set SysDir = $lg(NSData, 2)
		If ($data(^|SysDir|oddDEF(clsnm)) > 0)
		{
			Set result = SysNS
			Quit
		}
	}

NoAccess
	Set $ZTRAP =""
	Set $ZERROR = ""
	Quit result
]]></Implementation>
</Method>

<Method name="XFormEntity">
<Description>
Convert any entities in text to HTML-safe representation</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>text:cdata</FormalSpec>
<ReturnType>cdata</ReturnType>
<Implementation><![CDATA[

	// remove any indexterms from consideration
	Set text = ..FilterText(text)
	
	Set out = ""
	Set last = 1
	Set p = $Find(text,"&",1)

	While (p > 0) {
		Set out = out _ $E(text,last,p-2)
		
		// find end of entity
		Set last = p
		Set p = $Find(text,";",p)
		If (p = 0) {
			Set out = out _ "&"
		}
		Else {
			Set ent = $E(text,last,p-2)
			If (ent = "mdash") {
				Set out = out _ "&#151;"
			}
			ElseIf (ent = "ndash") {
				Set out = out _ "&#150;"
			}
			ElseIf (ent = "ldquo") {
				Set out = out _ "&#147;"
			}
			ElseIf (ent = "rdquo") {
				Set out = out _ "&#148;"
			}
			Else {
				Set out = out _ "&" _ ent _ ";"
			}

			// find next entity
			Set last = p
			Set p = $Find(text,"&",p)
		}
	}
	
	Set out = out _ $E(text,last,$L(text))
	Quit out
]]></Implementation>
</Method>

<Method name="FmtInterface">
<Description>
Convert the INTERFACE value from a comma-separated list 
to the form it has on the Management Portal address bar.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>text:cdata</FormalSpec>
<ReturnType>cdata</ReturnType>
<Implementation><![CDATA[
	Set cvtext = ..XFormEntity(text)
	Set cvtext = ##class(DocBook.PortalUtils).Normalize(cvtext)
	Set url = ##class(DocBook.PortalUtils).GetPortalURL(cvtext)

	Set result = ##class(DocBook.PortalUtils).Display(cvtext)
	
	#;Set ^DocBook.DEBUG = $GET(^DocBook.DEBUG, 0) + 1
	#;Set ^DocBook.DEBUG(^DocBook.DEBUG, "FmtInterface", "text") = text
	#;Set ^DocBook.DEBUG(^DocBook.DEBUG, "FmtInterface", "cvtext") = cvtext
	#;Set ^DocBook.DEBUG(^DocBook.DEBUG, "FmtInterface", "url") = url
	#;Set ^DocBook.DEBUG(^DocBook.DEBUG, "FmtInterface", "result") = result
	
	If (url '= "")
	{
		Set result = "<A CLASS=""Link"""
		           _ " "
		           _ "HREF="""
		           _ ##class(%CSP.Page).Link(url)
		           _ """>"
		           _ result
		           _ "</A>"
	}
	
	Quit result
]]></Implementation>
</Method>

<Method name="GetLink">
<Description>
Get a link for a given blockID</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[id:id,&link,&hash]]></FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[

	// special case for technical articles
	If ($ZCVT(id,"U") = "KNBASE") {
		Set link = id
		Set hash = ""
		Quit 1
	}
	
	&sql(SELECT component->blockid
		INTO  :owner
		FROM DocBook.block 
		WHERE blockid = :id)

	If (SQLCODE '= 0) {
		/// Invalid link
		Quit 0
	}
	
	If (owner = "") {
		Set link = id
		Set hash = ""
		Quit 1
	}
	
	Set link = owner
	Set hash = id
	
	Quit 1
]]></Implementation>
</Method>

<Method name="RenderTable">
<Description>
 Render the contents of a table block</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>text:cdata,frame:cdata="",colsep:dbint="",searchword:cdata=""</FormalSpec>
<Implementation><![CDATA[	Do ..RenderText(text,searchword,frame,colsep)
]]></Implementation>
</Method>

<Method name="ShowText">
<Description><![CDATA[
 This method takes the given text and colors any occurrences
 of <varname>searchword</varname>.]]></Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>text:cdata,searchword:cdata</FormalSpec>
<Implementation><![CDATA[

	If (searchword = "") {
		Write text,!
		Quit
	}

	Set p = 0
	Set utext = $ZCVT(text,"U")
	Set searchword = $ZCVT(searchword,"U")
	Set l = $L(searchword)
	Do {
		Set f = $F(utext,searchword,p)
		If (f = 0) {
			Write $E(text,p,$L(text))
		}
		Else {
			Write $E(text,p,f-l-1)
			Write "<SPAN CLASS=""SearchWord"">"
			Write $E(text,f-l,f-1)
			Write "</SPAN>"
		}
		Set p = f
	} While (p > 0)
]]></Implementation>
</Method>

<Method name="RenderComments">
<Description>
display all the user-comments associated with a given block</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>blockid</FormalSpec>
<Implementation><![CDATA[

	// loop over comments
	&sql(DECLARE CmtCursor CURSOR FOR
		SELECT ID,Comment,UserName,CreateTime,Reason
		INTO :id,:comment,:name,:time,:reason
		FROM DocBook.UserComment
		WHERE BlockId = :blockid
	)
	
	&sql(OPEN CmtCursor)
	&sql(FETCH CmtCursor)

	While (SQLCODE = 0) {
		&html<<DIV CLASS="UserComment">>
		&html<<B>#(name)#:</B>&nbsp;#(reason)#&nbsp;#($ZCVT(comment,"O","HTML"))#>
		Write "<A TITLE=""" _ $$$T("Edit this comment.") _ """ HREF=""javascript:editComment('" _ id _ "');""><IMG BORDER=""0"" SRC=""feedback.jpg""></A>", !
		&html<</DIV>>

		&sql(FETCH CmtCursor)
	}
	&sql(CLOSE CmtCursor)

	&html<</TABLE>>
]]></Implementation>
</Method>

<Method name="IsINLINE">
<Description><![CDATA[
Return true is <var>element<element> is the
name of an INLINE element.]]></Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec>element</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[(..#TagInline[(","_$ZSTRIP($ZCONVERT(element,"L"),"<>W")_","))
]]></Implementation>
</Method>

<Method name="IsTABLE">
<Description><![CDATA[
Return true is <var>element<element> is the
name of a TABLE element.]]></Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec>element</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[(..#TagTable[(","_$ZSTRIP($ZCONVERT(element,"L"),"<>W")_","))
]]></Implementation>
</Method>

<Method name="IsLINK">
<Description><![CDATA[
Return true is <var>element<element> is the
name of a LINK element.]]></Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec>element</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[(..#TagLink[(","_$ZSTRIP($ZCONVERT(element,"L"),"<>W")_","))
]]></Implementation>
</Method>

<Method name="IsBLOCK">
<Description><![CDATA[
Return true is <var>element<element> is the
name of an inline BLOCK element.]]></Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec>element</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[(..#TagBlock[(","_$ZSTRIP($ZCONVERT(element,"L"),"<>W")_","))
]]></Implementation>
</Method>

<Method name="IsINTERFACE">
<Description><![CDATA[
Return true is <var>element<element> is the
name of an inline INTERFACE element.]]></Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<CodeMode>expression</CodeMode>
<FormalSpec>element</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[(..#TagInterface[(","_$ZSTRIP($ZCONVERT(element,"L"),"<>W")_","))
]]></Implementation>
</Method>
</Class>


<Class name="DocBook.SearchUtils">
<Description><![CDATA[
This set of method implements a search paths facility for locating
DocBook documents.
<P>
The items under ^DocBook.Config("SOURCE",&lt;X&gt;) are assumed
to contains the pathnames of directories to look in when trying to
locate a file.
The actual values of &lt;X&gt; are unimportant but their relative
values are used to specify an ordering of the target directories
under the applicable collation.
<!-- <P>
Future enhancement(?)
<BR>
Any level of the directory may contain wildcards and they will be
handled in the obvious way.  An element consisting of *** is
interpreted as asking for indefinite recursion to the bottom
of the directory hierarchy. -->
]]></Description>
<ClassType/>
<IncludeCode>%occSAX,DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Library.RegisteredObject</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>58822,45005</TimeCreated>

<Parameter name="DefaultOutput">
<Default>C:\SearchPaths.log</Default>
</Parameter>

<Method name="BuildSearchList">
<Description>
Build a list of directory paths to search.  If the parameter specifiying
a particular directory is non-null, construct a singleton list
containing only that element.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>SingletonDir:%String=""</FormalSpec>
<ReturnType>%Library.ArrayOfDataTypes</ReturnType>
<Implementation><![CDATA[
	; allocate space to hold our results
	set results = ##class(%Library.ArrayOfDataTypes).%New()

	; were we given only a single directory
	if (SingletonDir '= "")
	{
		set realdirpath = ##class(%Library.File).NormalizeDirectory(SingletonDir)
		set status = results.SetAt(realdirpath, 1)
		if ($system.Status.IsError(status))
		{
			do $system.OBJ.DisplayError(status)
		}
	}
	else
	{
		set searchpathlist = ##class(DocBook.ConfigUtils).GetSOURCE()
		if ($LISTLENGTH(searchpathlist) = 0)
		{
			set sc =$$$ERROR($$$GeneralError, $$$T("Empty search directory list"))
			do $system.OBJ.DisplayError(sc)
		}
		else
		{
			set i = 0
			for n = 1 : 1 : $LISTLENGTH(searchpathlist)
			{
				set curpath = $LIST(searchpathlist, n)
				; translate into "canonical" form
				set curpath = ##class(%Library.File).NormalizeDirectory(curpath)
				; DEBUG

				; store it
				set i = i + 1
				set status = results.SetAt(curpath, i)
				if ($system.Status.IsError(status))
				{
					do $system.OBJ.DisplayError(status)
				}
			}
		}
	}

	quit results
]]></Implementation>
</Method>

<Method name="ExtendSearchList">
<Description>
Add a subdirectory name to every element of the path.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>SearchList:%Library.ArrayOfDataTypes,SubDirName:%String</FormalSpec>
<ReturnType>%Library.ArrayOfDataTypes</ReturnType>
<Implementation><![CDATA[
	; allocate space to hold our results
	set results = ##class(%Library.ArrayOfDataTypes).%New()

	; iterate over the elements extending the list
	set curkey = SearchList.Next("")
	while (curkey '= "")
	{
		set dirpath = SearchList.GetAt(curkey)
		set newpath = ..SubDirectoryName(dirpath, SubDirName)
		;write "ExtKey: ", curkey, !
		;write "ExtVal: ", dirpath, !
		;write "ExtNew: ", newpath, !
		set status = results.SetAt(newpath, curkey)
		if ($system.Status.IsError(status))
		{
			do $system.OBJ.DisplayError(status)
		}
		set curkey = SearchList.Next(curkey)
	}

	quit results
]]></Implementation>
</Method>

<Method name="LocateFiles">
<Description><![CDATA[
Finds the specified files using the search paths given in the global.
All occurrences of the name are returned as full paths.
It is the responsibility of the
caller to eliminate duplicate and/or redundant entries.
<!-- <P>
The file name
may contain wildcards. -->]]></Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>SearchList:%Library.ArrayOfDataTypes,FileName:%String="*"</FormalSpec>
<ReturnType>%Library.ArrayOfDataTypes</ReturnType>
<Implementation><![CDATA[
	; did we get anything to look for
	if (FileName = "")
	{
		quit $$$ERROR($$$GeneralError, $$$T("File name not specified"))
	}

	; get the file there
	set foundfiles = ..Collector(SearchList, FileName, "F")

	quit foundfiles
]]></Implementation>
</Method>

<Method name="LocateDirectories">
<Description><![CDATA[
Finds the specified directories using the search paths given in the global.
All occurrences of the name are returned as full paths.
It is the responsibility of the
caller to eliminate duplicate and/or redundant entries.
<!-- <P>
The file name
may contain wildcards. -->]]></Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>SearchList:%Library.ArrayOfDataTypes,DirName:%String="*"</FormalSpec>
<ReturnType>%Library.ArrayOfDataTypes</ReturnType>
<Implementation><![CDATA[
	; did we get anything to look for
	if (DirName = "")
	{
		quit $$$ERROR($$$GeneralError, $$$T("Directory name not specified"))
	}

	; get the file there
	set founddirs = ..Collector(SearchList, DirName, "D")

	quit founddirs
]]></Implementation>
</Method>

<Method name="Collector">
<Description>
Use the given directory list to find the matching items</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>DirList:%Library.ArrayOfDataTypes,Pattern:%Library.String,TypeCodes:%String</FormalSpec>
<ReturnType>%Library.ArrayOfDataTypes</ReturnType>
<Implementation><![CDATA[
	; initialize the return value
	set itemcnt = 0
	set founditems =  ##class(%Library.ArrayOfDataTypes).%New()

	set typeswanted = $ZCONVERT(TypeCodes, "U")
	; loop over the directory list
	; write "Pattern: ", Pattern, !
	for i = 1 : 1 : DirList.Count()
	{
		set thisdir = DirList.GetAt(i)
		; DEBUG
		;write "Searching: ", thisdir, !
		If '##class(%File).DirectoryExists(thisdir) Continue
		set probe = ##class(%Library.ResultSet).%New("%Library.File:FileSet")
		set probestatus = probe.Execute(thisdir, Pattern, "", 1)
		if ($system.Status.IsError(probestatus))
		{
			do $system.OBJ.DisplayError(probestatus)
		}
		while (probe.Next() '= 0)
		{
			; DEBUG
			;write "Name: ", probe.GetData(1), !
			;write "Type: ", probe.GetData(2), !
			;write "Size: ", probe.GetData(3), !
			;write "DateCreated: ", probe.GetData(4), !
			;write "DateModified: ", probe.GetData(5), !
			;write "ItemName: ", probe.GetData(6), !
			if (typeswanted [ probe.GetData(2))
			{
				set itemcnt = itemcnt + 1
				set storestatus = founditems.SetAt(probe.GetData(1), itemcnt)
				if ($system.Status.IsError(probestatus))
				{
					do $system.OBJ.DisplayError(probestatus)
				}
			}
		}
		set probestatus = probe.Close()
		if ($system.Status.IsError(probestatus))
		{
			do $system.OBJ.DisplayError(probestatus)
		}
	}

	; finished
	quit founditems
]]></Implementation>
</Method>

<Method name="SubDirectoryName">
<Description>
This has been replaced a call to the functionality
in %Library.File
</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>DirName:%String,SubDirName:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	Set newdir = ##class(%Library.File).SubDirectoryName(DirName, SubDirName)

	Quit newdir
]]></Implementation>
</Method>

<Method name="ContainingDir">
<Description>
If given a path ending in a filename, this returns the directory path
where the file is located.  Otherwise, it returns the path to the
directory containing the directory specified.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>GivenPath:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    Set result = ##class(%Library.File).ParentDirectoryName(GivenPath)

	; finished
	quit result
]]></Implementation>
</Method>

<Method name="GetDirectoryname">
<Description>
Given a path, this returns the last directory name in that path.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>GivenPath:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	Set dirpath = ##class(%Library.File).GetDirectory(GivenPath)
	Set dirlen = ##class(%Library.File).GetDirectoryLength(GivenPath)
	Set result = 0
	Set isdrive = 0
	Set dirname = ##class(%Library.File).GetDirectoryPiece(GivenPath, dirlen, .result, .isdrive)
	quit dirname
]]></Implementation>
</Method>

<Method name="ExportSearchPaths">
<Description>
Writes the standard file header</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>OutTarget:%Library.String=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    // Use the current datetime as part of the name
    Set filepath = ..#DefaultOutput
    Set:($LENGTH(OutTarget) > 0) filepath = OutTarget

    Set LogFile = ##class(%Library.File).%New(filepath)
    Do LogFile.Open("WSNK\UTF8\")

    set dirlist = ..BuildSearchList()

    ; write the Search Path data
    Set hdr = "### Search Paths Defined: " _ dirlist.Count()
    Do LogFile.WriteLine(hdr)
    Set hdr = "### Written: " _ $ZDATETIME($HOROLOG, 2, 1)
    Do LogFile.WriteLine(hdr)

    For i = 1 : 1 : dirlist.Count()
    {
        Do LogFile.WriteLine(dirlist.GetAt(i))
    }

    ; Done with the file
    Do LogFile.Close()

    Write $$$T("Wrote: "),LogFile.Name,!
    Quit $$$OK

]]></Implementation>
</Method>
</Class>


<Class name="DocBook.Taxonomy">
<Description>
This class defines the categories for the documentation materials
so thath the new Zen home page can address them.
</Description>
<IncludeCode>DocBookMac</IncludeCode>
<Super>%Library.RegisteredObject</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>60423,56772</TimeCreated>

<Method name="Define">
<Description>
This generates the globals needed by the new home page.</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

    Kill ^DocBook.BookList
    Kill ^DocBook.BookCategory
    Kill ^||ValidValues

    Do ..MakePPG()
    do ..DoCacheDoc()
    do ..DoEnsembleDoc()
    do ..DoHealthShareDoc()
    do ..DoTrakDoc()
    do ..DoInternalDoc()
    Do ..FillIn("ISP",
                "role", $$$T("Installation"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("ITECHREF",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "book", $$$T("References"))
    Do ..FillIn("GEMS",
                "role", $$$T("Administration"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                //"product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))

    Do ..Adjust()

    Kill ^||ValidValues

    Quit $$$OK
]]></Implementation>
</Method>

<Method name="MakePPG">
<Description>
This generates the globals needed by the new home page.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

    Set app = ",Client/Server" _
              ",Integration" _
              ",Terminal" _
              ",Web" _
              ","
    Set ^||ValidValues("app") = app

    Set product = ",Cache" _
                  ",Ensemble" _
                  ",HealthShare" _
                  ",TrakCare" _
                  ",Confidential" _
                  ",Internal" _
                  ","
    Set ^||ValidValues("product") = product

    Set book = ",Articles" _
               ",Guides" _
               ",References" _
               ",Tutorials" _
               ","
    Set ^||ValidValues("book") = book

    Set role = ",Administration" _
               ",Development" _
               ",General" _
               ",Installation" _
               ",Security" _
               ",Implementation" _
               ",Tools" _
               ","
    Set ^||ValidValues("role") = role

    Set level = ",Introductory" _
                ",Intermediate" _
                ",Advanced" _
                ","
    Set ^||ValidValues("level") = level

    Set lang = ",BASIC" _
               ",BPL" _
               ",CPP" _
               ",CSP" _
               ",DOTNET" _
               ",DTL" _
               ",DeepSee" _
               ",HTML" _
               ",Java" _
               ",Javascript" _
               ",MultiValue" _
               ",ObjectScript" _
               ",PERL" _
               ",PYTHON" _
               ",SOAP" _
               ",SQL" _
               ",ISQL/TSQL" _
               ",XML" _
               ",ZEN" _
               ","
    Set ^||ValidValues("lang") = lang
    

    Quit $$$OK
]]></Implementation>
</Method>

<Method name="Check">
<Description>
Make sure all the loaded books and articles are marked</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

    Set Orphans = 0
    For Tbl = "book", "article"
    {
        Set Q = "SELECT blockid FROM DocBook." _ Tbl _ " WHERE blockid IS NOT NULL"

        Set RS = ##class(%Library.ResultSet).%New("%DynamicQuery:SQL")
        Set sc = RS.Prepare(Q)
        If ($$$ISERR(sc))
        {
            Write $$$T("Error attempting to prepare check query"), !
            Do $SYSTEM.Status.DisplayError(sc)
            Quit
        }
        Set sc = RS.Execute()
        If ($$$ISERR(sc))
        {
            Write $$$T("Error attempting to execute check query"), !
            Do $SYSTEM.Status.DisplayError(sc)
            Quit
        }

        While (RS.Next())
        {
            Set Key = RS.GetData(1)
            If ($DATA(^DocBook.BookList(Key)) = 0)
            {
                Set Orphans = Orphans + 1
                Set Orphans(Orphans) = Key
            }
        }

        Set RS = ""
    }

    If (Orphans > 0)
    {
        Write "Orphaned documents:", !
        For i = 1 : 1 : Orphans
        {
            Write ?3, Orphans(i), !
        }
    }

    Quit $$$OK
]]></Implementation>
</Method>

<Method name="FillIn">
<Description>
Add data to the ^DocBook.BookList global</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>Doc:%String,Props...:%List</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

    Set n = $GET(Props, 0)
    Set i = 1
    While (i < n)
    {
        Set Name = $GET(Props(i), "Missing")
        Set Value = $GET(Props(i + 1), "Missing")
        If ($DATA(^||ValidValues(Name)) = 0)
            {
                Write "***** Missing category: ", Name, !
            }
        Else
            {
                Set Allowed = ^||ValidValues(Name)
                If (Allowed '[ ("," _ Value _ ","))
                {
                    Write "***** Undefined value: ", Value, "; category: ", Name, "; allowed: ", $EXTRACT(Allowed, 2, *-1), !
                }
            }
        Set ^DocBook.BookList(Doc, Name, Value) = ""
        Set i = $INCREMENT(i, 2)
    }

    Quit $$$OK
]]></Implementation>
</Method>

<Method name="Adjust">
<Description>
Remove the data for the missing materials.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec/>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

    Set Item = ""
    Set Item = $ORDER(^DocBook.BookList(Item))
    While (Item '= "")
    {
        Set bQuery = "SELECT ID FROM DocBook.book WHERE blockid = '" _ Item _ "'"
        Set aQuery = "SELECT ID FROM DocBook.article WHERE blockid = '" _ Item _ "'"

        ;#Write Item, ": "

        If (..Probe(bQuery))
        {
            ;# Write "Book", !
        }
        Elseif (..Probe(aQuery))
        {
            ;# Write "Article", !
        }
        Else
        {
            #;Write "Trim: ", Item, !
            Kill ^DocBook.BookList(Item)
            Set Item = $ORDER(^DocBook.BookList(Item))
            CONTINUE
        }

        Set Name = ""
        Set Name = $ORDER(^DocBook.BookList(Item,Name))
        While (Name '= "")
        {
            Set Value = ""
            Set Value = $ORDER(^DocBook.BookList(Item,Name,Value))
            While (Value '= "")
            {
                Set discard = $Increment(^DocBook.BookCategory(Name,Value))

                Set Value = $ORDER(^DocBook.BookList(Item,Name,Value))
            }

            Set Name = $ORDER(^DocBook.BookList(Item,Name))
        }

        Set Item = $ORDER(^DocBook.BookList(Item))
    }

    Quit $$$OK
]]></Implementation>
</Method>

<Method name="Probe">
<Description>
SQl probe for document</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>Query:%String</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[

    Set RS = ##class(%Library.ResultSet).%New("%DynamicQuery:SQL")
    Set sc = RS.Prepare(Query)
    If ($$$ISERR(sc))
    {
        Write $$$T("Error attempting to prepare query"), !
        Do $SYSTEM.Status.DisplayError(sc)
        Quit 0
    }
    Set sc = RS.Execute()
    If ($$$ISERR(sc))
    {
        Write $$$T("Error attempting to execute query"), !
        Do $SYSTEM.Status.DisplayError(sc)
        Quit 0
    }

    Set Count = 0
    While (RS.Next())
    {
        Set Count = Count + 1
    }

    Quit Count
]]></Implementation>
</Method>

<Method name="Collect">
<Description>
Display the stored taxonomy data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&Entries]]></FormalSpec>
<ReturnType/>
<Implementation><![CDATA[
    Set Entries = 0

    Set Doc = ""
    Set Doc = $ORDER(^DocBook.BookList(Doc))
    While (Doc '= "")
    {
        Set Category = ""
        Set Category = $ORDER(^DocBook.BookList(Doc, Category))
        While (Category '= "")
        {
            Set Value = ""
            Set Value = $ORDER(^DocBook.BookList(Doc, Category, Value))
            While (Value '= "")
            {
                Set Entries($INCREMENT(Entries)) = $LISTBUILD(Doc, Category, Value)
                Set Value = $ORDER(^DocBook.BookList(Doc, Category, Value))
            }
            Set Category = $ORDER(^DocBook.BookList(Doc, Category))
        }
        Set Doc = $ORDER(^DocBook.BookList(Doc))
    }

    Set Entries(0) = $LISTBUILD($$$T("Document"), $$$T("Category"), $$$T("Value"))

    Quit
]]></Implementation>
</Method>

<Method name="Show">
<Description>
Display the stored taxonomy data</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec/>
<ReturnType/>
<Implementation><![CDATA[
    Set Entries = ""
    Do ..Collect(.Entries)

    Set Sep = " - "

    For i = 1 : 1 : Entries
    {
        Set Entry = Entries(i)
        For j = 1 : 1 : 3
        {
            Write:(j > 1) Sep
            Write $LISTGET(Entry, j)
        }
        Write !
    }

  Quit
]]></Implementation>
</Method>

<Method name="DoCacheDoc">
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
    //Do ..FillIn("ABAS_FAQ" //article removed 2011
    //Do ..FillIn("ABPHP_HPBestPractice" //article removed 2010
    //Do ..FillIn("ACHUI_Mgmt", //article removed 2011
    Do ..FillIn("ACMD_Cache_Cmd_Line",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Advanced"),
                "product", $$$T("Confidential"),
                "book", $$$T("Articles"))
    //Do ..FillIn("ACSW_Switches", //article removed 2011
    Do ..FillIn("ADBE",
                "role", $$$T("Security"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Introductory"),
                "book", $$$T("Articles"))
    Do ..FillIn("ADCHA",
                "role", $$$T("Administration"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Articles"))
    Do ..FillIn("ADEPLOY",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"))
    Do ..FillIn("ADM_DataMove",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Advanced"),
                "product", $$$T("Confidential"),
                "book", $$$T("Articles"))
    //Do ..FillIn("AGBC_Gblockcopy", //article removed 2011
    //Do ..FillIn("AINST_Installer", //article removed 2011
    //Do ..FillIn("ALDC_LegacyDocCollection", //article removed 2008
    Do ..FillIn("ACLS",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Introductory"),
                "book", $$$T("Articles"))
    Do ..FillIn("AFIPS",
                "role", $$$T("Security"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Articles"))
    Do ..FillIn("ALOCK",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Articles"),
                "lang", $$$T("ObjectScript"))
    Do ..FillIn("AMIRROR_FAQ", //article removed 2015
                "role", $$$T("Administration"),
                "product", $$$T("Cache"),
                "level", $$$T("Introductory"),
                "book", $$$T("Articles"))
    //Do ..FillIn("ANAI_NetApp_Integration", //article removed 2010
    Do ..FillIn("APMML",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    //Do ..FillIn("APRI_HowToPrintDocs", //article removed 2008
    //Do ..FillIn("ARAPI", //article removed 2010
    //Do ..FillIn("ARPT_pButtons", //article removed 2011
    Do ..FillIn("ASECURING",
                "role", $$$T("Development"),
                "role", $$$T("Security"),
                "app", $$$T("Client/Server"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Articles"))
    Do ..FillIn("ASEMAPHORE",
                "role", $$$T("Development"),
                "app", $$$T("Integration"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Advanced"),
                "book", $$$T("Articles"))
    //Do ..FillIn("ASQL_FAQ", //article removed 2011
    Do ..FillIn("ATRYCATCHFAQ",
                "role", $$$T("Development"),
                "app", $$$T("Client/Server"),
                "product", $$$T("Cache"),
                "level", $$$T("Introductory"),
                "book", $$$T("Articles"))
    //Do ..FillIn("AUIP_Adding_UNIX_Install_Pkg_to_Cache", //article removed 2011
    //Do ..FillIn("AUNIT_StudioPerforce", //article removed 2011
    //Do ..FillIn("AWLD", //article removed 2011
    Do ..FillIn("AVMEM",
                "role", $$$T("Development"),
                "app", $$$T("Client/Server"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Articles"))
    //Do ..FillIn("AWSI_Win_Silent_Install", //article removed 2011
    //Do ..FillIn("AZF_DSM", //article removed 2011
    //Do ..FillIn("AZSS_ZStartZStop", //article removed 2011

    Do ..FillIn("BGAX",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "lang", $$$T("BASIC"),
                "book", $$$T("Guides"))
    Do ..FillIn("BGCL",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"),
                "book", $$$T("References"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "lang", $$$T("CPP"))
    Do ..FillIn("BGJD",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "lang", $$$T("Java"),
                "lang", $$$T("SQL"))
    Do ..FillIn("BGOD",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "lang", $$$T("BASIC"),
                "lang", $$$T("SQL"),
                "lang", $$$T("DOTNET"))
    Do ..FillIn("BGNT",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "lang", $$$T("DOTNET"))
    Do ..FillIn("BLAX",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "lang", $$$T("BASIC"),
                "book", $$$T("Guides"))
    Do ..FillIn("BLCP",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "app", $$$T("Client/Server"),
                "lang", $$$T("CPP"),
                "book", $$$T("Guides"))
    Do ..FillIn("BLCX",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "app", $$$T("Client/Server"),
                "lang", $$$T("CPP"),
                "book", $$$T("Guides"))
    Do ..FillIn("BLJV",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "lang", $$$T("Java"))
    Do ..FillIn("BLXT",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"),
                "app", $$$T("Client/Server"),
                "lang", $$$T("Java"))
    Do ..FillIn("BNTG",
                "role", $$$T("Development"),
                "role", $$$T("Tools"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "lang", $$$T("DOTNET"))
    Do ..FillIn("BXCI",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"),
                "book", $$$T("References"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "lang", $$$T("CPP"))
    Do ..FillIn("BXJD",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "lang", $$$T("Java"),
                "lang", $$$T("ObjectScript"))
    Do ..FillIn("BXJS",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "lang", $$$T("Javascript"))
    Do ..FillIn("BXJV",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "lang", $$$T("Java"))
    Do ..FillIn("BXNT",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "lang", $$$T("DOTNET"))
    Do ..FillIn("BXOD",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "lang", $$$T("DOTNET"),
                "lang", $$$T("ObjectScript"))

    Do ..FillIn("D2ANLY",
                "product", $$$T("Cache"),
                "role", $$$T("Administration"),
                "level", $$$T("Intermediate"),
                "lang", $$$T("DeepSee"),
                "book", $$$T("Guides"))
    Do ..FillIn("D2CLIENT",
                "product", $$$T("Cache"),
                "role", $$$T("Development"),
                "level", $$$T("Intermediate"),
                "lang", $$$T("DeepSee"),
                "lang", $$$T("SOAP"),
                "lang", $$$T("Javascript"),
                "book", $$$T("Guides"))
    Do ..FillIn("D2DASH",
                "product", $$$T("Cache"),
                "role", $$$T("Administration"),
                "level", $$$T("Intermediate"),
                "lang", $$$T("DeepSee"),
                "book", $$$T("Guides"))
    Do ..FillIn("D2DT",
                "product", $$$T("Cache"),
                "role", $$$T("Tools"),
                "level", $$$T("Intermediate"),
                "lang", $$$T("DeepSee"),
                "book", $$$T("Tutorials"))
    Do ..FillIn("D2GS",
                "product", $$$T("Cache"),
                "role", $$$T("Development"),
                "level", $$$T("Intermediate"),
                "lang", $$$T("DeepSee"),
                "book", $$$T("Guides"))
    Do ..FillIn("D2GMDX",
                "product", $$$T("Cache"),
                "role", $$$T("Development"),
                "level", $$$T("Intermediate"),
                "lang", $$$T("DeepSee"),
                "book", $$$T("Guides"))
    Do ..FillIn("D2IMP",
                "product", $$$T("Cache"),
                "role", $$$T("Development"),
                "level", $$$T("Intermediate"),
                "lang", $$$T("DeepSee"),
                "book", $$$T("Guides"))
    Do ..FillIn("D2MODADV",
                "product", $$$T("Cache"),
                "role", $$$T("Development"),
                "level", $$$T("Intermediate"),
                "lang", $$$T("DeepSee"),
                "book", $$$T("Guides"))
    Do ..FillIn("D2MODEL",
                "product", $$$T("Cache"),
                "role", $$$T("Development"),
                "level", $$$T("Intermediate"),
                "lang", $$$T("DeepSee"),
                "book", $$$T("Guides"))
    Do ..FillIn("D2RMDX",
                "product", $$$T("Cache"),
                "role", $$$T("Development"),
                "level", $$$T("Intermediate"),
                "lang", $$$T("DeepSee"),
                "book", $$$T("References"))
    Do ..FillIn("D2RPT",
                "product", $$$T("Ensemble"),
                "role", $$$T("Development"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("D2USER",
                "product", $$$T("Cache"),
                "role", $$$T("Administration"),
                "level", $$$T("Introductory"),
                "lang", $$$T("DeepSee"),
                "book", $$$T("Guides"))

    Do ..FillIn("GBAS",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "lang", $$$T("BASIC"))
    Do ..FillIn("GBAX",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Integration"),
                "lang", $$$T("BASIC"))
    Do ..FillIn("GBAX",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("GBCB",
                "role", $$$T("Development"),
                "lang", $$$T("CPP"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("GBCD",
                "role", $$$T("Development"),
                "lang", $$$T("CPP"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "app", $$$T("Client/Server"),
                "book", $$$T("Guides"))
    Do ..FillIn("GBCP",
                "role", $$$T("Development"),
                "lang", $$$T("CPP"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "book", $$$T("Guides"))
    Do ..FillIn("GBJJ",
                "role", $$$T("Development"),
                "lang", $$$T("Java"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "book", $$$T("Guides"))
    Do ..FillIn("GBJP",
                "role", $$$T("Development"),
                "lang", $$$T("Java"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("GBJV",
                "role", $$$T("Development"),
                "lang", $$$T("Java"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("GBMP",
                "role", $$$T("Development"),
                "lang", $$$T("DOTNET"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "book", $$$T("Guides"))
    Do ..FillIn("GBOC",
                "role", $$$T("Development"),
                "lang", $$$T("CPP"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("GBPL",
                "role", $$$T("Development"),
                "lang", $$$T("PERL"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "book", $$$T("Guides"))
    Do ..FillIn("GBPY",
                "role", $$$T("Development"),
                "lang", $$$T("PYTHON"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "book", $$$T("Guides"))
    Do ..FillIn("GCAS",
                "role", $$$T("Security"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("GCDI",
                "role", $$$T("Administration"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("GCGI",
                "role", $$$T("Installation"),
                "role", $$$T("Administration"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "app", $$$T("Web"),
                "level", $$$T("Advanced"),
                "lang", $$$T("CSP"),
                "book", $$$T("Guides"))
    Do ..FillIn("GCHW",
                "role", $$$T("Administration"),
                "app", $$$T("Terminal"),
                "product", $$$T("Cache"),
                "level", $$$T("Advanced"),
                "book", $$$T("References"))
    Do ..FillIn("GCI",
                "role", $$$T("Security"),
                "role", $$$T("Installation"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("GCIO",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"),
                "book", $$$T("References"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "lang", $$$T("CPP"))
    Do ..FillIn("GCM",
                "role", $$$T("Administration"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("GCNV",
                "role", $$$T("Installation"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("GCNVA",
                "role", $$$T("Installation"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("GCOS",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "lang", $$$T("ObjectScript"))
    Do ..FillIn("GCRL",
                "role", $$$T("Tools"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("GCRN",
                "role", $$$T("Administration"),
                "role", $$$T("Installation"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("GCSP",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "app", $$$T("Web"),
                "lang", $$$T("ObjectScript"),
                "lang", $$$T("BASIC"),
                "lang", $$$T("HTML"),
                "lang", $$$T("CSP"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("GCTM",
                "role", $$$T("Installation"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Introductory"),
                "book", $$$T("References"))
    Do ..FillIn("GDDM",
                "role", $$$T("Development"),
                "role", $$$T("Administration"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("GDOC",
                "role", $$$T("Tools"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("GDOCDB",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "app", $$$T("Web"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "lang", $$$T("Javascript"),
                "lang", $$$T("ObjectScript"),
                "lang", $$$T("SQL"))
    Do ..FillIn("GGBL",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"),
                "lang", $$$T("ObjectScript"),
                "lang", $$$T("SQL"))
    Do ..FillIn("GHA",
                "role", $$$T("Administration"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("GIC",
                "role", $$$T("Development"),
                "role", $$$T("Administration"),
                "role", $$$T("Security"),
                "role", $$$T("Tools"),
                "product", $$$T("Cache"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("GIII",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("GIOD",
                "role", $$$T("Development"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Terminal"),
                "lang", $$$T("ObjectScript"),
                "product", $$$T("Cache"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"))
    Do ..FillIn("GISQ",
                "role", $$$T("Development"),
                "app", $$$T("Client/Server"),
                "lang", $$$T("SQL"),
                "lang", $$$T("ISQL/TSQL"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("GIMT",
                "role", $$$T("Administration"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("GIKNOW",
                "role", $$$T("Development"),
                "role", $$$T("Tools"),
                "product", $$$T("Cache"),
                "level", $$$T("Advanced"),
                "lang", $$$T("ObjectScript"),
                "book", $$$T("Guides"))
    Do ..FillIn("GJSON",
                "product", $$$T("Cache"),
                "role", $$$T("Development"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "lang", $$$T("SOAP"))
    Do ..FillIn("GJVG",
                "role", $$$T("Development"),
                "role", $$$T("Tools"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "lang", $$$T("Java"))
    Do ..FillIn("GMSM",
                "role", $$$T("Administration"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Terminal"),
                "product", $$$T("Cache"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"))
    Do ..FillIn("GNET",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("GNTG",
                "role", $$$T("Development"),
                "role", $$$T("Tools"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "lang", $$$T("DOTNET"))
    Do ..FillIn("GOAUTH",
                "role", $$$T("Development"),
                "app", $$$T("Client/Server"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"))
    Do ..FillIn("GOBJ",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "lang", $$$T("BASIC"),
                "lang", $$$T("ObjectScript"))
    Do ..FillIn("GORIENT",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "lang", $$$T("ObjectScript"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("GRCA",
                "role", $$$T("Development"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"),
                "app", $$$T("Web"),
                "lang", $$$T("HTML"),
                "lang", $$$T("XML"))
    Do ..FillIn("GREST",
                "product", $$$T("Cache"),
                "role", $$$T("Development"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "lang", $$$T("SOAP"))
    Do ..FillIn("GRPT",
                "role", $$$T("Development"),
                "book", $$$T("Guides"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "product", $$$T("HealthShare"),
                "app", $$$T("Web"),
                "lang", $$$T("HTML"),
                "lang", $$$T("ZEN"),
                "lang", $$$T("XML"))
    Do ..FillIn("GSA",
                "role", $$$T("Administration"),
                "product", $$$T("Cache"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("GSCF",
                "role", $$$T("Development"),
                "app", $$$T("Client/Server"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"))
    Do ..FillIn("GSOP",
                "product", $$$T("Cache"),
                "role", $$$T("Development"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "lang", $$$T("SOAP"))
    Do ..FillIn("GSOAP",
                "product", $$$T("Cache"),
                "role", $$$T("Development"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "lang", $$$T("SOAP"))
    Do ..FillIn("GSOAPSEC",
                "product", $$$T("Cache"),
                "role", $$$T("Development"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "lang", $$$T("SOAP"))
    Do ..FillIn("GSQG",
                "role", $$$T("Development"),
                "lang", $$$T("SQL"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("GSQL",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"),
                "lang", $$$T("SQL"))
    Do ..FillIn("GSQLOPT",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "lang", $$$T("SQL"))
    Do ..FillIn("GSTD",
                "role", $$$T("Tools"),
                "lang", $$$T("ObjectScript"),
                "lang", $$$T("BASIC"),
                "lang", $$$T("MultiValue"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("GSTU",
                "role", $$$T("Development"),
                "role", $$$T("Administration"),
                "role", $$$T("Installation"),
                "role", $$$T("Tools"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "level", $$$T("Advanced"),
                "app", $$$T("Web"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Terminal"),
                "book", $$$T("References"))
    Do ..FillIn("GSYB",
                "role", $$$T("Development"),
                "lang", $$$T("SQL"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "book", $$$T("Guides"))
    Do ..FillIn("GTBP",
                "role", $$$T("Tools"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("GTER",
                "product", $$$T("Cache"),
                "role", $$$T("Development"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("GTSQ",
                "role", $$$T("Development"),
                "app", $$$T("Client/Server"),
                "lang", $$$T("SQL"),
                "lang", $$$T("ISQL/TSQL"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("GVCC",
                "role", $$$T("Development"),
                "app", $$$T("Terminal"),
                "lang", $$$T("MultiValue"),
                "product", $$$T("Cache"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("GVGS",
                "role", $$$T("Development"),
                "app", $$$T("Terminal"),
                "lang", $$$T("MultiValue"),
                "product", $$$T("Cache"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("GVOD",
                "role", $$$T("Development"),
                "app", $$$T("Terminal"),
                "lang", $$$T("MultiValue"),
                "product", $$$T("Cache"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("GVRF",
                "role", $$$T("Development"),
                "app", $$$T("Terminal"),
                "lang", $$$T("BASIC"),
                "lang", $$$T("MultiValue"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("GVSP",
                "role", $$$T("Development"),
                "app", $$$T("Terminal"),
                "lang", $$$T("MultiValue"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("GVTT",
                "role", $$$T("Development"),
                "app", $$$T("Terminal"),
                "lang", $$$T("MultiValue"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("GWSCB",
                "product", $$$T("Cache"),
                "role", $$$T("Development"),
                "app", $$$T("Client/Server"),
                "lang", $$$T("SOAP"),
                "lang" , $$$T("DOTNET"))
    Do ..FillIn("GWST",
                "product", $$$T("Cache"),
                "role", $$$T("Development"),
                "level", $$$T("Intermediate"),
                "app", $$$T("Client/Server"),
                "lang", $$$T("ZEN"),
                "lang", $$$T("HTML"),
                "lang", $$$T("CSP"))
    Do ..FillIn("GXML",
                "product", $$$T("Cache"),
                "role", $$$T("Development"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "lang", $$$T("XML"))
    Do ..FillIn("GXMLPROJ",
                "product", $$$T("Cache"),
                "role", $$$T("Development"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "lang", $$$T("XML"))
    Do ..FillIn("GZAP",
                "role", $$$T("Development"),
                "book", $$$T("Guides"),
                "app", $$$T("Web"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "lang", $$$T("HTML"),
                "lang", $$$T("CSP"),
                "lang", $$$T("ZEN"),
                "lang", $$$T("Javascript"),
                "lang", $$$T("XML"))
    Do ..FillIn("GZCP",
                "role", $$$T("Development"),
                "book", $$$T("Guides"),
                "app", $$$T("Web"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "lang", $$$T("HTML"),
                "lang", $$$T("CSP"),
                "lang", $$$T("ZEN"),
                "lang", $$$T("Javascript"),
                "lang", $$$T("XML"))
    Do ..FillIn("GZEN",
                "role", $$$T("Development"),
                "book", $$$T("Guides"),
                "app", $$$T("Web"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "lang", $$$T("HTML"),
                "lang", $$$T("CSP"),
                "lang", $$$T("ZEN"),
                "lang", $$$T("Javascript"),
                "lang", $$$T("XML"))

    Do ..FillIn("ZENMOJO",
                "role", $$$T("Development"),
                "book", $$$T("Guides"),
                "app", $$$T("Web"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "lang", $$$T("HTML"),
                "lang", $$$T("CSP"),
                "lang", $$$T("ZEN"),
                "lang", $$$T("Javascript"),
                "lang", $$$T("XML"))
    Do ..FillIn("ZMPLUGIN",
                "role", $$$T("Development"),
                "book", $$$T("Guides"),
                "app", $$$T("Web"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "lang", $$$T("HTML"),
                "lang", $$$T("CSP"),
                "lang", $$$T("ZEN"),
                "lang", $$$T("Javascript"),
                "lang", $$$T("XML"))

    Do ..FillIn("RACS",
                "role", $$$T("Administration"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("References"))
    Do ..FillIn("RBAS",
                "role", $$$T("Development"),
                "lang", $$$T("BASIC"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("References"))
    Do ..FillIn("RCOS",
                "role", $$$T("Development"),
                "lang", $$$T("ObjectScript"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("References"))
    Do ..FillIn("RCPF",
                "role", $$$T("Administration"),
                "product", $$$T("Cache"),
                "level", $$$T("Advanced"),
                "book", $$$T("References"))
    Do ..FillIn("RCSP",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "app", $$$T("Web"),
                "lang", $$$T("HTML"),
                "lang", $$$T("CSP"),
                "lang", $$$T("ObjectScript"),
                "level", $$$T("Intermediate"),
                "book", $$$T("References"))
    Do ..FillIn("RERR",
                "role", $$$T("Development"),
                "lang", $$$T("ObjectScript"),
                "lang", $$$T("BASIC"),
                "lang", $$$T("MultiValue"),
                "lang", $$$T("SQL"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "product", $$$T("HealthShare"),
                "product", $$$T("TrakCare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("References"))
    Do ..FillIn("RGOT",
                "role", $$$T("Development"),
                "role", $$$T("Administration"),
                "role", $$$T("Security"),
                "role", $$$T("Tools"),
                "product", $$$T("Cache"),
                "level", $$$T("Introductory"),
                "book", $$$T("References"))
    Do ..FillIn("ROBJ",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("References"),
                "lang", $$$T("ObjectScript"))
    Do ..FillIn("RSQL",
                "role", $$$T("Development"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Web"),
                "lang", $$$T("SQL"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("References"))
    Do ..FillIn("RVBS",
                "role", $$$T("Development"),
                "app", $$$T("Terminal"),
                "lang", $$$T("MultiValue"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("References"))
    Do ..FillIn("RVCL",
                "role", $$$T("Development"),
                "app", $$$T("Terminal"),
                "lang", $$$T("MultiValue"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("References"))
    Do ..FillIn("RVPC",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Advanced"),
                "book", $$$T("References"),
                "lang", $$$T("MultiValue"))
    Do ..FillIn("RVQL",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Advanced"),
                "book", $$$T("References"),
                "lang", $$$T("MultiValue"))
    Do ..FillIn("RZUT",
                "role", $$$T("Development"),
                "lang", $$$T("ObjectScript"),
                "product", $$$T("Confidential"),
                "level", $$$T("Intermediate"),
                "book", $$$T("References"))
    Do ..FillIn("TBAS",
                "role", $$$T("Development"),
                "app", $$$T("Client/Server"),
                "lang", $$$T("BASIC"),
                "product", $$$T("Cache"),
                "level", $$$T("Introductory"),
                "book", $$$T("Tutorials"))
    Do ..FillIn("TCMP",
                "role", $$$T("Development"),
                "app", $$$T("Client/Server"),
                "lang", $$$T("DOTNET"),
                "product", $$$T("Cache"),
                "level", $$$T("Introductory"),
                "book", $$$T("Tutorials"))
    Do ..FillIn("TCOS",
                "role", $$$T("Development"),
                "app", $$$T("Client/Server"),
                "lang", $$$T("ObjectScript"),
                "product", $$$T("Cache"),
                "level", $$$T("Introductory"),
                "book", $$$T("Tutorials"))
    Do ..FillIn("TCSP",
                "role", $$$T("Development"),
                "app", $$$T("Web"),
                "lang", $$$T("ObjectScript"),
                "lang", $$$T("CSP"),
                "product", $$$T("Cache"),
                "level", $$$T("Introductory"),
                "book", $$$T("Tutorials"))
    Do ..FillIn("THL7",
                "role", $$$T("Development"),
                "app", $$$T("Web"),
                "app", $$$T("Client/Server"),
                "product", $$$T("Cache"),
                "lang", $$$T("ObjectScript"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Tutorials"))
    Do ..FillIn("TJAV",
                "role", $$$T("Development"),
                "app", $$$T("Web"),
                "app", $$$T("Client/Server"),
                "product", $$$T("Cache"),
                "lang", $$$T("Java"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Tutorials"))
    Do ..FillIn("TJLP",
                "role", $$$T("Development"),
                "lang", $$$T("Java"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Tutorials"))
    Do ..FillIn("TLKP",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Introductory"),
                "book", $$$T("Tutorials"))
    Do ..FillIn("TQKS",
                "role", $$$T("Tools"),
                "product", $$$T("Cache"),
                "level", $$$T("Introductory"),
                "book", $$$T("Tutorials"))
    Do ..FillIn("TSOA",
                "role", $$$T("Development"),
                "app", $$$T("Web"),
                "lang", $$$T("HTML"),
                "lang", $$$T("Javascript"),
                "lang", $$$T("XML"),
                "lang", $$$T("SOAP"),
                "product", $$$T("Cache"),
                "level", $$$T("Introductory"),
                "book", $$$T("Tutorials"))
    Do ..FillIn("TSQS",
                "role", $$$T("Development"),
                "product", $$$T("Cache"),
                "level", $$$T("Introductory"),
                "book", $$$T("Tutorials"))
    Do ..FillIn("TUNT",
                "role", $$$T("Development"),
                "lang", $$$T("ObjectScript"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Tutorials"))
    Do ..FillIn("TVQS",
                "role", $$$T("Development"),
                "lang", $$$T("MultiValue"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Tutorials"))
    Do ..FillIn("TWEB",
                "role", $$$T("Development"),
                "app", $$$T("Web"),
                "lang", $$$T("HTML"),
                "lang", $$$T("Javascript"),
                "lang", $$$T("XML"),
                "product", $$$T("Cache"),
                "level", $$$T("Introductory"),
                "book", $$$T("Tutorials"))
    Do ..FillIn("TXML",
                "role", $$$T("Development"),
                "app", $$$T("Web"),
                "lang", $$$T("XML"),
                "product", $$$T("Cache"),
                "product", $$$T("Ensemble"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Tutorials"))
    Do ..FillIn("TZEN",
                "role", $$$T("Development"),
                "app", $$$T("Web"),
                "lang", $$$T("BASIC"),
                "lang", $$$T("HTML"),
                "lang", $$$T("CSP"),
                "lang", $$$T("ZEN"),
                "lang", $$$T("Javascript"),
                "lang", $$$T("ObjectScript"),
                "product", $$$T("Cache"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Tutorials"))
]]></Implementation>
</Method>

<Method name="DoEnsembleDoc">
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
    Do ..FillIn("EACT",
                "role", $$$T("Development"),
                "app", $$$T("Integration"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("EAST",
                "role", $$$T("Development"),
                "app", $$$T("Integration"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("EBPL",
                "role", $$$T("Development"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Integration"),
                "lang", $$$T("BPL"))
    Do ..FillIn("EBPLR",
                 "role", $$$T("Development"),
                 "product", $$$T("Ensemble"),
                 "level", $$$T("Intermediate"),
                 "book", $$$T("References"),
                 "app", $$$T("Integration"),
                 "lang", $$$T("BPL"))
    Do ..FillIn("EBUS",
                "role", $$$T("Development"),
                "app", $$$T("Integration"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("EDAS",
                "role", $$$T("Development"),
                "role", $$$T("Tools"),
                "app", $$$T("Integration"),
                "lang", $$$T("XML"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("EHL72",
                "role", $$$T("Development"),
                "app", $$$T("Integration"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("EDICOM",
                "role", $$$T("Development"),
                "app", $$$T("Integration"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("EDOOP",
                "role", $$$T("Development"),
                "app", $$$T("Integration"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "product", $$$T("Ensemble"),
                "lang", $$$T("ObjectScript"),
                "lang", $$$T("Java"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("EDTL",
                "role", $$$T("Development"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Integration"),
                "lang", $$$T("DTL"))
    Do ..FillIn("EDTLR",
                "role", $$$T("Development"),
                "role", $$$T("Tools"),
                "product", $$$T("Ensemble"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "app", $$$T("Integration"),
                "lang", $$$T("XML"))
    Do ..FillIn("EDTLR",
                "role", $$$T("Development"),
                "role", $$$T("Tools"),
                "product", $$$T("Ensemble"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("References"),
                "app", $$$T("Integration"),
                "lang", $$$T("XML"))
    Do ..FillIn("EEDI",
                "role", $$$T("Development"),
                "app", $$$T("Integration"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("EEMA",
                "role", $$$T("Development"),
                "app", $$$T("Integration"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("EERR",
                "product", $$$T("Ensemble"),
                "product", $$$T("HealthShare"),
                "product", $$$T("TrakCare"),
                "level", $$$T("Advanced"),
                "book", $$$T("References"),
                "app", $$$T("Integration"))
    Do ..FillIn("EESB",
                "product", $$$T("Ensemble"),
                "role", $$$T("Development"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"),
                "app", $$$T("Web"),
                "app", $$$T("Integration"))
    Do ..FillIn("EFIL",
                "role", $$$T("Development"),
                "app", $$$T("Integration"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("EFTP",
                "role", $$$T("Development"),
                "app", $$$T("Integration"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("EGBP",
                "role", $$$T("Development"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"),
                "app", $$$T("Integration"))
    Do ..FillIn("EGDQ",
                "product", $$$T("Ensemble"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"),
                "app", $$$T("Integration"))
    Do ..FillIn("EGDV",
                "role", $$$T("Development"),
                "product", $$$T("Ensemble"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"),
                "app", $$$T("Integration"))
    Do ..FillIn("EGIN",
                "product", $$$T("Ensemble"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"),
                "app", $$$T("Integration"))
    Do ..FillIn("EGMG",
                "role", $$$T("Development"),
                "role", $$$T("Administration"),
                "role", $$$T("Tools"),
                "app", $$$T("Integration"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("EGRN",
                "product", $$$T("Ensemble"),
                "role", $$$T("Administration"),
                "role", $$$T("Installation"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("EPREP",
                "product", $$$T("Ensemble"),
                "role", $$$T("Administration"),
                "role", $$$T("Installation"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("EGWF",
                "role", $$$T("Development"),
                "app", $$$T("Integration"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("EHL73",
                "role", $$$T("Development"),
                "app", $$$T("Integration"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("EHTTP",
                "role", $$$T("Development"),
                "app", $$$T("Integration"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("EITK",
                "role", $$$T("Development"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Integration"))
    Do ..FillIn("EIWA",
                "role", $$$T("Development"),
                "app", $$$T("Integration"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("EJVG",
                "role", $$$T("Development"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "lang", $$$T("Java"))
    Do ..FillIn("EMMQ",
                "role", $$$T("Development"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Web"),
                "app", $$$T("Integration"))
    Do ..FillIn("EMQS",
                "role", $$$T("Development"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Web"),
                "app", $$$T("Integration"))
    Do ..FillIn("ENTG",
                "role", $$$T("Development"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Client/Server"),
                "app", $$$T("Integration"),
                "lang", $$$T("DOTNET"))
    Do ..FillIn("EPUSH",
                "role", $$$T("Development"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"),
                "app", $$$T("Web"))
    Do ..FillIn("ERECMAP",
                "role", $$$T("Development"),
                "role", $$$T("Tools"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Integration"))
    Do ..FillIn("EREST",
                "role", $$$T("Development"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Web"),
                "app", $$$T("Integration"),
                "lang", $$$T("SOAP"))
    Do ..FillIn("ESAP",
                "role", $$$T("Development"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Integration"),
                "lang", $$$T("Java"))
    Do ..FillIn("ESOAP",
                "role", $$$T("Development"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Web"),
                "app", $$$T("Integration"),
                "lang", $$$T("SOAP"))
    Do ..FillIn("ESQL",
                "role", $$$T("Development"),
                "app", $$$T("Integration"),
                "lang", $$$T("SQL"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("ETCP",
                "role", $$$T("Development"),
                "app", $$$T("Integration"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("EX12",
                "role", $$$T("Development"),
                "app", $$$T("Integration"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("ECONFIG",
                "role", $$$T("Development"),
                "role", $$$T("Administration"),
                "role", $$$T("Security"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Integration"))
    Do ..FillIn("EMONITOR",
                "role", $$$T("Development"),
                "role", $$$T("Administration"),
                "product", $$$T("Ensemble"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"),
                "app", $$$T("Integration"))
    Do ..FillIn("EXML",
                "role", $$$T("Development"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "lang", $$$T("XML"),
                "book", $$$T("Guides"),
                "app", $$$T("Integration"))
    Do ..FillIn("TELP",
                "role", $$$T("Development"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Introductory"),
                "book", $$$T("Tutorials"))
    Do ..FillIn("TTEP",
                "role", $$$T("Development"),
                "lang", $$$T("BPL"),
                "product", $$$T("Ensemble"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Tutorials"))
]]></Implementation>
</Method>

<Method name="DoHealthShareDoc">
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
    // F* books
    Do ..FillIn("FADM",
                "role", $$$T("Administration"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("FBSC",
                "role", $$$T("Development"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("FFDN",
                "role", $$$T("Development"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("FIHE",
                "role", $$$T("Development"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("FINS",
                "role", $$$T("Installation"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("FOVW",
                "role", $$$T("Development"),
                "product", $$$T("HealthShare"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"))
    Do ..FillIn("FREG",
                "role", $$$T("Development"),
                "role", $$$T("Administration"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("FRN",
                "role", $$$T("Administration"),
                "role", $$$T("Installation"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))

    // HE* books
    Do ..FillIn("HEADM",
                "role", $$$T("Administration"),
                "role", $$$T("Tools"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HECON",
                "role", $$$T("Administration"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HECUI",
                "role", $$$T("Development"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"))
    Do ..FillIn("HEDAT",
                "role", $$$T("Development"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HEENS",
                "role", $$$T("Administration"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HEFLW",
                "role", $$$T("Development"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HEINS",
                "role", $$$T("Installation"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("HEMAP",
                "role", $$$T("Development"),
                "role", $$$T("Tools"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("HEMRR",
                "role", $$$T("Installation"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"))
    Do ..FillIn("HEOV",
                "role", $$$T("Administration"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("HEPUSH",
                "role", $$$T("Administration"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HEREF",
                "role", $$$T("Development"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("References"))
    Do ..FillIn("HERN",
                "role", $$$T("Administration"),
                "role", $$$T("Installation"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HERPT",
                "role", $$$T("Development"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"))
    Do ..FillIn("HESEC",
                "role", $$$T("Security"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HESUP",
                "role", $$$T("Development"),
                "role", $$$T("Installation"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("HETRM",
                "role", $$$T("Development"),
                "product", $$$T("HealthShare"),
                "book", $$$T("Guides"),
                "level", $$$T("Advanced"))

    //HSAA books
    Do ..FillIn("HSAA",
                "role", $$$T("Administration"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HSAAADM",
                "role", $$$T("Administration"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HSAAIC",
                "role", $$$T("Installation"),
                "role", $$$T("Development"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HSAARN",
                "role", $$$T("Administration"),
                "role", $$$T("Installation"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))

    //HSPD doc
    Do ..FillIn("HSPD",
                "role", $$$T("Tools"),
                "product", $$$T("HealthShare"),
                "book", $$$T("Guides"))
    Do ..FillIn("HSPDC",
                "role", $$$T("Development"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("HSPDIMP",
                "product", $$$T("HealthShare"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"))

    //HSPI doc
    Do ..FillIn("HSPI",
                "role", $$$T("Development"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HSPIC",
                "role", $$$T("Installation"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HSPIConfigure",
                "role", $$$T("Installation"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HSPIInstall",
                "role", $$$T("Installation"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HSPIMirror",
                "role", $$$T("Installation"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"))
    Do ..FillIn("HSPIRN",
                "role", $$$T("Administration"),
                "role", $$$T("Installation"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HSPIUpgrade",
                "role", $$$T("Installation"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))

    // HSPC doc
    // HealthShare Personal Community
    Do ..FillIn("HSPCIntroduction",
                "product", $$$T("HealthShare"),
                "level", $$$T("Introductory"))
    Do ..FillIn("HSPCRelNotes",
                "role", $$$T("Administration"),
                "role", $$$T("Installation"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HSPCMobile",
                "role", $$$T("Development"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HSPCInstallation",
                "role", $$$T("Administration"),
                "role", $$$T("Installation"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("HSPCRoadmap",
                "product", $$$T("HealthShare"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("HSPCCoding",
                "role", $$$T("Development"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HSPCConfiguring",
                "role", $$$T("Administration"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HSPCUI",
                "role", $$$T("Administration"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("AHSPC_MU2Reports",
                "role", $$$T("Administration"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Introductory"),
                "book", $$$T("Articles"))

    //probably old
    /*
    Do ..FillIn("HADM",
                "role", $$$T("Administration"),
                "role", $$$T("Tools"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HCON",
                "role", $$$T("Administration"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HCUI",
                "role", $$$T("Development"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"))
    Do ..FillIn("HDAT",
                "role", $$$T("Development"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HENS",
                "role", $$$T("Administration"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HFLW",
                "role", $$$T("Development"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HINS",
                "role", $$$T("Installation"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("HMAP",
                "role", $$$T("Development"),
                "role", $$$T("Tools"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("HPGG",
                "product", $$$T("HealthShare"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"))
    Do ..FillIn("HPD",
                "role", $$$T("Development"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HOV",
                "role", $$$T("Administration"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("HPIC",
                "role", $$$T("Installation"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HPUSH",
                "role", $$$T("Administration"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HREF",
                "role", $$$T("Development"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("References"))
    Do ..FillIn("HRN",
                "role", $$$T("Administration"),
                "role", $$$T("Installation"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HRPT",
                "role", $$$T("Development"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"))
    Do ..FillIn("HSEC",
                "role", $$$T("Security"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("HPDC",
                "role", $$$T("Installation"),
                "product", $$$T("HealthShare"),
                "book", $$$T("Guides"))

    Do ..FillIn("HSUP",
                "role", $$$T("Development"),
                "role", $$$T("Installation"),
                "product", $$$T("HealthShare"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("HTRM",
                "role", $$$T("Development"),
                "product", $$$T("HealthShare"),
                "book", $$$T("Guides"),
                "level", $$$T("Advanced"))
                */
]]></Implementation>
</Method>

<Method name="DoTrakDoc">
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
    Do ..FillIn("IIM",
                "product", $$$T("TrakCare"))
    Do ..FillIn("KADM",
                "role", $$$T("Administration"),
                "product", $$$T("TrakCare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("KCOR",
                "role", $$$T("Development"),
                "product", $$$T("TrakCare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("KCUI",
                "role", $$$T("Development"),
                "product", $$$T("TrakCare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("KDOC",
                "product", $$$T("TrakCare"),
                "product", $$$T("Confidential"))
    Do ..FillIn("KEPR",
                "role", $$$T("Development"),
                "product", $$$T("TrakCare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("KMEN",
                "role", $$$T("Development"),
                "product", $$$T("TrakCare"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"))
    Do ..FillIn("KORD",
                "role", $$$T("Development"),
                "product", $$$T("TrakCare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("KOV",
                "role", $$$T("Implementation"),
                "product", $$$T("TrakCare"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("KQUE",
                "role", $$$T("Administration"),
                "product", $$$T("TrakCare"),
                "book", $$$T("Guides"))
    Do ..FillIn("KWRK",
                "role", $$$T("Development"),
                "product", $$$T("TrakCare"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("KGADMIN",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Administration"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGAUDIT",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Administration"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGBILLING",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGCLINPATH",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGCODETAB",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("ObjectScript"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGCONNECT",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Advanced"),
                "role", $$$T("Development"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGDSS",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Administration"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGENCREC",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGEPR",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGGRAPH",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGINFOLINK",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("ObjectScript"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGINSTALL",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Advanced"),
                "role", $$$T("Installation"),
                "lang", $$$T("ObjectScript"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGMENU",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGMENU",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGMENTHEALTH",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("ObjectScript"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGORDER",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("ObjectScript"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGPATCHING",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Advanced"),
                "role", $$$T("Installation"),
                "lang", $$$T("ObjectScript"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGPHARMACY",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Advanced"),
                "role", $$$T("Implementation"),
                "lang", $$$T("ObjectScript"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGQUEST",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGREPORT",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGSCHEDULE",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Administration"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGSECURITY",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Security"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGUPGRADE",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Advanced"),
                "role", $$$T("Installation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGWEBPAGE",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Tools"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGWORKFLOW",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGWORKLIST",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KMBILLING",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("ObjectScript"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KMCIS",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KMCOMMUNITY",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KMEMERGENCY",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KMINPATIENTS",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KMLAB",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KMMATERNITY",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KMMEDRECORDS",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KMOPTHEATER",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KMORDER",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Advanced"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KMOUTPATIENTS",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KMOVERVIEW",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Introductory"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KMPHARMACY",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KMPOLYCLINIC",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KMRADIOLOGY",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KMWAITLISTS",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KOVERVIEW",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Introductory"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))

    // AAH847 
    Do ..FillIn("KOVERVIEWLAB",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Introductory"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))

    // AAH847 
    Do ..FillIn("KGLAB",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))

    // AAH847 
    Do ..FillIn("KGPRINTING",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))

    // AAH847 
    Do ..FillIn("KGTEXTEDITOR",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))

    // AAH847 
    Do ..FillIn("KGVISRULES",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))

    // AAH847 
    Do ..FillIn("KRCODETABLAB",
                "app", $$$T("Web"),
                "book", $$$T("References"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))

    // AAH847 
    Do ..FillIn("KUGLAB",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))

    Do ..FillIn("KRCCR",
                "app", $$$T("Web"),
                "book", $$$T("References"),
                "level", $$$T("Advanced"),
                "role", $$$T("Tools"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KRCODETAB",
                "app", $$$T("Web"),
                "book", $$$T("References"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KRCOMP",
                "app", $$$T("Web"),
                "book", $$$T("References"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KRELNOTES2009",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Installation"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KRELNOTES2010",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Installation"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KRELNOTES20102",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Installation"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KRELCOMP20102009",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Installation"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KRELNOTES2011",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Installation"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KRELNOTES2012",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Installation"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KRELNOTES2013",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Installation"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KRELNOTES2015",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Installation"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KRELNOTES2014",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Installation"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGCONVROUTINE",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Installation"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KRFOUND",
                "app", $$$T("Web"),
                "book", $$$T("References"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KRGLOSS",
                "app", $$$T("Web"),
                "book", $$$T("References"),
                "level", $$$T("Introductory"),
                "role", $$$T("Tools"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KRHL7",
                "app", $$$T("Web"),
                "book", $$$T("References"),
                "level", $$$T("Advanced"),
                "role", $$$T("Development"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KRSYSPARAM",
                "app", $$$T("Web"),
                "book", $$$T("References"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KRSECGROUPPARAM",
                "app", $$$T("Web"),
                "book", $$$T("References"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KUGLAYOUT",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KUGLISTEDIT",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KUGOPTHEATER",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))


    Do ..FillIn("KMLAB",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Introductory"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KRCOMPLAB",
                "app", $$$T("Web"),
                "book", $$$T("References"),
                "level", $$$T("Intermediate"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
    Do ..FillIn("KGSYSADMINLAB",
                "app", $$$T("Web"),
                "book", $$$T("Guides"),
                "level", $$$T("Introductory"),
                "role", $$$T("Implementation"),
                "lang", $$$T("CSP"),
                "product", $$$T("TrakCare"))
]]></Implementation>
</Method>

<Method name="DoInternalDoc">
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
    Do ..FillIn("XDBM",
                "role", $$$T("Tools"),
                "product", $$$T("Internal"),
                "level", $$$T("Introductory"),
                "book", $$$T("Guides"))
    Do ..FillIn("XDOCBOOK",
                "role", $$$T("Tools"),
                "product", $$$T("Internal"),
                "app", $$$T("Web"),
                "lang", $$$T("XML"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("XGBD",
                "role", $$$T("Tools"),
                "product", $$$T("Internal"),
                "app", $$$T("Web"),
                "lang", $$$T("Java"),
                "lang", $$$T("DOTNET"),
                "lang", $$$T("HTML"),
                "lang", $$$T("ObjectScript"),
                "lang", $$$T("PYTHON"),
                "lang", $$$T("SQL"),
                "lang", $$$T("XML"),
                "level", $$$T("Advanced"),
                "book", $$$T("Guides"))
    Do ..FillIn("XPROC",
                "role", $$$T("Tools"),
                "product", $$$T("Internal"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("XREF",
                "role", $$$T("Tools"),
                "product", $$$T("Internal"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("XSAMPLE",
                "role", $$$T("Tools"),
                "product", $$$T("Internal"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("XSTYLE",
                "role", $$$T("Tools"),
                "product", $$$T("Internal"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("XTRAKJIRA",
                "role", $$$T("Tools"),
                "product", $$$T("Internal"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
    Do ..FillIn("XTRAKREFGEN",
                "role", $$$T("Tools"),
                "product", $$$T("Internal"),
                "level", $$$T("Intermediate"),
                "book", $$$T("Guides"))
]]></Implementation>
</Method>
</Class>


<Class name="DocBook.UserComment">
<Description>
This is a user comment.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Library.Persistent</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>59241,40474</TimeCreated>

<Index name="BlockIdx">
<Type>index</Type>
<Properties>BlockId</Properties>
</Index>

<Index name="UserIdx">
<Type>index</Type>
<Properties>UserName</Properties>
</Index>

<Property name="UserName">
<Description>
The user who submitted this comment</Description>
<Type>cdata</Type>
</Property>

<Property name="CreateTime">
<Description>
When this comment was created</Description>
<Type>%TimeStamp</Type>
</Property>

<Property name="Comment">
<Description>
The user's comment</Description>
<Type>cdata</Type>
<Parameter name="MAXLEN" value="2000"/>
</Property>

<Property name="Reason">
<Description>
The reason associated with the comment</Description>
<Type>cdata</Type>
</Property>

<Property name="BlockId">
<Description>
The id of the text block this comment refers to</Description>
<Type>id</Type>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^DocBook.UserCommentD</DataLocation>
<DefaultData>UserCommentDefaultData</DefaultData>
<IdLocation>^DocBook.UserCommentD</IdLocation>
<IndexLocation>^DocBook.UserCommentI</IndexLocation>
<StreamLocation>^DocBook.UserCommentS</StreamLocation>
<Data name="DocBook.UserCommentClassName">
<Attribute>%%CLASSNAME</Attribute>
<Structure>node</Structure>
<Subscript>0</Subscript>
</Data>
<Data name="UserCommentDefaultData">
<Value name="1">
<Value>CreateTime</Value>
</Value>
<Value name="2">
<Value>UserName</Value>
</Value>
<Value name="3">
<Value>BlockId</Value>
</Value>
<Value name="4">
<Value>Comment</Value>
</Value>
<Value name="5">
<Value>Reason</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="DocBook.Utils">
<Description>
Utility class</Description>
<ClassType/>
<IncludeCode>%occSAX,DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Library.RegisteredObject</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>58822,45005</TimeCreated>

<Method name="Help">
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
    Write $$$T("To load an xml file:"),!
    Write "Do ##class(DocBook.Utils).Load(file)",!
    Write !
    Write $$$T("To load a book and related files:"),!
    Write "Do ##class(DocBook.Utils).LoadBook(bookid)",!
    Write !
    Write $$$T("To load the entire Doc Set:"),!
    Write "Do ##class(DocBook.Utils).LoadSets()",!
]]></Implementation>
</Method>

<Method name="IsDeveloper">
<Description>
Returns 1 if the user has permission to access the class documentation</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[    Quit ($system.Security.Check("%Development","use"))
]]></Implementation>
</Method>

<Method name="IsISC">
<Description>
Returns 1 if the user has permission to access the class documentation</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[    Quit (("," _ $ROLES _ ",") [ ",ISC_Internal,")
]]></Implementation>
</Method>

<Method name="UsingJapanese">
<Description>
Returns 1 if we are dealing with Japanese text</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[    Quit ($GET(^DocBook.Config("INDEXCLASS"), "empty")="DocBook.IndexedTextJ")
]]></Implementation>
</Method>

<Method name="EnsembleLoaded">
<Description>
Checks to see if Ensemble is loaded in any accessible namespace</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
    SET present = $GET(^DocBook.Config("ARCHITECTURES","ENSEMBLE"), 0)
    Quit:(present > 0) 1

    Quit:(##class(%Library.EnsembleMgr).IsEnsembleInstalled() > 0) 1

    // test for faking it
    //Quit:($DATA(^DocBook.Config("EnsembleLoaded")) > 0) $GET(^DocBook.Config("EnsembleLoaded"), 0)

    // nope
    Quit 0
]]></Implementation>
</Method>

<Method name="HealthShareLoaded">
<Description>
Checks to see if HealthShare is loaded in any accessible namespace</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
    SET present = $GET(^DocBook.Config("ARCHITECTURES","HEALTHSHARE"), 0)
                + $GET(^DocBook.Config("ARCHITECTURES","HSFOUNDATION"), 0)
    Quit:(present > 0) 1

    Quit:(##class(%Library.EnsembleMgr).IsHealthShareInstalled() > 0) 1

    // test for faking it
    //Quit:($DATA(^DocBook.Config("HealthShareLoaded")) > 0) $GET(^DocBook.Config("HealthShareLoaded"), 0)

    // nope
    Quit 0
]]></Implementation>
</Method>

<Method name="TrakCareLoaded">
<Description>
Checks to see if TrakCare is loaded in any accessible namespace</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
    SET present = $GET(^DocBook.Config("ARCHITECTURES","HEALTHSHARE"), 0)
    Quit:(present > 0) 1

    // This replicates the check in %Library.EnsembleMgr
    // without the restriction of checking to see if it
    // is enabled in the current namespace
    Quit:($DATA(^%SYS("TrakCare")) > 0) 1

    // test for faking it
    //Quit:($DATA(^DocBook.Config("TrakCareLoaded")) > 0) $GET(^DocBook.Config("TrakCareLoaded"), 0)

    // nope
    Quit 0
]]></Implementation>
</Method>

<Method name="ShowConfigSettings">
<Description>
Show the various configuration settings</Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[

    do ##class(DocBook.ConfigUtils).DisplayConfigParams()
    quit
]]></Implementation>
</Method>

<Method name="ShowSearchDirs">
<Description>
Show the search paths available</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>main:cdata=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

    set dirlist = ##class(SearchUtils).BuildSearchList(main)
    Set sc = $$$OK

    If (dirlist.Count() = 0)
    {
        Write $$$T("Search directory list is empty"), !
    }
    Else
    {
        Write $$$T("Search directories: "), dirlist.Count(), !
        For i = 1 : 1 : dirlist.Count()
        {
            Write i, "-", dirlist.GetAt(i), !
        }
    }
    quit sc
]]></Implementation>
</Method>

<Method name="GetMachineName">
<Description>
Show the search paths available</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec/>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[

    Set sysname = $zu(54,13,$zu(54,0))
    If ($LENGTH(sysname, ",") > 1)
    {
        If ($LENGTH($PIECE(sysname, ",", 2)) > 0)
        {
            Set sysname = $PIECE(sysname, ",", 2)
        }
        Else
        {
            Set sysname = $PIECE(sysname, ",", 1)
        }
    }

    Quit sysname
]]></Implementation>
</Method>

<Method name="CheckEncoding">
<Description>
Sieve out invalid encoding declarations</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>filename:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    // try to get the file
    Open filename:("RS"):2 Else  Write "CheckEncoding: ", $$$T("Unable to open file: "), filename, ! QUIT "<MissingFofile>"
    Set SaveIO=$io
    Use filename

    // get the first line
    Read FirstLine:2

    // swifth back no matter what the result
    Use SaveIO
    Close filename

    // check what we got
    Quit:(FirstLine [ "encoding=""UTF-8""") ""
    Quit:(FirstLine [ "encoding=""utf-8""") ""
    Quit FirstLine
]]></Implementation>
</Method>

<Method name="Load">
<Description>
Load an individual doc file</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>file,validate:%Boolean=1</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

    Set sc = $$$OK

    // !!!Force index to get rebuilt
    Kill ^DocBook.Index

    Set mask =  $$$SAXSTARTENTITY + $$$SAXENDENTITY + $$$SAXCONTENTEVENTS

    If (##class(%XML.Catalog).IsEmpty()) {
        Write $$$T("ERROR: DocBook.Utils:Load() The XML Catalog is empty."),!
        Quit $$$ERROR($$$GeneralError,$$$T("XML Catalog Empty"))
    }

    If ('##class(%File).Exists(file)) {
        Write $$$T("ERROR:"), " DocBook.Utils:Load() ", $$$T("File "), file, $$$T(" not found."),!
        Quit $$$ERROR($$$GeneralError, ($$$T("File not found: ") _ file))
    }

    Set resolve = ##Class(%XML.CatalogResolver).%New()

    Write $$$T("Loading: ") ,file, " ", !

    Set enc = ..CheckEncoding(file)
    If ($LENGTH(enc) > 0)
    {
        Write $$$T("----- Assertion Failure: "), $$$T("Unrecognized file encoding -- "), enc, !
    }


    If $D(%response) {
        // assume we are called from CSP
        Do %response.Flush()
    }

    Set h = ##Class(DocBookParser).%New()
    Set fname = ##class(%File).GetFilename(file)
    Set h.SourceFile = fname
    Set h.SourceTime = $ZDT(##class(%File).GetFileDateModified(file),3)

    // reset error log
    Do ##class(ErrorLog).ResetForFile(fname)

    Set sc = ##class(%XML.SAX.Parser).ParseFile(file, h, resolve, validate + $$$SAXNAMESPACES, mask)
    If ($system.Status.IsError(sc))
    {
        Do $system.OBJ.DisplayError(sc)
    }

    If $D(%response) {
        Write !
        // assume we are called from CSP
        Do %response.Flush()
    }

    ; clean up
    Set resolve = ""
    Set h = ""

    Quit sc
]]></Implementation>
</Method>

<Method name="Classify">
<Description>
Set up the material classificaton for the home page</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    Do ##class(DocBook.Taxonomy).Define()

    Do ##class(DocBook.Taxonomy).Check()

    Quit $$$OK
]]></Implementation>
</Method>

<Method name="CheckColoring">
<Description>
Invokes the class to list any coloring errors noted in the database</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
    ; merely invoke the new class
    Do ##class(DocBook.CheckColor).Main()

    Quit
]]></Implementation>
</Method>

<Method name="CheckWideChars">
<Description>
This method scans all the text for characters outside the range 0-255</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
    ; there is no check to see if we are running on a Unicode system.
    ;  If we are not, this will fail with a <WIDECHAR> error anyway.
    Set Tick = 1000
    Set Found = 0
    Set MaxBlock = ^DocBook.blockD
    Write !
    Write $$$T("Scan for wide characters"), !
    Write $$$T("Maximum block number: "), $FNUMBER(MaxBlock, ","), !

    Set ErrPfx = $$$T("WARNING: Wide Char; ")

    For Blk = 1 : 1 : MaxBlock
    {
        ;Write:((Blk # Tick) = 0) Blk, !

        Set B = ##class(DocBook.block).%OpenId(Blk)
        If (B '= $$$NULLOREF)
        {
            ;Write B.sourcefile, !

            If ($ZISWIDE(B.title))
            {
                Set Found = Found + 1
                Write ErrPfx, $$$T("File:"), " ", B.sourcefile, "; ", $$$T("Block:"), " ", Blk, !
                Write $$$T("Title--"), !
                Set B.title = ..ProcessWideChars(B.title)
                ;Write B.title, !
                Do B.%Save()
            }

            If ($ZISWIDE(B.content))
            {
                Set Found = Found + 1
                Write ErrPfx, $$$T("File:"), " ", B.sourcefile, "; ", $$$T("Block:"), " ",  Blk, !
                Write $$$T("Content--"), !
                Set B.content = ..ProcessWideChars(B.content)
                ;Write B.content, !
                Do B.%Save()
            }

            If ($ZISWIDE(B.renderedContent))
            {
                Set Found = Found + 1
                Write ErrPfx, $$$T("File:"), " ", B.sourcefile, "; ", $$$T("Block:"), " ",  Blk, !
                Write $$$T("RenderedContent--"), !
                Set B.renderedcontent = ..ProcessWideChars(B.renderedContent)
                ;Write B.renderedcontent, !
                Do B.%Save()
            }
        }
        Set B = ""
    }
    Write:(Found '= 0) $$$T("Components found:"), " ", $FNUMBER(Found, ","), !
    Write $$$T("Done"), !

    Quit
]]></Implementation>
</Method>

<Method name="ProcessWideChars">
<Description>
This method scans all the text for characters outside the range 0-255</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>text:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    Set Result = ""
    For I = 1 : 1 : $LENGTH(text)
    {
        Set C = $EXTRACT(text, I, I)
        If ($ZISWIDE(C))
        {
            Set Val = $ASCII(C)
            Write $$$T("Position: "), I, "; ", $$$T("Value: "), Val, " (0x", $ZHEX(Val), ")", "; ", $$$T("Glyph: "), C, !
            Set C = "?"
        }
        Set Result = Result _ C
    }

    Quit Result
]]></Implementation>
</Method>

<Method name="DisplayWideChars">
<Description>
This method scans all the text for characters outside the range 0-255</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>text:%String</FormalSpec>
<Implementation><![CDATA[
    For I = 1 : 1 : $LENGTH(text)
    {
        Set C = $EXTRACT(text, I, I)
        If ($ZISWIDE(C))
        {
            Set Val = $ASCII(C)
            Write $$$T("Position: "), I, "; ", $$$T("Value: "), Val, " (0x", $ZHEX(Val), ")", "; ", $$$T("Glyph: "), C, !
        }
    }

    Quit
]]></Implementation>
</Method>

<Method name="RebuildIndices">
<Description>
Rebuilds the indices for the database</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>display:%Boolean=0</FormalSpec>
<Implementation><![CDATA[
    ; remove the old indexes
    Kill ^DocBook.Index
    Kill ^DocBook.Anchor

    ; build the new ones
    Write:(+display) !
    Write:(+display) $$$T("Building Master Index: ")
    Do ##class(DocBook.Utils).BuildIndex()
    Write:(+display) "[", ##class(DocBook.Utils).CountGlobal("^DocBook.Index"), "] "
    Write:(+display) "OK", !

    Write:(+display) $$$T("Building Help Index: ")
    Do ##class(DocBook.Utils).BuildAnchorIndex()
    Write:(+display) "[", ##class(DocBook.Utils).CountGlobal("^DocBook.Anchor"), "] "
    Write:(+display) "OK", !

    quit
]]></Implementation>
</Method>

<Method name="LoadSets">
<Description>
Reset and load the master documents.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>main:cdata="",multiprocess:%Boolean=0,verbose:%Boolean=1</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

    // display the config settings
    do ..ShowConfigSettings()
    // if no directory provided, use search paths
    do ..ShowSearchDirs(main)
    set dirlist = ##class(SearchUtils).BuildSearchList(main)
    Set sc = $$$OK

    If (dirlist.Count() = 0) {
        Write $$$T("Source Location not specified.")
        Quit $$$ERROR($$$GeneralError,("DocBook.Utils:LoadSets() " _ $$$T("DocBook Source not specified")))
    }

    Set ^DocBook.OffLine = 1

    Write $$$T("Resetting..."),!
    Do ..Reset()
    Do ..ResetLog()

    Write $$$T("Building on "), ..GetBuildInfo(0), !

    // Get Sets
    Set filelist = ##class(SearchUtils).LocateFiles(dirlist, "SET*.xml")
    If (filelist.Count() = 0)
    {
        Write $$$T("No sets found.")
        Quit $$$ERROR($$$GeneralError,("DocBook.Utils:LoadSets() " _ $$$T("No SETs found.")))
    }

	Set queue=$system.WorkMgr.Initialize("d/multicompile="_multiprocess,.sc) If $$$ISERR(sc) Quit sc
    For i = 1 : 1 : filelist.Count()
    {
        Set sc=queue.Queue("..Load",filelist.GetAt(i)) If $$$ISERR(sc) Return sc
        If $get(^%SYS("DOCBOOK","KINGTUT")) Quit
    }
    Set filelist = ""
    Set sc=queue.WaitForComplete() If $$$ISERR(sc) Quit sc


    Kill ^DocBook.Config("ARCHITECTURES")

    // Now load books referenced by sets

    &sql(DECLARE BL CURSOR FOR
         SELECT blockid INTO :bid FROM book)

    &sql(OPEN BL)
    &sql(FETCH BL)
    If (SQLCODE '= 0)
    {
        Write $$$T("SQL Error finding first book:"), SQLCODE, !
    }

    While (SQLCODE = 0) {
        Set bookdirlist = ##class(SearchUtils).ExtendSearchList(dirlist, bid)
        Set filelist = ##class(SearchUtils).LocateFiles(bookdirlist, (bid _ ".xml"))
        If (filelist.Count() > 0)
        {
            Set thefilepath = filelist.GetAt(1)
            Set thedirpath = ##class(%File).GetDirectory(thefilepath)
            Set loaddir = ##class(SearchUtils).ContainingDir(thedirpath)
            Set sc=queue.Queue("..LoadBook",bid, loaddir,1) If $$$ISERR(sc) Return sc
        }
        &sql(FETCH BL)
    }

    &sql(CLOSE BL)
    Set sc=queue.WaitForComplete() If $$$ISERR(sc) Return sc

    // Load Articles
    write !, " [Articles]", !
    Set bookdirlist = ##class(SearchUtils).ExtendSearchList(dirlist, "Articles")
    Set filelist = ##class(SearchUtils).LocateFiles(bookdirlist, "*.xml")
    if (filelist.Count() > 0)
    {
        ; load each separately in case articles are in different directories
        For i = 1 : 1 : filelist.Count()
        {
            Set thefilepath = filelist.GetAt(i)
            Set sc=queue.Queue("..Load",thefilepath) If $$$ISERR(sc) Return sc
            If $get(^%SYS("DOCBOOK","KINGTUT")) Quit
        }
    }
    Set sc=queue.WaitForComplete() If $$$ISERR(sc) Quit sc

    // (re)build infrastructure
    Write !
    Do ..CheckColoring()
    Do:(##class(DocBook.ConfigUtils).GetWIDECHARCHECK()) ..CheckWideChars()
    Do ..RebuildIndices(verbose)
    Set sc = ..Classify()
    Do ..AfterLoadSets(verbose)


    Kill ^DocBook.OffLine

    Set ^DocBook.LoadTime = $ZDT($H,3)

    Quit sc
]]></Implementation>
</Method>

<Method name="ReplaceSet">
<Description>
Replaces a set and its books.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>setname:cdata="",main:cdata=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

    // if no directory provided, use search paths
    do ..ShowSearchDirs(main)
    set dirlist = ##class(SearchUtils).BuildSearchList(main)
    Set sc = $$$OK

    If (dirlist.Count() = 0) {
        Write $$$T("Source Location not specified.")
        Quit $$$ERROR($$$GeneralError,("DocBook.Utils:ReplaceSet() " _ $$$T("DocBook Source not specified")))
    }

    // Get Sets
    Set SetName = setname _ ".xml"
    Set filelist = ##class(SearchUtils).LocateFiles(dirlist,SetName)
    If (filelist.Count() = 0)
    {
        Write "No set found."
        Quit $$$ERROR($$$GeneralError,("DocBook.Utils:ReplaceSet() " _ $$$T("No SETs found.")))
    }
    If (filelist.Count() > 1)
    {
        Write "Duplicate sets found."
        Quit $$$ERROR($$$GeneralError,("DocBook.Utils:ReplaceSet() " _ $$$T("Duplicate SETs found.")))
    }

    ; if there is a previously loaded set, remove it
    set setblock = 0
    &sql(DECLARE OLDSET CURSOR FOR
         SELECT ID
         INTO :setblock
         FROM DocBook.db_set
         WHERE blockid = :SetName)
    &sql(OPEN OLDSET)
    &sql(FETCH OLDSET)
    if (SQLCODE = 0)
    {
        set deletestatus = ##class(DocBook.set).%DeleteId(setblock)
        if (deletestatus '= $$$OK)
        {
            Quit $$$ERROR(deletestatus,("DocBook.Utils:ReplaceSet() " _ $$$T("Delete error.")))
        }
    }
    &sql(CLOSE OLDSET)

    Do ..Load(filelist.GetAt(1))
    Set filelist = ""

    ; now get the book directories
    set articles = 0
    set DirList = ##class(%Library.ResultSet).%New("%Library.File:FileSet")
    set Pattern = "*"
    set dirliststatus = DirList.Execute(main, Pattern, "", 1)
    if (dirliststatus '= $$$OK)
    {
        Quit $$$ERROR(dirliststatus,("DocBook.Utils:ReplaceSet() " _ $$$T("FileSet error.")))
    }
    while (DirList.Next() '= 0)
    {
        set type = DirList.GetData(2)
        if (type [ "D")
        {
            set BookName = DirList.GetData(6)
            set BookPath = DirList.GetData(1)
            ;write "BookName: ", BookName, !
            ;write "BookPath: ", BookPath, !
            ;write "Type: ", type, !
            if ($ZCONVERT(BookName, "U") '[ "ARTICLES")
            {
                set loadstatus = ##class(DocBook.Utils).LoadBook(BookName, main)
                if (loadstatus '= $$$OK)
                {
                    Quit
                }
            }
        }
    }

    do DirList.Close()
    set DirList = ""

    write !, " [Articles]", !
    Set bookdirlist = ##class(SearchUtils).ExtendSearchList(dirlist, "Articles")
    Set filelist = ##class(SearchUtils).LocateFiles(bookdirlist, "*.xml")
    if (filelist.Count() > 0)
    {
        ; load each separately in case articles are in different directories
        For i = 1 : 1 : filelist.Count()
        {
            Set thefilepath = filelist.GetAt(i)
            Do ..Load(thefilepath)
        }
    }
    Set filelist = ""

    ; now rebuild the indices
    Write $$$T("Building Master Index: ")
    Do ##class(DocBook.Utils).BuildIndex()
    Write "[", ##class(DocBook.Utils).CountGlobal("^DocBook.Index"), "] "
    Write "OK", !

    Quit sc
]]></Implementation>
</Method>

<Method name="LoadSet">
<Description>
Load (reload) a set.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>setname:cdata="",main:cdata="",multiprocess:%Boolean=0</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

    // if no directory provided, use search paths
    do ..ShowSearchDirs(main)
    set dirlist = ##class(SearchUtils).BuildSearchList(main)
    Set sc = $$$OK

    If (dirlist.Count() = 0) {
        Write $$$T("Source Location not specified.")
        Quit $$$ERROR($$$GeneralError,("DocBook.Utils:LoadSets() " _ $$$T("DocBook Source not specified")))
    }

    // Get Sets
    Set filelist = ##class(SearchUtils).LocateFiles(dirlist,(setname _ ".xml"))
    If (filelist.Count() = 0)
    {
        Write $$$T("No set found.")
        Quit $$$ERROR($$$GeneralError,("DocBook.Utils:LoadSet() " _ $$$T("No SETs found.")))
    }
    If (filelist.Count() > 1)
    {
        Write $$$T("Duplicate sets found.")
        Quit $$$ERROR($$$GeneralError,("DocBook.Utils:LoadSet() " _ $$$T("Duplicate SETs found.")))
    }

	Set queue=$system.WorkMgr.Initialize("d/multicompile="_multiprocess,.sc) If $$$ISERR(sc) Quit sc
    For i = 1 : 1 : filelist.Count() {
        Set sc=queue.Queue("..Load",filelist.GetAt(i)) If $$$ISERR(sc) Return sc
    }
    Set filelist = ""
    Set sc=queue.WaitForComplete() If $$$ISERR(sc) Quit sc
    

    // Find the blockid of the set we just loaded

    // Find the set we just loaded

    &sql(DECLARE SETLOADED CURSOR FOR
         SELECT ID INTO :setid FROM book WHERE %SQLUPPER(blockid) = %SQLUPPER(:setname))
    &sql(OPEN SETLOADED)
    &sql(FETCH SETLOADED)
    If (SQLCODE '= 0)
    {
        Write $$$T("Set ID not found.")
        Quit $$$ERROR($$$GeneralError,("DocBook.Utils:LoadSet() " _ $$$T("Set ID not found.")))
    }
    &sql(CLOSE SETLOADED)

    &sql(DECLARE SETBOOKS CURSOR FOR
         SELECT blockid INTO :bid FROM book WHERE container = :setid)
    &sql(OPEN SETBOOKS)
    &sql(FETCH SETBOOKS)

    While (SQLCODE = 0) {

        Set bookdirlist = ##class(SearchUtils).ExtendSearchList(dirlist, bid)
        Set filelist = ##class(SearchUtils).LocateFiles(bookdirlist, (bid _ ".xml"))
        If (filelist.Count() > 0)
        {
            Set thefilepath = filelist.GetAt(1)
            Set thedirpath = ##class(%File).GetDirectory(thefilepath)
            Set loaddir = ##class(SearchUtils).ContainingDir(thedirpath)
            Set sc=queue.Queue("..LoadBook",bid, loaddir,1) If $$$ISERR(sc) Return sc
        }
        &sql(FETCH SETBOOKS)
    }

    &sql(CLOSE SETBOOKS)
    Set sc=queue.WaitForComplete() If $$$ISERR(sc) Quit sc

    Quit sc
]]></Implementation>
</Method>

<Method name="LoadBook">
<Description>
Load an entire book definition</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>book:cdata,subdir:cdata="",display:%Boolean=0</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

    If display Write !, " [" ,book, "]", !
    // get places to look
    set searchlist = ##class(SearchUtils).BuildSearchList(subdir)
    set dirlist = ##class(SearchUtils).ExtendSearchList(searchlist, book)

    Set sc = $$$OK

    set filelist = ##class(SearchUtils).LocateFiles(dirlist, (book _ ".xml"))
    If (filelist.Count() = 0)
    {
        Write $$$T("No book found: "), book, !
        set sc =  $$$ERROR($$$GeneralError, ("DocBook.Utils:LoadBook() " _ $$$T("No book found: ") _ book))
    }
    else
    {
        set loaddir = ##class(%File).GetDirectory(filelist.GetAt(1))
        do ..LoadMaster(loaddir)
        Do ..LoadDir(loaddir)
    }

    Quit sc
]]></Implementation>
</Method>

<Method name="LoadMaster">
<Description>
Load the master file for the given directory</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>subdir:cdata</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

    Set subdir = ##class(%File).NormalizeDirectory(subdir)
    Set dirname = ##class(SearchUtils).GetDirectoryname(subdir)
    set searchlist = ##class(SearchUtils).BuildSearchList(subdir)
    set filelist = ##class(SearchUtils).LocateFiles(searchlist, (dirname _ ".xml"))
    if (filelist.Count() > 0)
    {
        set sc = ..Load(filelist.GetAt(1))
    }
    else
    {
        //Write $$$T("ERROR:"), " DocBook.Utils:LoadMaster() ", $$$T("Book master not found: "), dirname, !
        //set sc = $$$ERROR($$$GeneralError,$$$T("Book master file missing."))
    }

    Quit sc
]]></Implementation>
</Method>

<Method name="LoadDir">
<Description>
Load every non-master file in the given directory</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>subdir:cdata</FormalSpec>
<Implementation><![CDATA[

    Set subdir = ##class(%File).NormalizeDirectory(subdir)

    Set dir = ##class(%ResultSet).%New("%File.FileSet")
    Do dir.Execute(subdir, "*.xml")
    ; Write !
    ; write "Subdir: ", subdir, !

    While (dir.Next()) {
        Set path = dir.GetData(1)
        set file = ##class(%Library.File).GetFilename(path)
        set dirpath = ##class(%Library.File).GetDirectory(path)
        set dirname = ##class(SearchUtils).GetDirectoryname(dirpath)
        ;write "Path: ", path, !
        ;write "DirPath: ", dirpath, !
        ;write "DirName: ", dirname, !
        ;write "File: ", file, !

        If ($ZCONVERT(file, "L") = ($ZCONVERT(dirname, "L") _ ".xml"))
        {
            ; Write $$$T("Master file already loaded: "), file, !
        }
        Else
        {
            ; Write path, !
            Set sc = ..Load(path)
        }
    }

    Quit $$$OK
]]></Implementation>
</Method>

<Method name="RemoveArticle">
<Description>
Remove an article from the database</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>ArticleName:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

    Set name = ArticleName

    &sql(DECLARE THEARTICLE CURSOR FOR
         SELECT ID
         INTO :blockno
         FROM DocBook.article
         WHERE blockid = :name)
    &sql(OPEN THEARTICLE)
    &sql(FETCH THEARTICLE)
    if (SQLCODE = 0)
    {
        Write $$$T("Deleting block: "), blockno, !
        Do ##class(DocBook.article).%DeleteId(blockno)
        set sc = $$$OK
    }
    else
    {
        Write $$$T("ERROR:"), " DocBook.Utils:RemoveArticle() - ", $$$T("No article by that name."),!
        set sc = $$$ERROR($$$GeneralError,$$$T("No such article"))
    }
    &sql(CLOSE THEARTICLE)

    quit sc
]]></Implementation>
</Method>

<Method name="RemoveBook">
<Description>
Remove a book from the database</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>BookName:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

    Set name = BookName

    &sql(DECLARE THEBOOK CURSOR FOR
         SELECT ID
         INTO :blockno
         FROM DocBook.book
         WHERE blockid = :name)
    &sql(OPEN THEBOOK)
    &sql(FETCH THEBOOK)
    if (SQLCODE = 0)
    {
        Write $$$T("Deleting block: "), blockno, !
        Do ##class(DocBook.book).%DeleteId(blockno)
        set sc = $$$OK
    }
    else
    {
        Write $$$T("ERROR: DocBook.Utils:RemoveBook()  - No book by that name."),!
        set sc = $$$ERROR($$$GeneralError,$$$T("No such article"))
    }
    &sql(CLOSE THEBOOK)

    quit sc
]]></Implementation>
</Method>

<Method name="RemoveSet">
<Description>
Remove a set from the database</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SetName:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

    Set name = SetName

    &sql(DECLARE THESET CURSOR FOR
         SELECT ID
         INTO :blockno
         FROM DocBook.db_set
         WHERE blockid = :name)
    &sql(OPEN THESET)
    &sql(FETCH THESET)
    if (SQLCODE = 0)
    {
        Write $$$T("Deleting block: "), blockno, !
        Do ##class(DocBook.set).%DeleteId(blockno)
        set sc = $$$OK
    }
    else
    {
        Write $$$T("ERROR:"), " DocBook.Utils:RemoveBook()  - ", $$$T("No set by that name."),!
        set sc = $$$ERROR($$$GeneralError,$$$T("No such set"))
    }
    &sql(CLOSE THESET)

    quit sc
]]></Implementation>
</Method>

<Method name="CheckProgramlistings">
<Description>
Loads the DocBook application</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    Set MarkerBgn = "DLLResultCode:"
    Set MarkerEnd = "-->"

    Set SEP = "//"

    // build the query to look for errors
    Set SELECT = "SELECT ID, sourcefile, dblang, errorLang, renderedContent"
    Set FROM = "FROM DocBook.programlisting"
    Set WHERE = "WHERE ($FIND(renderedContent, '" _ MarkerBgn _ "') > 0)"
    Set STMT = SELECT _ " " _ FROM _ " " _ WHERE
    //Write "Stmt: ", SELECT, !, "..... ", FROM, !, "..... ", WHERE, !

    Set RS = ##class(%Library.ResultSet).%New("%DynamicQuery:SQL")
    Set sc = RS.Prepare(STMT)
    If ($$$ISERR(sc))
    {
        Write $$$T("Error attempting to prepare query"), !
        Do $SYSTEM.Status.DisplayError(sc)
        Quit sc
    }
    Set sc = RS.Execute()
    If ($$$ISERR(sc))
    {
        Write $$$T("Error attempting to execute query"), !
        Do $SYSTEM.Status.DisplayError(sc)
        Quit sc
    }

    Set ErrorTotal = 0
    While (RS.Next())
    {
        Set ErrorTotal = ErrorTotal + 1

        Set ThisID = $GET(RS.Data("ID"))
        Set ThisFile = $GET(RS.Data("sourcefile"))
        Set ThisLang = $GET(RS.Data("dblang"))
        Set ThisErrLang = $GET(RS.Data("errorLang"))
        Set ThisText = $GET(RS.Data("renderedContent"))

        Set BgnInx = $FIND(ThisText, MarkerBgn)
        Set EndInx = $FIND(ThisText, MarkerEnd) - $LENGTH(MarkerEnd)
        Set MarkerData = $ZSTRIP($EXTRACT(ThisText, BgnInx, EndInx), "<>W")

        Write ErrorTotal, SEP, ThisID, SEP, ThisFile, SEP, ThisLang, SEP, ThisErrLang, SEP, MarkerData, !
    }

    Quit $$$OK
]]></Implementation>
</Method>

<Method name="XMLExport">
<Description>
 Export a document as an xml document</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>key:cdata,filename:cdata=""</FormalSpec>
<Implementation><![CDATA[

    // find element name for key
    Set block = ##class(block).OpenKey(key)

    If (block = "") {
        Write "Utils:XMLExport() ", $$$T("Invalid key"),!
        Quit
    }

    Set top = block.%ClassName()

    If (filename '= "") {
        Open filename:("WSN"):2 Else  Write $$$T("XML Export: Unable to open file: "),filename,! QUIT
        Set io=$io
        Use filename

        // Set up correct file translation
        Do $zu(96,18,2,"UTF8")
    }

    // XML header
    Write "<?xml version=""1.0"" encoding=""UTF-8""?>",!
    Write "<!DOCTYPE ",top," PUBLIC ""-//Arbortext//DTD DocBook XML V4.0//EN"" ""X:\doc\common\metadata\doctypes\axdocbook\axdocbook.dtd"">",!

    // Now get block to render itself
    Do block.XMLRender()

    If (filename '= "") {
        Use io
        Close filename
    }

    quit
]]></Implementation>
</Method>

<Method name="XMLExportAll">
<Description>
Extracts all books and articles as singleton XML files into the specified directory.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>TargetDir:%String,Trace:%Boolean=0</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

    ; initialize the result
    set filelist = ""

    ; prepare the query
    set ResultSet = ##class(%Library.ResultSet).%New("%Library.DynamicQuery:SQL")
    if (ResultSet = "")
    {
        set errmsg = $$$T("Cannot allocate result set")
        write errmsg, !
        quit $$$ERROR($$$GeneralError, errmsg)
    }
    set QueryText = "SELECT ID, blockid, dbrole"
    set QueryText = QueryText  _ " "
    set QueryText = QueryText  _ "FROM DocBook.article"
    set QueryText = QueryText  _ " "
    set QueryText = QueryText  _ "UNION"
    set QueryText = QueryText  _ " "
    set QueryText =  QueryText  _ "SELECT ID, blockid, dbrole"
    set QueryText = QueryText  _ " "
    set QueryText = QueryText  _ "FROM DocBook.book"
    set QueryText = QueryText  _ " "
    set QueryText = QueryText   _ "ORDER BY blockid"
    ; write QueryText, !

    set Status = ResultSet.Prepare(QueryText)
    if (Status = "")
    {
        do $system.OBJ.DisplayError(Status)
        quit $$$ERROR($$$GeneralError,$$$T("Error compiling extract query"))
    }

    ; apply it
    set SQLCODE = 0
    do ResultSet.Execute()
    if (SQLCODE '= 0)
    {
        write !, $$$T("SQLCODE = "), SQLCODE
        quit $$$ERROR($$$GeneralError,$$$T("Error executing extract query"))
    }

    ; iterate over the items
    while (ResultSet.Next(.status))
    {
        if ($$$ISERR(status))
        {
            write $$$ERROR($$$GeneralError,$$$T("Error returning loaded documents"))
            quit
        }
        ; get the book name
        set itemid = ResultSet.Get("ID")
        set itemname = ResultSet.Get("blockid")
        set itemrole = ResultSet.Get("dbrole")
        set keepflag = ('((itemname = "") || ($ZCONVERT(itemrole, "L") = "tutorial")))
        ; append the new name
        set:(keepflag) filelist = filelist _ $LISTBUILD(itemname)
    }

    ; finished
    do ResultSet.Close()
    set ResultSet = ""

    ; create the output direcory
    set targetdir = ##class(%Library.File).NormalizeDirectory(TargetDir)
    if ('(##class(%Library.File).CreateDirectoryChain(targetdir)))
    {
        set errmsg = $$$T("Cannot create output directory: ") _ targetdir
        write errmsg, !
        quit $$$ERROR($$$GeneralError, errmsg)
    }

    for i = 1 : 1 : $LISTLENGTH(filelist)
    {
        set name = $LIST(filelist, i)
        set outputfile = targetdir _ name _ ".xml"
        write:(Trace) $$$T("Export: "), name, !
        do ..XMLExport(name, outputfile)
    }

    ;done
    quit $$$OK
]]></Implementation>
</Method>

<Method name="Reset">
<Description>
Clear the entire DocBook database.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
    Kill ^DocBook.blockD
    Kill ^DocBook.blockI
    Kill ^DocBook.blockID
    Kill ^DocBook.OffLine
    Kill ^DocBook.LoadTime
    Kill ^DocBook.ErrorLogD

    Do ..ResetIndex()
]]></Implementation>
</Method>

<Method name="ResetIndex">
<Description>
Clear the Master Index list.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[    Kill ^DocBook.Index
]]></Implementation>
</Method>

<Method name="ResetLog">
<Description>
Clear the contents of the error log.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[    Do ##class(ErrorLog).Reset()
]]></Implementation>
</Method>

<Method name="ShowLog">
<Description>
Display the error log</Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[    Do ##class(ErrorLog).List()
]]></Implementation>
</Method>

<Method name="RenderContainer">
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>cid:cdata,indent:%Integer=0</FormalSpec>
<Implementation><![CDATA[

    // find child blocks
    &sql(DECLARE C1 CURSOR FOR
         SELECT ID,content,x__classname
         INTO :bid,:content,:cls
         FROM block
         WHERE container = :cid
         ORDER BY blockpos
    )

    &sql(OPEN C1)
    &sql(FETCH C1)

    Write ?indent,bid,!

    While (SQLCODE = 0) {
        Do ..RenderContainer(bid,indent+5)
        &sql(FETCH C1)
    }

    &sql(CLOSE C1)
]]></Implementation>
</Method>

<Method name="CheckLinks">
<Description>
Check all links within the documentation database
Returns (by reference) the number of links,
the number of badlinks, and the targets of all bad
links (in an array subscripted by link #).</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&total:%Integer,&bad:%Integer,&badlist:%String,&static:%Integer,&staticlist:%String,silent:%Boolean=1]]></FormalSpec>
<Implementation><![CDATA[

    // search text for links
    // disable olink checking
    //&sql(DECLARE LinkCursor CURSOR FOR
    //        SELECT ID, blockid, content, sourceFile
    //        INTO    :id ,:key, :text , :src
    //        FROM DocBook.block
    //        WHERE (content [ '<ulink') OR (content [ '<olink') )
    &sql(DECLARE LinkCursor CURSOR FOR
            SELECT ID, blockid, content, sourceFile
            INTO    :id ,:key, :text , :src
            FROM DocBook.block
            WHERE (content [ '<ulink'))

    &sql(OPEN LinkCursor)

    &sql(FETCH LinkCursor)
    Set total = 0
    Set bad = 0

    Set row = 1
    While (SQLCODE = 0) {
        Write:'silent !,$$$T("Checking: "),key," "

        Do ..CheckLinksInText(src,text,.total,.bad,.badlist,.static,.staticlist,silent)

        &sql(FETCH LinkCursor)
        Set row = row + 1
    }

    &sql(CLOSE LinkCursor)

    If ('silent) {
        // write report
        If (bad > 0) {
            Write !,"------------------",!
            Write $$$T("BAD LINKS:"),!
            For i = 1:1:bad {
                Write ?5,$LG(badlist(i),1),?30,$LG(badlist(i),2),!
            }
        }

        Write !,"------------------",!
        Write $$$T("Links:     "),total,!
        Write $$$T("Bad Links: "),bad,!
    }
]]></Implementation>
</Method>

<Method name="CheckLinksInText">
<Description>
Checks a block of text for bad links;</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[src:%String,txt:%String,&total:%Integer,&bad:%Integer,&badlist:%String,&static:%Integer,&staticlist:%String,silent:%Boolean=1]]></FormalSpec>
<Implementation><![CDATA[

    // we assume that text has a link in it
    // or else we would not be here.
    Set tokens = ##class(%CSP.TokenStream).%New()
    Do tokens.OpenFromString(txt)

    While (tokens.NextToken()) {
        Set url = ""
        If (tokens.Tag = "ulink") {
            Set attrs = ""
            Do tokens.GetAttrs(.attrs)
            // 'url' attribute of ulink tag contains link
            Set url = $G(attrs("url","value"))
        }
        //ElseIf (tokens.Tag = "olink") {
        //    Set attrs = ""
        //    Do tokens.GetAttrs(.attrs)
        //    // 'type' attribute of olink tag contains link
        //    Set url = $G(attrs("type","value"))
        //}

        Set url = $ZCONVERT(url, "I", "HTML")

        If (url '= "") {
            If ((url [ "http:") || (url [ "https:") || (url [ "ftp:") || (url [ ".html") || (url [ "www.") || (url [ ".htm") || (url [ ".cls") || (url [ ".csp")) {
                // not an internal link
                Set static = static + 1
                Set staticlist(static) = $LB(src,url)
            }
            Else {
                Set total = total + 1
                // test this link
                Set id = ##class(DocBook.block).FindId(url)
                If ((id = "") && ($ZCVT(url,"U") '= "KNBASE")) {
                    Write:'silent "*"
                    Set bad = bad + 1
                    Set badlist(bad) = $LB(src,url)
                }
            }
        }
    }
]]></Implementation>
</Method>

<Method name="BuildAnchorIndex">
<Description>
Create an index in the ^DocBook.Index global</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[

    //clear any existing index
    Kill ^DocBook.Anchor

    // iterate over all that are defined
    &sql(DECLARE ANCHORC CURSOR FOR
        SELECT ID, blockid, target
        INTO :blocknum, :blockid, :target
        FROM DocBook.anchor)


    &sql(OPEN ANCHORC)
    &sql(FETCH ANCHORC)

    While (SQLCODE = 0)
    {
        Set subs = ##class(DocBook.PortalUtils).FormatSubscript(target)
        Set ref = "^DocBook.Anchor" _ "(" _ subs _ ")"
        If (subs  = """""")
        {
            Write $$$T("Empty subscript at block "), blocknum, "; ", $$$T("id "), blockid, !
        }
        Else
        {
            Set @ref = blockid
        }

        Set lastchr = $EXTRACT(blockid, *)
        Set suffix = "_anchor"
        If ("0123456789" [ lastchr)
        {
            Set suffix = suffix _ lastchr
        }
        Set refblock = $REPLACE(blockid, suffix, "")
        Set refobj = ##class(DocBook.block).FindId(refblock)
        If (refobj = "")
        {
            Write $$$T("Warning: Missing anchor reference: "), refblock,!
        }

        &sql(FETCH ANCHORC)
    }

    &SQL(CLOSE ANCHORC)
]]></Implementation>
</Method>

<Method name="BuildIndex">
<Description>
Create an index in the ^DocBook.Index global</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[

    // clear index
    Kill ^DocBook.Index
    Set ^DocBook.IndexTime = $zdt($H,3)

    // first get list of titles (books, chapters, etc)
    &sql(DECLARE ABIT CURSOR FOR
        SELECT blockid, title , component->blockid, x__classname, book->title
        INTO :blockid, :title, :dockey, :xcls, owner
        FROM DocBook.component)

    &sql(OPEN ABIT)
    &sql(FETCH ABIT)

    While (SQLCODE = 0) {
        If (title '= "") {
            // pull out classname
            Set type = $P(xcls,"~",$L(xcls,"~")-1)
            Set type = $P(type,".",$L(type,"."))
	        if ..Indexable(title) {
    	    	Do ..AddEntry(title,type,blockid,dockey,owner)
        	}
        }
        &sql(FETCH ABIT)
    }

    &sql(CLOSE ABIT)

    // now get list of sect1 titles
    &sql(DECLARE BIS1 CURSOR FOR
        SELECT blockid, title , component->blockid, book->title
        INTO :blockid, :title, :dockey, owner
        FROM DocBook.sect1)

    &sql(OPEN BIS1)
    &sql(FETCH BIS1)

    While (SQLCODE = 0) {
        If ..Indexable(title) {
            Do ..AddEntry(title,"sect1",blockid,dockey,owner)
        }
        &sql(FETCH BIS1)
    }

    &sql(CLOSE BIS1)
 
    // now get list of sect2 titles
    // AAH820 
    /*
    &sql(DECLARE BIS2 CURSOR FOR
        SELECT blockid, title , component->blockid, book->title
        INTO :blockid, :title, :dockey, owner
        FROM DocBook.sect2)

    &sql(OPEN BIS2)
    &sql(FETCH BIS2)

    While (SQLCODE = 0) {
        If ..Indexable(title) {
            Do ..AddEntry(title,"sect2",blockid,dockey,owner)
        }
        &sql(FETCH BIS2)
    }

    &sql(CLOSE BIS2)
    */

    // now get list of glossary terms
    //AAH818 - most glossary terms are not definitions per se, so having these in the index
    //is not helpful to customers
    /*
    &sql(DECLARE BIG CURSOR FOR
        SELECT blockid,glossterm,component->blockid,book->title
        INTO :blockid, :title, :dockey, :owner
        FROM DocBook.glossentry)

    &sql(OPEN BIG)
    &sql(FETCH BIG)

    While (SQLCODE = 0) {
        If ..Indexable(title) {
            Do ..AddEntry(title,"glossentry",blockid,dockey,owner)
        }
        &sql(FETCH BIG)
    }

    &sql(CLOSE BIG)
    */

     // now get list of marked index entries
    // find candidate blocks
    &sql(DECLARE BII CURSOR FOR
        SELECT content,blockid,component->blockid,book->title
        INTO :text,:blockid,:dockey,:owner
        FROM DocBook.block
        WHERE (content [ '<indexterm'))
    &sql(OPEN BII)
    &sql(FETCH BII)
    While (SQLCODE = 0) {
        If (title '= "") {
            Do ..AddMarkedEntry(text,blockid,dockey,owner)
        }
        &sql(FETCH BII)
    }
    &sql(CLOSE BII)

    // AAH820 added this part
    // now get list of first terms
    // find candidate blocks
    &sql(DECLARE BFT CURSOR FOR
        SELECT content,blockid,component->blockid,book->title
        INTO :text,:blockid,:dockey,:owner
        FROM DocBook.block
        WHERE content [ '<firstterm' )
    &sql(OPEN BFT)
    &sql(FETCH BFT)
    While (SQLCODE = 0) {
        If (title '= "") {
            Do ..AddFirstTermEntry(text,blockid,dockey,owner)
        }
        &sql(FETCH BFT)
    }
    &sql(CLOSE BFT)
]]></Implementation>
</Method>

<Method name="Indexable">
<ClassMethod>1</ClassMethod>
<FormalSpec>title:%String=""</FormalSpec>
<Implementation><![CDATA[
	set title=$$$UPPER(title)
	if (title="") {
		quit 0
	} elseif (title="OVERVIEW") {
		quit 0
	} elseif (title="INTRODUCTION") {
		quit 0
	} elseif (title="EXAMPLE") {
		quit 0
	} elseif (title="EXAMPLES") {
		quit 0
	} elseif (title="FOR MORE INFORMATION") {
		quit 0
	} elseif (title="BASICS") {
		quit 0
	} else {
		quit 1
	}
]]></Implementation>
</Method>

<Method name="AddEntry">
<Description>
Add an entry to the index global.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>title,source,blockid,dockey,owner=""</FormalSpec>
<Implementation><![CDATA[

    // first remove any leading articles;
    // (this is English-specific)
    Set fword = $P(title," ",1)
    If (",A,AN,THE," [ ("," _ $ZCVT(fword,"U") _ ",")) {
        Set title = $P(title," ",2,$L(title," ")) _ ", " _ fword
    }

    // collate title

    // !!! hack for leading "<"
    Set ctitle = title
    If ($E(ctitle,1,4) = "&lt;") {
        Set ctitle = $E(ctitle,5,*)
    }

    // strip whitespace
    // !!! this strips too much white space
    Set ctitle = " "_$zcvt($zstrip(ctitle,"*P"),"U")
    If ($LENGTH(ctitle) > 250)
    {
        Write "Cannot index blockid ", blockid, "; len = ", $LENGTH(ctitle), "; value[", ctitle, "]", !
        Quit
    }
    Set n = 1 + $Order(^DocBook.Index(ctitle,""),-1)
    If (dockey = "") {
        Set link = "KEY=" _ blockid
    }
    Else {
        Set link = "KEY=" _ dockey _ "#" _ blockid
    }

    Set ^DocBook.Index(ctitle,n) = $LB(title,link,source,owner)
]]></Implementation>
</Method>

<Method name="AddMarkedEntry">
<Description>
Search the text and find the index entries in it.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>text,blockid,dockey,owner=""</FormalSpec>
<Implementation><![CDATA[

    // Scan for the index terms 
    Set bgntag = "<indexterm"
    Set endtag = "</indexterm"
    Set closure = ">"

    Set termlist = ""
    Set f1 = 0
    While (1)
    {
        Set f1 = $FIND(text, bgntag, f1)
        Quit:(f1 = 0)
        Set termbgn = f1 - $LENGTH(bgntag)
        Set f2 = $FIND(text, endtag, f1)
        Set termend = $FIND(text, closure, f2)
        Set holder = $EXTRACT(text, termbgn, (termend -1))
        ; Write "Fragment: ", holder, !
        ; remove any <indexterm> containing a <see> or <seealso>
        if ('((holder [ "<see") || (holder [ "<seealso")))
        {
            Set termlist = termlist _ $LISTBUILD(holder)
        }
        Set f1 = termend
    }

    If ($LISTLENGTH(termlist) > 0)
    {
        ; Write "Terms: ", $LISTLENGTH(termlist), !
        For n = 1 : 1 : $LISTLENGTH(termlist)
        {
            Set text = $LIST(termlist, n)
            ; Write "Text: ", text, !

            // Remove the seealso and see references (in that order)
            For tag = "seealso", "see"
            {
                Set f1 = 0
                While (1)
                {
                    Set f1 = $FIND(text, ("<" _ tag), f1)
                    Quit:(f1 = 0)
                    ; Write text, !
                    Set f1 = f1 - $LENGTH(tag) - 1
                    Set f2 = $FIND(text, ("</" _ tag _ ">"), f1)
                    Set $EXTRACT(text, f1, (f2 - 1)) = ""
                }
            }
            ; Write "See/Seealso: ", text, !

            // Change the secondary and tertiary terms (in that order)
            Set holder = ""
            For tag = "secondary", "tertiary"
            {
                Set f1 = 0
                While (1)
                {
                    Set scanner = "<" _ tag
                    Set f1 = $FIND(text, scanner, f1)
                    Quit:(f1 = 0)
                    ; Write text, !
                    Set f1 = f1 - $LENGTH(scanner)
                    Set bgntext = $FIND(text, ">", f1)
                    Set scanner = "</" _ tag _ ">"
                    Set f2 = $FIND(text, scanner, bgntext)
                    Set endtext = f2 - $LENGTH(scanner) - 1
                    ; Write "Found: ", $EXTRACT(text, bgntext, endtext), !
                    Set holder = holder _ " &raquo; " _ $EXTRACT(text, bgntext, endtext)
                    Set $EXTRACT(text, f1, (f2 - 1)) = ""
                    ; Write "Holder: ", holder, !
                    ; Write tag, ": ", text, !

                }
            }

            // Now extract the primary reference
            Set tag = "primary"
            Set f1 = 0
            While (1)
            {
                Set f1 = $FIND(text, ("<" _ tag), f1)
                Quit:(f1 = 0)
                Set f1 = f1 - $LENGTH(tag) - 1
                Set bgntext = $FIND(text, ">", f1)
                Set f2 = $FIND(text, ("</" _ tag _ ">"), bgntext)
                Set endtext = f2 - $LENGTH(tag) - 3 - 1
                Set key = $EXTRACT(text, bgntext, endtext) _ holder
                ; Write "==> ", key, !
                Do ..AddEntry(key,"indexterm",blockid,dockey,owner)
                Set f1 = f2
                Set holder = ""
            }
        }
    }

    Quit
]]></Implementation>
</Method>

<Method name="AddFirstTermEntry">
<Description>
Search the text and find the first terms in it.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>text,blockid,dockey,owner=""</FormalSpec>
<Implementation><![CDATA[

    //AAH820 -- added this method
    // Scan for the first terms
    Set bgntag = "<firstterm"
    Set endtag = "</firstterm"
   
    Set closure = ">"

    Set termlist = ""
    Set f1 = 0
    While (1)
    {
        Set f1 = $FIND(text, bgntag, f1)
        Quit:(f1 = 0)
        Set termbgn = f1 - $LENGTH(bgntag)
        Set f2 = $FIND(text, endtag, f1)
        Set termend = $FIND(text, closure, f2)
        Set holder = $EXTRACT(text, termbgn, (termend -1))
        set newfrag=$REPLACE(holder,bgntag_closure,"")
        set newfrag2=$REPLACE(newfrag,endtag_closure,"")
        set cleanfrag=$ZSTRIP(newfrag2,"<>P")
        Do ..AddEntry(cleanfrag,"firstterm",blockid,dockey,owner)
        //Write "Fragment: ", cleanfrag, !
        Set f1 = termend
    }
]]></Implementation>
</Method>

<Method name="CountGlobal">
<Description>
Counts the number of members in the global</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>GlobName:%String</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
    Set Cnt = 0

    Set Sub = ""
    Set Ref = $QUERY(@GlobName@(Sub))
    While (Ref '= "")
    {
        Set Cnt = Cnt + 1
        Set Ref = $QUERY(@Ref)
    }

    Quit Cnt
]]></Implementation>
</Method>

<Method name="Colorize">
<Description>
Syntax color all the programlisting blocks</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[

    &sql(DECLARE CC CURSOR FOR
        SELECT ID
        INTO :id
        FROM DocBook.programlisting
        WHERE dblang IS NOT NULL
    )

    &sql(OPEN CC)
    &sql(FETCH CC)

    Set count = 0
    Write $$$T("Colorizing...")

    While (SQLCODE = 0) {
        Set count = count + 1
        Set block = ##class(programlisting).%OpenId(id)

        Do block.Colorize()

        Do block.%Save()
        &sql(FETCH CC)
    }

    Write !,count,$$$T(" blocks colorized."),!

    &sql(CLOSE CC)
]]></Implementation>
</Method>

<Method name="ExecuteSample">
<Description>
Execute the given sample program (assuming this is called
from a CSP page)</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>content:%String,lang:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

    If (lang = "COS") {
        &html<<DIV CLASS="OUTPUT">>
        Set sc = ..ExecuteCOS(content)
        &html<</DIV>>
    }
    ElseIf (lang = "BAS") {
        &html<<DIV CLASS="OUTPUT">>
        Set sc = ..ExecuteBAS(content)
        &html<</DIV>>
    }
    ElseIf (lang = "CSP") {
        &html<<DIV CLASS="OUTPUT">>
        Set sc = ..ExecuteCSP(content)
        &html<</DIV>>
    }
    ElseIf (lang = "SQL") {
        Set sc = ..ExecuteSQL(content)
    }
    Else {
        Set sc = $$$OK
    }

    Quit sc
]]></Implementation>
</Method>

<Method name="ExecuteCOS">
<Description>
Execute a COS example</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>code:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

    // execute in SAMPLES namespace

    Set zn = $zu(5)
    Set x = $zu(5,"SAMPLES")


    Set routine = ##class(%Routine).%New("DocBook.EXECTemp1COS.MAC")

    // Write lines of code to the routine
    Do routine.WriteLine("EXECTemp1COS ;"_$ZDT($H,3))

    // UNIX nonsense!
    Set code = $TR(code,$C(13),"")

    // get rid of HTML escapes
    Set code = $ZCVT(code,"I","HTML")

    For ln = 1:1:$L(code,$C(10)) {
        Do routine.WriteLine($P(code,$C(10),ln))
    }

    Do routine.WriteLine("")
    Do routine.WriteLine(" QUIT")

    Write "<PRE>"

    // save the routine
    Do routine.Save()

    // compile the routine (with no output)
    Set sc = routine.Compile("-d")

    If ($$$ISERR(sc)) {
        Do $system.OBJ.DisplayError(sc)
    }
    Else {
        // save current translate table
        //Set iomode = $zu(96, 18, 0)
        // translate output using HTML escapes
        //Do $zu(96, 18, 2, "HTML")

        // execute the new routine
        Do ^DocBook.EXECTemp1COS

        // restore translate table
        //Do $zu(96, 18, 2, iomode)
    }

    Write "</PRE>"

    // restore old namespace
    Set x = $zu(5,zn)

    Quit $$$OK
]]></Implementation>
</Method>

<Method name="ExecuteBAS">
<Description>
Execute a BASic example</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>code:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

    // execute in SAMPLES namespace

    Set zn = $zu(5)
    Set x = $zu(5,"SAMPLES")

    Set routine = ##class(%Routine).%New("DocBook.EXECTemp1BAS.BAS")

    // Write lines of code to the routine
    Do routine.WriteLine("' EXECTemp1BAS "_$ZDT($H,3))

    // UNIX nonsense!
    Set code = $TR(code,$C(13),"")

    // get rid of HTML escapes
    Set code = $ZCVT(code,"I","HTML")

    For ln = 1:1:$L(code,$C(10)) {
        Do routine.WriteLine($P(code,$C(10),ln))
    }

    Write "<PRE>"

    // save the routine
    Do routine.Save()

    // compile the routine
    Set sc = routine.Compile("-d")

    If ($$$ISERR(sc)) {
        Do $system.OBJ.DisplayError(sc)
    }
    Else {
        // execute the new routine
        Do ^DocBook.EXECTemp1BAS
    }
    Write "</PRE>"

    // restore old namespace
    Set x = $zu(5,zn)

    Quit $$$OK
]]></Implementation>
</Method>

<Method name="ExecuteSQL">
<Description>
Execute an SQL example</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>code:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

    // execute in SAMPLES namespace

#dim x,zn As %String
#dim i,splitSQL As %Integer

    Set zn = $zu(5)
    Set x = $zu(5,"SAMPLES")

    Set routine = ##class(%Routine).%New("DocBook.EXECTemp1COS.MAC")

    // Write lines of code to the routine
    Do routine.WriteLine("EXECTemp1COS ;"_$ZDT($H,3))

    // convert CR to spaces
    if code[$c(13,10),code["--" { set splitSQL=1 }
    else { Set splitSQL=0, code = $TR(code,$C(13,10),"  ") }

    // get rid of HTML escapes
    Set code = $ZCVT(code,"I","HTML")

    // write code to execute query
    if splitSQL {
        Do routine.WriteLine(" New query,sc,col,cols,data,sql")
        Do routine.WriteLine(" Set query = ##class(%ResultSet).%New()")
        for i=1:1:$l(code,$c(13,10)) {
            Do routine.WriteLine($s(i=1:" Set sql="_$l(code,$c(13,10)),1:"")_" Set sql("_i_") = "_$zu(144,1,$p(code,$c(13,10),i)))
        }
        Do routine.WriteLine(" Set sc = query.Prepare(.sql,,""DISPLAY"")")
    }
    else {
        Do routine.WriteLine(" New query,sc,col,cols,data")
        Do routine.WriteLine(" Set query = ##class(%ResultSet).%New()")
        Do routine.WriteLine(" Set sc = query.Prepare(" _ $ZU(144,1,code) _ ",,""DISPLAY"")")
    }
    Do routine.WriteLine(" If (+sc = 0) {")
    Do routine.WriteLine("  Do $system.OBJ.DisplayError(sc)")
    Do routine.WriteLine("  QUIT")
    Do routine.WriteLine(" }")

    Do routine.WriteLine(" Set sc = query.Execute()")
    Do routine.WriteLine(" If (+sc = 0) {")
    Do routine.WriteLine("  Do $system.OBJ.DisplayError(sc)")
    Do routine.WriteLine("  QUIT")
    Do routine.WriteLine(" }")

    // use border=1 for netscape
    Do routine.WriteLine(" New b Set b=$S(%request.UserAgent[""MSIE"":0,1:1)")

    Do routine.WriteLine(" Write ""<TABLE BORDER="",b,"" BGCOLOR=""""white"""" CELLPADDING=1 CELLSPACING=0 CLASS=""""SQL""""><TR>""")
    Do routine.WriteLine(" Set cols = query.GetColumnCount()")

    Do routine.WriteLine(" For col = 1:1:cols {")
    Do routine.WriteLine("  Write ""<TH>"",query.GetColumnHeader(col),""</TH>"",!")
    Do routine.WriteLine(" }")
    Do routine.WriteLine(" Write ""</TR>""")

    Do routine.WriteLine(" While (query.Next()) {")
    Do routine.WriteLine(" Write ""<TR>"",!")
    Do routine.WriteLine("  For col = 1:1:cols {")
    Do routine.WriteLine("   Set data = query.GetData(col)")
    Do routine.WriteLine("   Write ""<TD>"",$S(data="""":""<I>&lt;null&gt;</I>"",1:$ZCVT(data,""O"",""HTML"")),""</TD>"",!")
    Do routine.WriteLine("  }")
    Do routine.WriteLine(" Write ""</TR>"",!")
    Do routine.WriteLine(" }")
    Do routine.WriteLine(" Write ""</TABLE>""")

    Do routine.WriteLine(" Do query.Close()")
    Do routine.WriteLine(" QUIT")

    // save the routine
    Do routine.Save()

    // compile the routine
    Set sc = routine.Compile("-d")

    If ($$$ISERR(sc)) {
        Do $system.OBJ.DisplayError(sc)
    }
    Else {
        // execute the new routine
        Do ^DocBook.EXECTemp1COS
    }

    // restore old namespace
    Set x = $zu(5,zn)

    Quit $$$OK
]]></Implementation>
</Method>

<Method name="ExecuteCSP">
<Description>
Execute a CSP example: note that CSP tags are not supported</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>code:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

    // execute in SAMPLES namespace

    Set zn = $zu(5)
    Set x = $zu(5,"SAMPLES")

    Set routine = ##class(%Routine).%New("DocBook.EXECTemp1COS.MAC")

    // Write lines of code to the routine
    Do routine.WriteLine("EXECTemp1COS ;"_$ZDT($H,3))

    // UNIX nonsense!
    Set code = $TR(code,$C(13),"")

    // get rid of HTML escapes
    Set code = $ZCVT(code,"I","HTML")

    Do routine.WriteLine(" &html<")

    For ln = 1:1:$L(code,$C(10)) {
        Do routine.WriteLine($P(code,$C(10),ln))
    }

    Do routine.WriteLine(">")
    Do routine.WriteLine(" QUIT")

    // save the routine
    Do routine.Save()

    // compile the routine
    Set sc = routine.Compile("-d")

    If ($$$ISERR(sc)) {
        Do $system.OBJ.DisplayError(sc)
    }
    Else {
    // execute the new routine
        Do ^DocBook.EXECTemp1COS
    }

    // restore old namespace
    Set x = $zu(5,zn)

    Quit $$$OK
]]></Implementation>
</Method>

<Method name="GetBuildInfo">
<Description><![CDATA[
Generates the version info string for the DocBook database.<BR>
This is invoked when the database is built.]]></Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>entity:%Boolean=1</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    quit ("Cach"
          _ $SELECT(entity:"&eacute;", 1:"e")
          _ " v"
          _ $system.Version.GetNumber()
          _ " ("
          _ $system.Version.GetCompBuild()
          _ ")")
]]></Implementation>
</Method>

<Method name="SetBuildInfo">
<Description><![CDATA[
Set the version info for the DocBook database.<BR>
This is invoked when the database is built.]]></Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[    Set ^DocBook.BuildInfo = ..GetBuildInfo()
]]></Implementation>
</Method>

<Method name="StartsWith">
<Description>
Returns true if string starts with the given fragment.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>string:%String,fragment:%String,caseSensitive:%Boolean=0</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
    //AAH819 -- added this method
    set fraglen=$LENGTH(fragment)
    set extract=$EXTRACT(string,1,fraglen)
    if caseSensitive {
        set return=(extract=fragment)
    } else {
        set return=($$$UPPER(extract)=$$$UPPER(fragment))
    }
    quit return
]]></Implementation>
</Method>

<Method name="ProcessArchAttribute">
<Description><![CDATA[
Iterates through all rows in the DocBook.book and DocBook.article tables.
For each book or article, this method finds the arch attribute for the given book or article
and then uses that to set the Product field for each row in DocBook.block 
that belong to the given book or article.
<p><var>item</var> is optional. If specified, it must be the blockid of a book or article;
if you specify this, we process just that book or article.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>verbose:%Boolean=0,item:%String=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
   //AAH898 -- added this method
    try {
        if verbose {
	        write !, "Starting ProcessArchAttribute()... "
        }  
   	    set sql1="SELECT id,blockid,tagattrs FROM DocBook.article WHERE tagattrs IS NOT NULL"
   	    set sql2="SELECT id,blockid,tagattrs FROM DocBook.book WHERE tagattrs IS NOT NULL"
        if (item'="") {
	        set sql1=sql1_" AND topid='"_item_"'"
	        set sql2=sql2_" AND topid='"_item_"'"
        } 
        set sql=sql1_" UNION "_sql2   
               
        set stmt = ##class(%SQL.Statement).%New()
        set status = stmt.%Prepare(sql)
        if $$$ISERR(status) { 
			if verbose {
				do $system.OBJ.DisplayError()
			}
            return status
        }

        //if we are processing all items, clear this table so we can refresh its contents
        if (item=""){
	        do ##class(DocBook.product).%DeleteExtent() 
    	}

        set result = stmt.%Execute() 
        while (result.%Next()) {
            set blockid=result.%Get("blockid")
            set tagattrs=result.%Get("tagattrs")
            if ('##class(DocBook.block).HasAttr("arch",tagattrs) && verbose) {
	            write !, ">>>For blockid "_blockid_", arch is not specified!"
            } else {
	            set archvalue=##class(DocBook.block).GetAttrValue("arch",tagattrs)
				if ($$$LOWER(archvalue)="hsfoundation") {
					set product="HealthShare" 
				} elseif ($$$LOWER(archvalue)="healthshare") {
					set product="HealthShare"
				} elseif ($$$LOWER(archvalue)="trakcare") {
					set product="TrakCare"
				} elseif ($$$LOWER(archvalue)="cache") {
					set product="Cache"
				} elseif ($$$LOWER(archvalue)="ensemble") {
					set product="Ensemble"
				} elseif ($$$LOWER(archvalue)="intersystems") {
					set product="all"
				} else {
					set product=archvalue
				}
	            set conformancevalue=##class(DocBook.block).GetAttrValue("conformance",tagattrs)
	            if (conformancevalue="") {
					if verbose {
						write !, "For blockid "_blockid_", arch="_archvalue_" so product is "_product
					}
	            } else {
		            set product=conformancevalue
					if verbose {
						write !, "For blockid "_blockid_", conformance="_conformancevalue_" so product is "_product
					}
	            }

				set status=$$$OK
				do ..ProcessProductForItem(blockid,product)
	            //here is where we populate the DocBook.product table
				if ((product'="all") && '##class(DocBook.product).%ExistsId(product)) {
					set newproduct=##class(DocBook.product).%New()
					set newproduct.Name=product
					set status=newproduct.%Save()
					if ($$$ISERR(status)&& verbose) {
						do $system.OBJ.DisplayError()
					}
				}
            }
           
        }
        if verbose {
	        write !, "Done with ProcessArchAttribute() ",!
        }  

    	return status

    } catch(ex) {
        return $$$ERROR($$$GeneralError,ex)
    }
]]></Implementation>
</Method>

<Method name="ProcessProductForItem">
<Description>
Called by ProcessArchAttribute.
This processing updates all rows in DocBook.block that belong to the given book or article,
and sets the Product field for each row, based on the value of arch.
The item argument is the blockid of the book or article. </Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>item:%String="",product:%String=""</FormalSpec>
<Private>1</Private>
<Implementation><![CDATA[
   //AAH898 -- added this method
	if (item="") quit $$$ERROR($$$GeneralError,"No item specified")
	if (product="") quit $$$ERROR($$$GeneralError,"No product specified")
	&sql(UPDATE DocBook.block SET product=:product WHERE TopId=:item)
]]></Implementation>
</Method>

<Method name="ProcessConditionAttribute">
<Description><![CDATA[
Iterates through all rows in the DocBook.book and DocBook.article tables.
For each book or article, this method finds the condition attribute for the given book or article
and then uses that to set the ExtraTags field for each row in DocBook.block 
that belong to the given book or article. Also recurses through these lower-level
rows to find any additional condition attributes and add tags from them as well.
<p><var>item</var> is optional. If specified, it must be the blockid of a book or article;
if you specify this, we process just that book or article.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>verbose:%Boolean=0,item:%String=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
   //AAH898 -- added this method
    try {
        if verbose {
	        write !, "Starting ProcessConditionAttribute()... "
        }  
   	    set sql1="SELECT id,blockid,tagattrs FROM DocBook.article WHERE tagattrs IS NOT NULL"
   	    set sql2="SELECT id,blockid,tagattrs FROM DocBook.book WHERE tagattrs IS NOT NULL"
        if (item'="") {
	        set sql1=sql1_" AND topid='"_item_"'"
	        set sql2=sql2_" AND topid='"_item_"'"
        } else {
	        //if we are processing all items, clear this table so we can refresh its contents
	        do ##class(DocBook.searchTag).%DeleteExtent() 
        }
        set sql=sql1_" UNION "_sql2      

        set stmt = ##class(%SQL.Statement).%New()
        set status = stmt.%Prepare(sql)
		if $$$ISERR(status) {
			if verbose {
				do $system.OBJ.DisplayError()
			}
			return status
		}
        
        set result = stmt.%Execute() 
        while (result.%Next()) {
            set id=result.%Get("id")
			set status= ..ProcessTopid(id,verbose)
			if ($$$ISERR(status) && verbose) {
				do $system.OBJ.DisplayError()
			}
		}
        if verbose {
	        write !, "Done with ProcessConditionAttribute() ",!
        }  
    	return status

    } catch(ex) {
        return $$$ERROR($$$GeneralError,ex)
    }
]]></Implementation>
</Method>

<Method name="ProcessTopid">
<Description>
Called by ProcessConditionAttribute.
Given the id (not blockid) of a book or article, see if this record has a value for the condition
attribute, and if so, extract that value and update the ExtraTags field for this record and all
child records. Process child records in the same way.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%Numeric,verbose:%Boolean=0</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
   //AAH898 -- added this method
	set status=$$$OK
    &sql(SELECT tagattrs, blockid INTO :parentTagAttrs,:blockid FROM DocBook.block where id=:id)
    //if (SQLCODE'=0) { $$$ERROR($$$GeneralError,"SQLCODE not zero") }

    if ##class(DocBook.block).HasAttr("condition",parentTagAttrs) {
		set originaltoplevetags=##class(DocBook.block).GetAttrValue("condition",parentTagAttrs)
		set topleveltags=..GetCleanedUpTagList(originaltoplevetags,verbose)

		if (topleveltags'="") {
			if verbose {
				write !, "FOUND top-level tags in blockid "_blockid_": " _topleveltags
			}
			// AAH915 pass topleveltags by reference so that we can get a case-adjusted list
			// (we do this to avoid a proliferation of tags that differ only by case)
			do ..UpdateTagsTable(.topleveltags,verbose)
			// AAH915 also fix bug on next line!
			&sql(UPDATE DocBook.block SET extraTags=:topleveltags WHERE blockid=:blockid)
		}
		
    } else {
		//no need to update DocBook.searchTag table
	    set topleveltags=""
    }
    
	do ..IterateThroughTopid(id,topleveltags,verbose,.status)
	quit status
]]></Implementation>
</Method>

<Method name="IterateThroughTopid">
<Description>
Internal. For use by ProcessTopid(); not to be called standalone.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[id:%Numeric,parentTags:%String,verbose:%Boolean=1,&status:%Status]]></FormalSpec>
<Private>1</Private>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
   //AAH898 -- added this method
    set status=$$$OK
    set sql="SELECT id, blockid, x__classname,tagattrs FROM DocBook.block WHERE container="_id
	set stmt=##class(%SQL.Statement).%New()
	set status = stmt.%Prepare(sql)
    if $$$ISERR(status) { 
		if verbose {
			do $system.OBJ.DisplayError()
		}
        quit 
    }

	set result = stmt.%Execute() 
	while (result.%Next()) {
		set childid=result.%Get("id") //numeric id of record
		set childblockid=result.%Get("blockid") //string of record
		set tagattrs=result.%Get("tagattrs")
		if ##class(DocBook.block).HasAttr("condition",tagattrs) {

			set origaddedTags=##class(DocBook.block).GetAttrValue("condition",tagattrs)
			set addedTags=..GetCleanedUpTagList(origaddedTags,verbose)
			if addedTags="" continue

			if verbose {
				write !, "FOUND extra tags in blockid "_childblockid_": " _addedTags
			}
    		//now update DocBook.searchTag table
    		do ..UpdateTagsTable(addedTags,verbose)

			if (parentTags="") {
				set newTags=addedTags
			} else {
				set newTags=parentTags_";"_addedTags
			}
			

		} else {
    		//no need to update DocBook.searchTag table
			set newTags=parentTags
		}

        &sql(UPDATE DocBook.block SET extraTags=:newTags WHERE id=:childid)
		do ..IterateThroughTopid(childid,newTags)
	}
]]></Implementation>
</Method>

<Method name="GetCleanedUpTagList">
<ClassMethod>1</ClassMethod>
<FormalSpec>tagList:%String,verbose:%Boolean=0</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set tagList=$ZSTRIP(tagList,"<>W")
	set list=$LISTFROMSTRING(tagList,";")
	set cleanedupstring=""
	for i=1:1:$LL(list) {
		set item=($LG(list,i))
		set item=$ZSTRIP(item,"<>W")
		if (item="") continue
		if (item="preserve") continue
		if (i=1) {
			set cleanedupstring=item
		} else {
			set cleanedupstring=cleanedupstring_";"_item
		}
	}
	quit cleanedupstring
]]></Implementation>
</Method>

<Method name="UpdateTagsTable">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&tagList:%String,verbose:%Boolean]]></FormalSpec>
<Implementation><![CDATA[
	set list=$LISTFROMSTRING(tagList,";")
	set newlist=""
	for i=1:1:$LL(list) {
		set item=($LG(list,i))
		set itemUPPER=$$$UPPER(item)
		&sql(SELECT Name into :NameActual FROM DocBook.searchTag WHERE UPPERName=:itemUPPER)

		// AAH915 - rewrote
		if (SQLCODE=0) {
			//if we already have this tag (in any case), then grab that and put into the new list)
			//also in this case we don't create a new record in DocBook.searchTag
			set itemForList=NameActual
		} else {
			//if we don't yet have this tag, use its case as is to update the list and to 
			//create a new record in DocBook.searchTag
			set new=##class(DocBook.searchTag).%New()
			set new.Name=item
			set new.UPPERName=itemUPPER
			set itemForList=item
			set status=new.%Save()
			if ($$$ISERR(status) && verbose) {
				do $system.OBJ.DisplayError()
			}

		}
		//update the list we'll be returning
		if (i=1) {
			set newlist=itemForList
		} else {
			set newlist=newlist_";"_itemForList
		}

	}
	set tagList=newlist
]]></Implementation>
</Method>

<Method name="ProcessRankings">
<ClassMethod>1</ClassMethod>
<FormalSpec>verbose:%Boolean=0</FormalSpec>
<Implementation><![CDATA[
    if verbose {
	    write !, "Starting ProcessRankings()... "
    }  

    kill ^||ProcessedRankings
    If $D(^DocBook.Config("SOURCE")) {
        Set n = $O(^DocBook.Config("SOURCE",""))
        While (n'="") {
	        set dirname=^DocBook.Config("SOURCE",n)
	        set lastchar=$E(dirname,$L(dirname))
	        if ((lastchar'="\") && (lastchar'="/")) {
		        set dirname=dirname_"\"
	        }
        	set filename=dirname_"rankings.txt"
        	do ..ProcessRankingsFromFile(filename,verbose)
            Set n = $Order(^DocBook.Config("SOURCE",n))
        }
    }
    if verbose {
	    write !, "Done with ProcessRankings() ",!
    }
]]></Implementation>
</Method>

<Method name="ProcessRankingsFromFile">
<Description>
Given a rankings file, updates the Rank property for all records in DocBook.block</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>filename:%String="c:\0work\cache-rankings.txt",verbose:%Boolean=0</FormalSpec>
<Implementation><![CDATA[
	if (filename="") quit
	set test=##class(%File).Exists(filename)
	if 'test quit
	
	set file=##class(%Stream.FileCharacter).%New()
	if verbose {
		write !, "Using rankings file ",filename
	}
	set status=file.LinkToFile(filename)
	if $$$ISERR(status) {
		do $system.Status.DisplayError(status)
		quit status
	}
	while (file.AtEnd=0) {
		set line=file.ReadLine(,.status)
 		if $$$ISERR(status) { do $system.Status.DisplayError(status) }
		set data=$LISTFROMSTRING(line,$CHAR(9))	; assumes a tab-separated file
		set rank	=$LISTGET(data,1)
		set blockid	=$LISTGET(data,2)
		if verbose {
			write !, "For blockid ",blockid," rank is ",rank
		}

		//if we are processing a child block, make a note of it!
		if (blockid [ "_") {
			set rootblock=$P(blockid,"_",1)
			set childblockform=rootblock_"_"
			set ^||ProcessedRankings(childblockform)=""
		}

		//if this is a parent blockid, check to see if we already processed a child block
		if (blockid '[ "_") {
			set childblockform=blockid_"_"
			if $D(^||ProcessedRankings(childblockform)) {
				set toponly=1
			} else {
				set toponly=0
			}
		}
		
		&sql(SELECT id into :ID from DocBook.block where blockid=:blockid)
		if (SQLCODE=0) {
			do ..ProcessRankForId(ID,rank,verbose,.status,toponly)
		}
	}
    &sql(UPDATE DocBook.block SET Rank=10000 WHERE container IS NULL)
]]></Implementation>
</Method>

<Method name="ProcessRankForId">
<Description>
Internal. For use by ProcessRankingsFromFile(); not to be called standalone.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[id:%Numeric,rank:%Numeric="",verbose:%Boolean=0,&status:%Status,topOnly:%Boolean=0]]></FormalSpec>
<Private>1</Private>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
   //AAH898 -- added this method
    set status=$$$OK
    &sql(UPDATE DocBook.block SET Rank=:rank WHERE id=:id)

    if topOnly { 
    	quit
    }
    //process child rows
    set sql="SELECT id, blockid, x__classname,tagattrs FROM DocBook.block WHERE container="_id
	set stmt=##class(%SQL.Statement).%New()
	set status = stmt.%Prepare(sql)
    if $$$ISERR(status) { 
		if verbose {
			do $system.OBJ.DisplayError()
		}
        quit 
    }

	set result = stmt.%Execute() 
	while (result.%Next()) {
		set childid=result.%Get("id") //numeric id of record
		set classname=result.%Get("x__classname") 
		set test=##class(DocBook.block).%OpenId(childid)
		set testclassname=test.%ClassName()
		//if ((classname [ "book") || (classname [ "article") || (classname [ "chapter") || (classname [ "appendix") || (classname [ "glossary") || (classname [ "reference") || (classname [ "refentry") || (classname [ "sect1") || (classname [ "sect2")  || (classname [ "refsect1") || (classname [ "refsect2")) {
    	    &sql(UPDATE DocBook.block SET Rank=:rank WHERE id=:childid)
			do ..ProcessRankForId(childid,rank,.status)
		//}
		}
]]></Implementation>
</Method>

<Method name="ProcessDerivedTags">
<ClassMethod>1</ClassMethod>
<FormalSpec>verbose:%Boolean=0</FormalSpec>
<Implementation><![CDATA[
    if verbose {
	    write !, "Starting ProcessDerivedTags()... "
    }  
    If $D(^DocBook.Config("SOURCE")) {
        Set n = $O(^DocBook.Config("SOURCE",""))
        While (n'="") {
	        set dirname=^DocBook.Config("SOURCE",n)
	        set lastchar=$E(dirname,$L(dirname))
	        if ((lastchar'="\") && (lastchar'="/")) {
		        set dirname=dirname_"\"
	        }
        	set filename=dirname_"derivedtags.txt"
        	do ..ProcessDerivedTagsFromFile(filename,verbose)
            Set n = $Order(^DocBook.Config("SOURCE",n))
        }
    }
    if verbose {
	    write !, "Done with ProcessDerivedTags() ",!
    }
]]></Implementation>
</Method>

<Method name="ProcessDerivedTagsFromFile">
<Description>
Given a derivedtags.txt file, updates the extraTags property for any affected block</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>filename:%String="c:\0work\derivedtags.txt",verbose:%Boolean=0</FormalSpec>
<Implementation><![CDATA[
	if (filename="") quit
	set test=##class(%File).Exists(filename)
	if 'test quit
	
	set file=##class(%Stream.FileCharacter).%New()
	if verbose {
		write !, "Using derived tags file ",filename
	}
	set status=file.LinkToFile(filename)
	if $$$ISERR(status) {
		do $system.Status.DisplayError(status)
		quit status
	}
	while (file.AtEnd=0) {
		set line=file.ReadLine(,.status)
 		if $$$ISERR(status) { do $system.Status.DisplayError(status) }
		set data=$LISTFROMSTRING(line,$CHAR(9))	; assumes a tab-separated file
		set basetag	=$LISTGET(data,1)
		set derivedtag	=$LISTGET(data,2)
		if verbose {
			write !, "For base tag ",basetag," we will apply the additional derived tag ",derivedtag
		}
		set sql="SELECT blockid,ID from DocBook.block WHERE extraTags [ '"_basetag_"'"
		set stmt=##class(%SQL.Statement).%New()
		set status=stmt.%Prepare(sql)
 		if $$$ISERR(status) { do $system.Status.DisplayError(status) }
 		set rset=stmt.%Execute()
 		set foundone=0
 		set count=0
 		while rset.%Next() {
	 		set count=count+1
	 		if (count=1) {
		 		set foundone=1
			    if (verbose>1) {
				    write !, "Adding derived tag "_derivedtag_" to "
			    }
	 		}
	 		set ID=rset.%Get("ID")
	 		set blockid=rset.%Get("blockid")
	 		if (verbose>1) {
		 		write blockid, "  "
	 		}
	 		//the SQL query just looks to see if extraTags contains a string that looks like the base
	 		//tag -- here we are making sure it really matches
		    set tagmatch=##class(DocBook.block).HaveMatchingTag(blockid,basetag)
		    if tagmatch {
			    set block=##class(DocBook.block).%OpenId(ID)
			    set block.extraTags=block.extraTags_";"_derivedtag
			    set status=block.%Save()
		 		if $$$ISERR(status) { do $system.Status.DisplayError(status) }
		    }
 		}
 		if foundone {
	   		do ..UpdateTagsTable(derivedtag,verbose)
 		}

		

	}
]]></Implementation>
</Method>

<Method name="ApplyMacros">
<ClassMethod>1</ClassMethod>
<FormalSpec>verbose:%Boolean=0</FormalSpec>
<Implementation><![CDATA[
    if verbose {
	    write !, "Starting ApplyMacros()... "
    }  
    If $D(^DocBook.Config("SOURCE")) {
        Set n = $O(^DocBook.Config("SOURCE",""))
        While (n'="") {
	        set dirname=^DocBook.Config("SOURCE",n)
	        set lastchar=$E(dirname,$L(dirname))
	        if ((lastchar'="\") && (lastchar'="/")) {
		        set dirname=dirname_"\"
	        }
        	set filename=dirname_"macros.txt"
        	do ..ApplyMacrosFromFile(filename,verbose)
            Set n = $Order(^DocBook.Config("SOURCE",n))
        }
    }
    if verbose {
	    write !, "Done with ApplyMacros() ",!
    }
]]></Implementation>
</Method>

<Method name="ApplyMacrosFromFile">
<Description>
Given a macros.txt file, make the substitutions described in it</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>filename:%String="c:\0work\macros.txt",verbose:%Boolean=0</FormalSpec>
<Implementation><![CDATA[
	if (filename="") quit
	set test=##class(%File).Exists(filename)
	if 'test quit
	
	set file=##class(%Stream.FileCharacter).%New()
	if verbose {
		write !, "Using macro file ",filename
	}
	set status=file.LinkToFile(filename)
	if $$$ISERR(status) {
		do $system.Status.DisplayError(status)
		quit status
	}
	while (file.AtEnd=0) {
		set line=file.ReadLine(,.status)
 		if $$$ISERR(status) { do $system.Status.DisplayError(status) }
		set data=$LISTFROMSTRING(line,$CHAR(9))	; assumes a tab-separated file
		set macroname	=$LISTGET(data,1)
		set macrodef	=$LISTGET(data,2)
		if verbose {
			write !, "For macro ",macroname," we will substitute ",macrodef
		}
		do ..ApplyMacroToField("content",macroname,macrodef,verbose)
		do ..ApplyMacroToField("title",macroname,macrodef,verbose)
	}
]]></Implementation>
</Method>

<Method name="ApplyMacroToField">
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>fieldname:%String="content",macroname:%String,macrodef:%String,verbose:%Boolean=0</FormalSpec>
<Implementation><![CDATA[
    if (macroname="") quit
    if (macrodef="") quit
    set old="DOCBOOKMACRO("_macroname_")"
    set sql="SELECT id,blockid,content from DocBook.block where %SQLUPPER("_fieldname_") [ 'DOCBOOKMACRO'"
	set stmt=##class(%SQL.Statement).%New()
	set status=stmt.%Prepare(sql)
	if $$$ISERR(status) { do $system.Status.DisplayError(status) }
	set rset=stmt.%Execute()
	while rset.%Next() {
		set ID=rset.%Get("ID")
		set blockid=rset.%Get("blockid")
		if (verbose>1) {
			write !, "Processing macro for blockid "_blockid
		}
		set block=##class(DocBook.block).%OpenId(ID)
		if (fieldname="content") {
			set texttoupdate=block.content
			set block.content=$REPLACE(texttoupdate,old,macrodef)
		} else {
			set texttoupdate=block.title
			set block.title=$REPLACE(texttoupdate,old,macrodef)
		}
		set status=block.%Save()
	if $$$ISERR(status) { do $system.Status.DisplayError(status) }
	}
]]></Implementation>
</Method>

<Method name="AfterLoadSets">
<Description>
Search will not work until you run this method.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>verbose:%Boolean=0</FormalSpec>
<Implementation><![CDATA[
    Do ##class(DocBook.Utils).CalculatedAddlProps(verbose) //must do this early so we have topid in place for later use
    Do ##class(DocBook.Utils).ApplyMacros(verbose)
    Do ##class(DocBook.Utils).ProcessRankings(verbose)
    Do ##class(DocBook.Utils).ProcessArchAttribute(verbose)
    Do ##class(DocBook.Utils).ProcessConditionAttribute(verbose)
    Do ##class(DocBook.Utils).ProcessDerivedTags(verbose)
]]></Implementation>
</Method>

<Method name="CalculatedAddlProps">
<ClassMethod>1</ClassMethod>
<FormalSpec>verbose:%Boolean</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    try {
        if verbose {
	        write !, "Starting CalculatedAddlProps()... "
        }  


    &sql(DECLARE ADDEDPROPS CURSOR FOR
         SELECT id,sourcefile INTO :ID,sourcefile FROM DocBook.block)

    &sql(OPEN ADDEDPROPS)
    &sql(FETCH ADDEDPROPS)

    While (SQLCODE = 0) {
		set NearestLevel1=##class(DocBook.block).GetIdAtLevel(ID,1)
		set Topid=$PIECE($PIECE(sourcefile,".xml",1),"_",1)
		set record=##class(DocBook.block).%OpenId(ID)
		set searchable=##class(DocBook.block).GetIsSearchable(record)
	

		&SQL(UPDATE DocBook.block 
			SET NearestLevel1=:NearestLevel1, 
			    Topid=:Topid,
		    	Searchable=:searchable
				WHERE id=:ID)


    	&sql(FETCH ADDEDPROPS)
    }
    &sql(CLOSE ADDEDPROPS)



    /*

   	    set sql="SELECT id FROM DocBook.block"

        set stmt = ##class(%SQL.Statement).%New()
        set status = stmt.%Prepare(sql)
		if $$$ISERR(status) {
			if verbose {
				do $system.OBJ.DisplayError()
			}
			return status
		}
        
        set result = stmt.%Execute() 
        while (result.%Next()) {
            set id=result.%Get("id")
		}
        if verbose {
	        write !, "Done with CalculatedAddlProps() ",!
        }  
    	return status
    	*/

    } catch(ex) {
        return $$$ERROR($$$GeneralError,ex)
    }
]]></Implementation>
</Method>
</Class>


<Class name="DocBook.abstract">
<Description>
The instantiation of a book abstract.  
This is a no-op as far as editing goes but is here because it can contain
sub-elements all of whose data must be ignored</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.containerNull</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>59241,40474</TimeCreated>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
</Storage>
</Class>


<Class name="DocBook.anchor">
<Description>
Provides a target for page-level help from the management portal</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.block</Super>
<TimeChanged>65278,75358.101447</TimeChanged>
<TimeCreated>58696,41768</TimeCreated>

<Property name="target">
<Description>
The normalied value of the anchor target</Description>
<Type>cdata</Type>
<Parameter name="MAXLEN" value="32000"/>
</Property>

<Method name="Interpret">
<Internal>1</Internal>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

    set attrs = ..tagattrs
    
    set text = ""
    for i = 1 : 5 : $LISTLENGTH(attrs)
    {
        if ($ZCONVERT($LIST(attrs, (i + 1)), "U") = "XREFLABEL")
        {
            set text = $LIST(attrs, (i + 4))
            quit
        }
    }
    
    if (text = "")
    {
        Quit $$$ERROR($$$GeneralError,$$$T("Missing xreflabel value"))
    }
    
    set ..target = ##class(DocBook.PortalUtils).Normalize(text)
    set ..content = $$$T("Help follows for the Management Portal page: ")
                  _ ##class(DocBook.PortalUtils).Display(..target)
    quit $$$OK

]]></Implementation>
</Method>

<Method name="HTMLRenderContent">
<Internal>1</Internal>
<Implementation><![CDATA[

    Write "<!-- --------------------------------------- -->", !
    Write "<A name=""", $TRANSLATE(..target, ", ", "-_"), """>", "</A>", !

    ;Write "<BR CLEAR=""ALL"">", !
    ;Write "<DIV CLASS=""anchor"">", !
    ;Write "<TABLE CELLSPACING=0 CELLPADDING=3 ALIGN=""RIGHT"">", !
    ;Write "<TBODY>", !
    ;Write "<TR>", !
    ;Write "<TD CLASS=""anchor"" ALIGN=""LEFT"">", !
    ;Write "<NOBR>", $$$T("Help follows for the Management Portal page: ") "</NOBR>", !
    ;Write "<BR>", !
    ;Write "<NOBR>", "&nbsp;&nbsp;", ##class(DocBook.PortalUtils).Display(..target), "&nbsp;&nbsp;", "</NOBR>", !
    ;Write "</TD>", !
    ;Write "</TR>", !
    ;Write "</TBODY>", !
    ;Write "</TABLE>", !
    ;Write "</DIV>"
    ;Write "<BR CLEAR=""ALL"">", !
    
    Write "<!-- --------------------------------------- -->", !
    quit
    
]]></Implementation>
</Method>

<Method name="XMLRender">
<Description>
Render the contents of this block as DocBook XML</Description>
<Internal>1</Internal>
<Implementation><![CDATA[

    set attrs = ..tagattrs
    set displayattrs = ..FmtAttrs(attrs)
    
    Write "<", ..%ClassName(), " ", displayattrs, "/>",!

]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>anchorDefaultData</DefaultData>
<ExtentSize>304</ExtentSize>
<Data name="anchorDefaultData">
<Structure>listnode</Structure>
<Subscript>"anchor"</Subscript>
<Value name="1">
<Value>target</Value>
</Value>
</Data>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>16</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.78</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>1.0870%</Selectivity>
<AverageFieldSize>5.75</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>20.0000%</Selectivity>
<AverageFieldSize>3.43</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>2.3115%</Selectivity>
<OutlierSelectivity>.144737:"GCAS"</OutlierSelectivity>
<AverageFieldSize>4.44</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>2.6316%</Selectivity>
<OutlierSelectivity>.842105:0</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>2.3115%</Selectivity>
<OutlierSelectivity>.144737:76</OutlierSelectivity>
<AverageFieldSize>2.22</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>1.0870%</Selectivity>
<AverageFieldSize>5.75</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.3745%</Selectivity>
<AverageFieldSize>5.78</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.3448%</Selectivity>
<AverageFieldSize>98.07</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>3.4774%</Selectivity>
<OutlierSelectivity>.513158:</OutlierSelectivity>
<AverageFieldSize>4.42</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>29.85</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>2.7778%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>33.3333%</Selectivity>
<AverageFieldSize>5.94</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>1.5152%</Selectivity>
<AverageFieldSize>13.22</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>7.4836%</Selectivity>
<OutlierSelectivity>.401316:"2019-09-22 19:31:30"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.3289%</Selectivity>
<AverageFieldSize>117.17</AverageFieldSize>
</Property>
<Property name="target">
<Selectivity>0.3448%</Selectivity>
<AverageFieldSize>37.88</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$anchor">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.answer">
<Description>
An answer.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75358.205007</TimeChanged>
<TimeCreated>59241,40474</TimeCreated>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[
	Write "<DIV CLASS=""answer""><SPAN CLASS=""note"">", $$$T("Answer:"), "</SPAN>"
	Write "<A name=""",..id,"""></A>",!
	Write ..title,"</DIV>",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>133</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>34</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.68</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>5.68</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>25.0000%</Selectivity>
<AverageFieldSize>3.97</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>4.66</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>1.95</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>5.68</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.7519%</Selectivity>
<AverageFieldSize>5.68</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>11.17</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.35</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>6.2657%</Selectivity>
<OutlierSelectivity>.43609:1</OutlierSelectivity>
<AverageFieldSize>1.02</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>14.2857%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>5</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>8.9</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>33.3333%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$answer">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.appendix">
<Description>
This class represents a DocBook appendix.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.component</Super>
<TimeChanged>65278,75358.312443</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="GetBannerInfo">
<Internal>1</Internal>
<FormalSpec>info:DocBook.UI.BannerInfo</FormalSpec>
<Implementation><![CDATA[
	Set info.title = ..title
	If (..book '= "") {
		Set info.booktitle = ..book.title
	}
	Else {
		Set info.booktitle = ""
	}		
	Set info.chap = $$$T("Appendix")
	
	// find prev/next chapter
	If ($G(%tutorial) = 1) {
		Set info.prev = ":self.history.back();" // !!!
	}
	Else {
		Do ..GetNextPrevInfo(info)
	}
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>162</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>54</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.73</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.6173%</Selectivity>
<AverageFieldSize>5.73</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>3.76</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.6452%</Selectivity>
<AverageFieldSize>33.01</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>2.0000%</Selectivity>
<AverageFieldSize>4.28</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>4.0000%</Selectivity>
<AverageFieldSize>1.54</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>2.0000%</Selectivity>
<AverageFieldSize>2.3</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>2.0000%</Selectivity>
<AverageFieldSize>2.3</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>2.8717%</Selectivity>
<OutlierSelectivity>.339506:</OutlierSelectivity>
<AverageFieldSize>12.41</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>17.52</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>5.5556%</Selectivity>
<AverageFieldSize>1.13</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>2.1739%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>9.8765%</Selectivity>
<OutlierSelectivity>.901235:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.3</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>1.3158%</Selectivity>
<AverageFieldSize>10.9</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>12.5000%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.6173%</Selectivity>
<OutlierSelectivity>.987654:</OutlierSelectivity>
<AverageFieldSize>1.59</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.6173%</Selectivity>
<AverageFieldSize>34.34</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.6452%</Selectivity>
<AverageFieldSize>33.98</AverageFieldSize>
</Property>
<SQLMap name="$appendix">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.artheader">
<Description>
The instantiation of an article header.  
This is a no-op as far as editing goes but is here because it can contain
sub-elements all of whose data must be ignored.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.containerNull</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>59241,40474</TimeCreated>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
</Storage>
</Class>


<Class name="DocBook.article">
<Description>
This class represents an article.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.component</Super>
<TimeChanged>65278,75358.418286</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Index name="ARoleIdx">
<Properties>role,title</Properties>
</Index>

<Index name="ATitleIdx">
<Properties>title</Properties>
</Index>

<Index name="ATimeIdx">
<Properties>sourcetime</Properties>
</Index>

<Method name="GetBannerInfo">
<Internal>1</Internal>
<FormalSpec>info:DocBook.UI.BannerInfo</FormalSpec>
<Implementation><![CDATA[

	Set info.title = ..title
	Set info.booktitle = $$$T("Technical Articles")

	Set info.isArticle = 1
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>13</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>53</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>6</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>7.6923%</Selectivity>
<AverageFieldSize>6</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>5</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>7.6923%</Selectivity>
<AverageFieldSize>31.69</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>7.6923%</Selectivity>
<AverageFieldSize>7</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>33.3333%</Selectivity>
<AverageFieldSize>4.92</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>7</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>12.5000%</Selectivity>
<AverageFieldSize>1.23</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>5</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>7.6923%</Selectivity>
<AverageFieldSize>11</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>7.6923%</Selectivity>
<AverageFieldSize>70</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>7.6923%</Selectivity>
<AverageFieldSize>71.15</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>7.6923%</Selectivity>
<AverageFieldSize>35.38</AverageFieldSize>
</Property>
<SQLMap name="$article">
<BlockCount>-4</BlockCount>
</SQLMap>
<SQLMap name="ARoleIdx">
<BlockCount>-8</BlockCount>
</SQLMap>
<SQLMap name="ATimeIdx">
<BlockCount>-4</BlockCount>
</SQLMap>
<SQLMap name="ATitleIdx">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.block">
<Description>
The block is the basic content container for the DocBook database.</Description>
<Abstract>1</Abstract>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<StorageStrategy>Default</StorageStrategy>
<Super>%Library.Persistent</Super>
<TimeChanged>65278,75360.140393</TimeChanged>
<TimeCreated>58725,70059</TimeCreated>

<Index name="IdIndex">
<Properties>id</Properties>
<Unique>1</Unique>
</Index>

<Index name="bookIndex">
<Type>bitmap</Type>
<Properties>book</Properties>
</Index>

<Index name="bookPos">
<Properties>book,blockpos</Properties>
</Index>

<Index name="componentIndex">
<Type>bitmap</Type>
<Properties>component</Properties>
</Index>

<Index name="containerIndex">
<Type>bitmap</Type>
<Properties>container</Properties>
</Index>

<Index name="contentIdx">
<Type>bitmap</Type>
<Properties>content(KEYS)</Properties>
</Index>

<Index name="titleIdx">
<Type>bitmap</Type>
<Properties>title(KEYS)</Properties>
</Index>

<Property name="blockpos">
<Description>
This block's position within its parent container.</Description>
<Type>dbfloat</Type>
</Property>

<Property name="book">
<Description>
The book this block belongs to.</Description>
<Type>book</Type>
</Property>

<Property name="component">
<Description>
The component (chapter,refentry, or article) this block belongs to.</Description>
<Type>component</Type>
</Property>

<Property name="container">
<Description>
The parent container to which this block belongs.</Description>
<Type>container</Type>
</Property>

<Property name="content">
<Description>
The text content of this block.</Description>
<Type>DocBook.IndexedText</Type>
<Parameter name="MAXLEN" value="32000"/>
</Property>

<Property name="id">
<Description>
This is the block ID</Description>
<Type>id</Type>
<SqlFieldName>blockid</SqlFieldName>
</Property>

<Property name="lang">
<Description>
The lang attribute for this block</Description>
<Type>cdata</Type>
<SqlFieldName>dblang</SqlFieldName>
</Property>

<Property name="lastchange">
<Description>
Timestamp for this block</Description>
<Type>%TimeStamp</Type>
</Property>

<Property name="role">
<Description>
The role attribute for this block</Description>
<Type>cdata</Type>
<SqlFieldName>dbrole</SqlFieldName>
</Property>

<Property name="remap">
<Description>
Used primarily on books as the primary sort key to order them in the list.</Description>
<Type>cdata</Type>
</Property>

<Property name="sourcefile">
<Description>
The xml source file from where this block was loaded</Description>
<Type>cdata</Type>
<Parameter name="MAXLEN" value="100"/>
</Property>

<Property name="sourcetime">
<Description>
Timestamp of the source file for this block</Description>
<Type>%TimeStamp</Type>
</Property>

<Property name="status">
<Description><![CDATA[
The status attribute for this block<br>
Within the DocBook standard, status is only available 
for certain elements. We define it here for consistency.]]></Description>
<Type>cdata</Type>
<SqlFieldName>dbstatus</SqlFieldName>
</Property>

<Property name="tagattrs">
<Description>
This is a reconstituted list of the attributes supplied with this block.</Description>
<Type>%Library.List</Type>
</Property>

<Property name="title">
<Description><![CDATA[
Title.<br>
Strictly speaking a block does not have title, a
container does. This is defined here for convenience.]]></Description>
<Type>DocBook.IndexedText</Type>
<Parameter name="MAXLEN" value="1000"/>
</Property>

<Property name="renderedContent">
<Description>
Some blocks may choose to pre-render their content for HTML
and place it here.</Description>
<Type>cdata</Type>
</Property>

<Index name="TopIdIdx">
<Properties>TopId</Properties>
</Index>

<Property name="TopId">
<Description>
Blockid of the containing book or article, e.g., GOBJ.
This is null for a set and should be non-null for all other block types.
We will use this information to restrict search by book/article.</Description>
<Type>%String</Type>
</Property>

<Index name="productIdx">
<Properties>product</Properties>
</Index>

<Property name="product">
<Description>
The product this block belongs to, based on the arch attribute of the containing book or article.
We will use this information to restrict search by product.</Description>
<Type>%String</Type>
</Property>

<Index name="extraTagsIdx">
<Properties>extraTags</Properties>
</Index>

<Property name="extraTags">
<Description>
Any extra tags associated with this block.
We will use this information to restrict search by tags</Description>
<Type>%String</Type>
<Parameter name="MAXLEN" value="200"/>
</Property>

<Index name="NearestLevel1Idx">
<Type>bitmap</Type>
<Properties>NearestLevel1</Properties>
</Index>

<Property name="NearestLevel1">
<Description>
ID (not blockid) of the nearest ancestor block that is served as a standalone page
from the top -- ID of the nearest chapter, appendix, reference, refentry, or preface (or ID of a higher unit, if applicable).
This is null for a set or book and should be non-null for all other block types.</Description>
<Type>%Integer</Type>
</Property>

<Property name="RenderedTitle">
<Type>%String</Type>
<Calculated>1</Calculated>
<SqlComputeCode>set {RenderedTitle}=$ZCVT({Title},"I","HTML")</SqlComputeCode>
<SqlComputed>1</SqlComputed>
</Property>

<Index name="RankIdx">
<Type>bitmap</Type>
<Properties>Rank</Properties>
</Index>

<Property name="Rank">
<Type>%Numeric</Type>
</Property>

<Index name="SearchableIdx">
<Type>bitmap</Type>
<Properties>Searchable</Properties>
</Index>

<Property name="Searchable">
<Description><![CDATA[
This property is 0 for <set>, <book>, and blocks that are small after we remove inline tags.
It is 1 for all other blocks]]></Description>
<Type>%Boolean</Type>
<InitialExpression>1</InitialExpression>
</Property>

<Method name="%OnBeforeSave">
<Internal>1</Internal>
<FormalSpec>insert:%Boolean</FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    #; Set timestamp
    Set ..lastchange = $ZDT($H,3)

    #; make sure search cache is cleared
    If ($D(^DocBook.SearchCache)) {
        Do ##class(DocBook.UI.SearchPageZen).ClearCache()
    }
    Quit $$$OK
]]></Implementation>
</Method>

<Method name="HasAttr">
<Description>
Is there an attribute with this name</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>AttrName:%Library.String,AttrList:%Library.List</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    
    set result = ""
    set attrs = AttrList
    set tempname = "/" _ $ZCONVERT(AttrName, "U") _ "/"
    for i = 1 : 5 : $LISTLENGTH(attrs)
    {
        set name = "/" _ $ZCONVERT($LIST(attrs, (i + 1)), "U") _ "/"
        if ($ZCONVERT(name, "U") [ tempname) {
            set result = $$$OK
        }
    }
    
    quit result
]]></Implementation>
</Method>

<Method name="GetAttrValue">
<Description>
Get value for attribute with this name</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>AttrName:%Library.String,AttrList:%Library.List</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    
    set result = ""
    set attrs = AttrList
    set tempname = $ZCONVERT(AttrName, "U")
    for i = 1 : 5 : $LISTLENGTH(attrs)
    {
        set name = $LIST(attrs, (i + 1))
        if ($ZCONVERT(name, "U") = tempname)
        {
            set result = $LIST(attrs, (i + 4))
        }
    }
    
    quit result
]]></Implementation>
</Method>

<Method name="FmtAttrs">
<Description>
Render the attributes for this block</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>AttrList:%Library.List,OnlyIds:%Library.List=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    
    set attrs = AttrList
    set only = "/"
    for i = 1 : 1 : $LISTLENGTH(OnlyIds)
    {
        set only = only _ $ZCONVERT($LIST(OnlyIds, i), "U") _ "/"
    }
    
    set result = ""
    ; Format of the attribute list
    ; A sequence of 5-element chunks as follows: 
    ; +0 - the uri
    ; +1 - local (unqualified) name
    ; +2 - qualified name
    ; +3 - the type ("CDATA", NMTOKEN", "ENTITY", etc.)
    ; +4 - the attribute value.
    ;
    for i = 1 : 5 : $LISTLENGTH(attrs)
    {
        set name = $LIST(attrs, (i + 1))
        set proceed = 0
        set:(OnlyIds = "") proceed = 1
        set:((OnlyIds '= "") && (only [ ("/" _ $ZCONVERT(name, "U") _ "/"))) proceed = 1
        if (proceed)
        {
            set:(result '= "") result = result _ " "
            set result = result _ name
            if ($LISTDATA(attrs, (i + 4)))
            {
                set val = $LIST(attrs, (i + 4))
                ; we could use $ISVALIDNUM to determine whether to 
                ; quote the value, but in practice it is not necessary
                set result = result _ "=""" _ $ZCONVERT(val, "O", "HTML") _ """"
            }
        }
    }
    
    quit result
]]></Implementation>
</Method>

<Method name="FindId">
<Description>
Find a block Object ID froms its block id.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>bid:cdata</FormalSpec>
<ReturnType>id</ReturnType>
<Implementation><![CDATA[

    Set id = ""
    &sql(SELECT ID INTO :id FROM block WHERE blockid = :bid)

    If (SQLCODE '= 0) {
        Quit ""
    }
    Quit id
]]></Implementation>
</Method>

<Method name="GetBannerInfo">
<Description>
Return banner info used to render the HTML page</Description>
<Internal>1</Internal>
<FormalSpec>info:DocBook.UI.BannerInfo</FormalSpec>
<Implementation><![CDATA[
    Set info.title = ""
    Set info.booktitle = ""
    Set info.chap = ""
    Set info.prev = ""
    Set info.next = ""
]]></Implementation>
</Method>

<Method name="HTMLRender">
<Description>
Render the contents of this block as HTML</Description>
<Internal>1</Internal>
<Implementation><![CDATA[    Do ..HTMLRenderContent()
]]></Implementation>
</Method>

<Method name="HTMLRenderContent">
<Internal>1</Internal>
<Implementation><![CDATA[
    // if this block has a recognized status value, then wrap
    // it with the appropriate DIV.
    // This does not work with NetScape
    //New statusmark
    
    Set statusmark = ""
    If ((..status'="")&&%ie)
    {
        If ($TRANSLATE(..status, "L") [ "draft")
        {
            Set statusmark = "draft"
        }
        If ($TRANSLATE(..status, "L") [ "broken")
        {
            Set statusmark = "broken"
        }
    }
    Write:(statusmark'="") "<DIV CLASS=""",statusmark,""">"
    Write "<A name=""",..id,"""></A>",!
    Write ##class(DocBook.Renderer).FilterText(..content)
    Write:(statusmark'="") "</DIV>"
]]></Implementation>
</Method>

<Method name="HTMLRenderId">
<Description><![CDATA[
Render the object with object id 
<varname>id</varname> as HTML.]]></Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>id:cdata</FormalSpec>
<Implementation><![CDATA[
    Set block = ##class(block).%OpenId(id)
    If (block '= "") {
        Do block.HTMLRender()
    }
]]></Implementation>
</Method>

<Method name="OpenKey">
<Description>
Find and open a block instance given its block id
(not its object id).</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>bid:cdata</FormalSpec>
<ReturnType>block</ReturnType>
<Implementation><![CDATA[    Quit ..%OpenId(..FindId(bid))
]]></Implementation>
</Method>

<Method name="XMLRender">
<Description>
Render the contents of this block as DocBook XML</Description>
<Internal>1</Internal>
<Implementation><![CDATA[
    
    Set tagtext = ..FmtAttrs(..tagattrs)
    Set:(tagtext '= "") tagtext = " " _ tagtext
    Write "<",..%ClassName(),tagtext,">"
    Write ..content
    Write "</",..%ClassName(),">",!
]]></Implementation>
</Method>

<Method name="XMLRenderId">
<Description><![CDATA[
Render the block with Object Id 
<varname>id</varname> as DocBook XML]]></Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>id:cdata</FormalSpec>
<Implementation><![CDATA[
    Set block = ##class(block).%OpenId(id)
    If (block '= "") {
        Do block.XMLRender()
    }
]]></Implementation>
</Method>

<Method name="GetProduct">
<Description><![CDATA[
Used to determine product property.
<p>Returned values: "all" "Cache" "Ensemble" "HealthConnect" "EnterpriseManager" "TrakCare"]]></Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>docbookid:%String</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
    //AAH819 -- added this method
    if ##class(DocBook.Utils).StartsWith(docbookid,"I") {
        set product="all"
    } elseif ##class(DocBook.Utils).StartsWith(docbookid,"E") {
        set product="Ensemble"
    } elseif ##class(DocBook.Utils).StartsWith(docbookid,"H") || ##class(DocBook.Utils).StartsWith(docbookid,"F") {
        set product="HealthConnect"
    } elseif ##class(DocBook.Utils).StartsWith(docbookid,"GEMS") {
        set product="EnterpriseManager"
    } elseif ##class(DocBook.Utils).StartsWith(docbookid,"K") {
        set product="TrakCare"
    } else {
        set product="Cache"
    }
    quit product
]]></Implementation>
</Method>

<Method name="GetIdAtLevel">
<Description>
Given a numeric ID of a block, return the id of self or of the nearest ancestor of specific set of types</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[id:%Numeric,depthFromTop:%Integer=3,&status:%Status]]></FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
    ///AAH820 add this method and the calculated properties that use it
    set status=$$$OK
    &sql(SELECT blockid, x__classname,container INTO :blockid, :cls, :parent FROM DocBook.block WHERE id=:id)
    if (SQLCODE'=0) {
        set status=$$$ERROR($$$GeneralError,"Problem querying DocBook.block with id="_id)
        quit ""
    }
    
    if (depthFromTop=0) {
        set inlist=((cls["book") || (cls["article"))
    
    //AAH899 -- added refentry to this branch
    } elseif (depthFromTop=1) {
        set inlist=((cls["book") || (cls["article")
         || (cls["preface") || (cls["chapter") || (cls["appendix") || (cls["reference") || (cls["refentry") )

    //AAH899 -- added refsect1 to this branch
    } elseif (depthFromTop=2) {
        set inlist=((cls["book") || (cls["article")
         || (cls["preface") || (cls["chapter") || (cls["appendix") || (cls["reference") || (cls["refentry")
         || (cls["sect1") || (cls["refsect1"))

    //AAH899 -- added refsect2 to this branch
    } elseif (depthFromTop=3) {
        set inlist=((cls["book") || (cls["article")
         || (cls["preface") || (cls["chapter") || (cls["appendix") || (cls["reference") || (cls["refentry")
         || (cls["sect1") || (cls["refsect1")
         || (cls["sect2") || (cls["refsect2"))

    //treat all other values of depthFromTop like the value 4
    //AAH899 -- added refsect3 to this branch
    } else {
        set inlist=((cls["book") || (cls["article")
         || (cls["preface") || (cls["chapter") || (cls["appendix") || (cls["reference") || (cls["refentry")
         || (cls["sect1") || (cls["refsect1")
         || (cls["sect2") || (cls["refsect2")
         || (cls["sect3") || (cls["refsect3"))
    }
    
    if inlist {
        quit id
    } else {
        quit ..GetIdAtLevel(parent,depthFromTop,.status)
    }
]]></Implementation>
</Method>

<Method name="HaveMatchingTag">
<Description>
Returns true if the given block is tagged with the given tag.</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>blockid:%String,tag:%String</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
    //AAH898 -- added this method
	set tag=$$$UPPER(tag)
	&sql(SELECT extraTags into :extraTags FROM DocBook.block WHERE blockid=:blockid AND %SQLUPPER(extraTags)[:tag)
	if (SQLCODE=0) {
		set list=$LISTFROMSTRING($$$UPPER(extraTags),";")
		for i=1:1:$LL(list) {
			set item=$$$UPPER($LG(list,i))
			if (item=tag) {
				return 1
			}
		}
	}
	quit 0
]]></Implementation>
</Method>

<Method name="MatchAllParms">
<Description>
Check to see if the given blockid matches the rest of the query parameters</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>blockid,queryProduct:%String="",queryBook:%String="",queryTag:%String=""</FormalSpec>
<Implementation><![CDATA[
    //AAH898 -- added this method
    &sql(SELECT product, topid INTO :product, :topid FROM DocBook.block WHERE blockid=:blockid)
    if (SQLCODE'=0) {
	    quit 0}
    
    set productmatch=( (queryProduct="") || 
                       ($$$UPPER(product)="ALL")) ||
                       //next bit lets us do a partial match
                       (##class(DocBook.Utils).StartsWith(queryProduct,product) )

    set bookmatch=((queryBook="") || ($$$UPPER(topid)=$$$UPPER(queryBook)))
    set tagmatch=((queryTag="") || ..HaveMatchingTag(blockid,queryTag))
    
    if (productmatch && bookmatch && tagmatch ) {
	     quit 1
    } elseif ((queryBook'="") && bookmatch && tagmatch) {
        //this branch means if the query specifies the book, just ignore product
	     quit 1
    } else {
	    quit 0
    }
]]></Implementation>
</Method>

<Method name="GetIsSearchable">
<ClassMethod>1</ClassMethod>
<FormalSpec>record:DocBook.block</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
    set classname=record.%ClassName()
    if ((classname="set") || (classname="book") || (classname="anchor") || (classname="refname") || (classname="remark")) {
	    quit 0
    }

	set id=record.%Id()
	set NearestLevel1=..GetIdAtLevel(id,1)
	
	if (record.title'="") {
		set text=record.title
	} else {
		set text=record.content
	}
	
	//remove <ulink> and </ulink> and text between them
    set text = ..RemoveTag(text,"<ulink>",1)
    //remove <link> and </link> and text between them
    set text = ..RemoveTag(text,"<link>",1)
    //remove <graphic> and </graphic> and text between them
    set text = ..RemoveTag(text,"<graphic>",1)
    set text = $ZSTRIP(text,"<>w")
    if ($LENGTH(text)>=$$$MINCHARPERRESULT) {
		    quit 1
    } else {
	    quit 0
    }
]]></Implementation>
</Method>

<Method name="RemoveTag">
<Description>
If removeContent is true, remove the text between start and end tags</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>text,tag,removeContent:%Boolean=0</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	// AAH916 --added this method
	
	set tagEnd = $e(tag,1)_"/"_$e(tag,2,*)

	if 'removeContent {
		for {
			set tagStart=$e(tag,1,*-1)
			set pos1 = $f(text,tagStart)
			quit:pos1=0
			set pos2 = $f(text,">",pos1)
			set text = $e(text,1,pos1-($l(tagStart)+1))_$e(text,pos2,*)
		}
		set text = $replace(text,tagEnd,"")
	} else {
		for {
			set tagStart=$e(tag,1,*-1)
			set pos1 = $f(text,tagStart)
			quit:pos1=0
			set pos2 = $f(text,tagEnd,pos1)
			set text = $e(text,1,pos1-($l(tagStart)+1))_$e(text,pos2,*)
		}
	
	}
	
	quit text
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%CacheStorage</Type>
<DataLocation>^DocBook.blockD</DataLocation>
<DefaultData>blockDefaultData</DefaultData>
<IdLocation>^DocBook.blockD</IdLocation>
<IndexLocation>^DocBook.blockI</IndexLocation>
<StreamLocation>^DocBook.blockS</StreamLocation>
<ExtentSize>267665</ExtentSize>
<Data name="Content">
<Attribute>content</Attribute>
<Structure>node</Structure>
<Subscript>"content"</Subscript>
</Data>
<Data name="Render">
<Attribute>renderedContent</Attribute>
<Structure>node</Structure>
<Subscript>"render"</Subscript>
</Data>
<Data name="blockDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>blockpos</Value>
</Value>
<Value name="3">
<Value>book</Value>
</Value>
<Value name="4">
<Value>component</Value>
</Value>
<Value name="5">
<Value>container</Value>
</Value>
<Value name="6">
<Value>id</Value>
</Value>
<Value name="7">
<Value>lang</Value>
</Value>
<Value name="8">
<Value>lastchange</Value>
</Value>
<Value name="9">
<Value>role</Value>
</Value>
<Value name="10">
<Value>sourcefile</Value>
</Value>
<Value name="11">
<Value>sourcetime</Value>
</Value>
<Value name="12">
<Value>status</Value>
</Value>
<Value name="13">
<Value>title</Value>
</Value>
<Value name="14">
<Value>attrgiven</Value>
</Value>
<Value name="15">
<Value>tagattrs</Value>
</Value>
<Value name="16">
<Value>remap</Value>
</Value>
<Value name="17">
<Value>product</Value>
</Value>
<Value name="18">
<Value>extraTags</Value>
</Value>
<Value name="19">
<Value>Rank</Value>
</Value>
<Value name="20">
<Value>TopId</Value>
</Value>
<Value name="21">
<Value>NearestLevel1</Value>
</Value>
<Value name="22">
<Value>Searchable</Value>
</Value>
</Data>
<Property name="%%CLASSNAME">
<Selectivity>1.4802%</Selectivity>
<OutlierSelectivity>.467139:"~DocBook.container~DocBook.para~"</OutlierSelectivity>
<AverageFieldSize>33.2</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.58</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.0709%</Selectivity>
<AverageFieldSize>5.39</AverageFieldSize>
</Property>
<Property name="NearestLevel2">
<Selectivity>0.0312%</Selectivity>
<AverageFieldSize>5.52</AverageFieldSize>
</Property>
<Property name="NearestLevel3">
<Selectivity>0.0170%</Selectivity>
<AverageFieldSize>5.52</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>3.0468%</Selectivity>
<OutlierSelectivity>.36018:500</OutlierSelectivity>
<AverageFieldSize>3.61</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0196%</Selectivity>
<OutlierSelectivity>.887242:</OutlierSelectivity>
<AverageFieldSize>2.53</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>49.9999%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>0.6582%</Selectivity>
<OutlierSelectivity>.052191:"RCOS"</OutlierSelectivity>
<AverageFieldSize>4.54</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>1.6506%</Selectivity>
<OutlierSelectivity>.438789:0</OutlierSelectivity>
<AverageFieldSize>1.05</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>0.6819%</Selectivity>
<OutlierSelectivity>.052191:47</OutlierSelectivity>
<AverageFieldSize>2.15</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.0749%</Selectivity>
<AverageFieldSize>5.29</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.0014%</Selectivity>
<AverageFieldSize>5.55</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0017%</Selectivity>
<OutlierSelectivity>.41817:</OutlierSelectivity>
<AverageFieldSize>140.36</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>1.4525%</Selectivity>
<OutlierSelectivity>.33183:</OutlierSelectivity>
<AverageFieldSize>7.38</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.79</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.2238%</Selectivity>
<OutlierSelectivity>.967784:</OutlierSelectivity>
<AverageFieldSize>.19</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>0.9901%</Selectivity>
<AverageFieldSize>18.71</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>4.6177%</Selectivity>
<OutlierSelectivity>.861469:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.46</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0004%</Selectivity>
<OutlierSelectivity>.999356:</OutlierSelectivity>
<AverageFieldSize>.01</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0004%</Selectivity>
<OutlierSelectivity>.969072:</OutlierSelectivity>
<AverageFieldSize>47.95</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0004%</Selectivity>
<OutlierSelectivity>.999356:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.1713%</Selectivity>
<AverageFieldSize>12.62</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>5.6057%</Selectivity>
<OutlierSelectivity>.32732:"2019-09-22 19:31:30"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0045%</Selectivity>
<OutlierSelectivity>.999549:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.0950%</Selectivity>
<OutlierSelectivity>.83634:</OutlierSelectivity>
<AverageFieldSize>8.6</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0196%</Selectivity>
<OutlierSelectivity>.887242:</OutlierSelectivity>
<AverageFieldSize>2.58</AverageFieldSize>
</Property>
<SQLMap name="$block">
<BlockCount>-8</BlockCount>
</SQLMap>
<SQLMap name="IDKEY">
<BlockCount>-63052</BlockCount>
</SQLMap>
<SQLMap name="IdIndex">
<BlockCount>-8144</BlockCount>
</SQLMap>
<SQLMap name="NearestLevel1Idx">
<BlockCount>-424</BlockCount>
</SQLMap>
<SQLMap name="NearestLevel2Idx">
<BlockCount>-36</BlockCount>
</SQLMap>
<SQLMap name="NearestLevel3Idx">
<BlockCount>-28</BlockCount>
</SQLMap>
<SQLMap name="RankIdx">
<BlockCount>-132</BlockCount>
</SQLMap>
<SQLMap name="SearchableIdx">
<BlockCount>-40</BlockCount>
</SQLMap>
<SQLMap name="TopIdIdx">
<BlockCount>-7248</BlockCount>
</SQLMap>
<SQLMap name="bookIndex">
<BlockCount>-292</BlockCount>
</SQLMap>
<SQLMap name="bookPos">
<BlockCount>-7516</BlockCount>
</SQLMap>
<SQLMap name="componentIndex">
<BlockCount>-420</BlockCount>
</SQLMap>
<SQLMap name="containerIndex">
<BlockCount>-1364</BlockCount>
</SQLMap>
<SQLMap name="contentIdx">
<BlockCount>-5528</BlockCount>
</SQLMap>
<SQLMap name="extraTagsIdx">
<BlockCount>-8372</BlockCount>
</SQLMap>
<SQLMap name="productIdx">
<BlockCount>-7716</BlockCount>
</SQLMap>
<SQLMap name="titleIdx">
<BlockCount>-348</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.book">
<Description>
This class represents a book.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75360.298309</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Property name="set">
<Type>set</Type>
<Cardinality>one</Cardinality>
<Inverse>books</Inverse>
<Relationship>1</Relationship>
<SqlFieldName>dbset</SqlFieldName>
</Property>

<Index name="setIdx">
<Type>bitmap</Type>
<Properties>set</Properties>
</Index>

<Method name="GetBannerInfo">
<Internal>1</Internal>
<FormalSpec>info:DocBook.UI.BannerInfo</FormalSpec>
<Implementation><![CDATA[
	Set info.title = $$$T("Contents")
	Set info.booktitle = ..title
	Set info.chap = ""
	Set info.prev = ""
	Set info.next = ""
]]></Implementation>
</Method>

<Method name="HTMLRender">
<Internal>1</Internal>
<Implementation><![CDATA[

	Set chapno = 1

	Set id = ..%Id()

	&html<<TABLE CELLPADDING="0" CELLSPACING="0" BORDER="0" WIDTH="100%">>
	&html<<TR>>
	&html<<TD ALIGN="RIGHT" WIDTH="20%">&nbsp;</TD>>
	&html<<TD><DIV CLASS="TOC"><B>>
	Write $$$T("Contents")
	&html<</B></DIV><HR></TD>>
	&html<</TR>>

	Do ..ShowComponents(id)

	&html<</TABLE>>
]]></Implementation>
</Method>

<Method name="GetGotoList">
<Description>
 Provide info for the goto list </Description>
<Internal>1</Internal>
<FormalSpec><![CDATA[&gtl:cdata]]></FormalSpec>
<Implementation><![CDATA[

	Set id = ..%Id()

	// list all of the components
	&sql(DECLARE G1Cursor CURSOR FOR
		SELECT ID,blockid, title
		INTO :cid, :key, :title
		FROM component
		WHERE book = :id
		ORDER BY container, blockpos
	)

	&sql(OPEN G1Cursor)
	&sql(FETCH G1Cursor)

	Set num = 1
	While (SQLCODE = 0) {
		Set gtl(num) = $LB(key,title)
		&sql(FETCH G1Cursor)
		Set num = num + 1
	}
	&sql(CLOSE G1Cursor)
	
	Quit
]]></Implementation>
</Method>

<Method name="ShowComponents">
<Description>
Show the list of components for this book</Description>
<Internal>1</Internal>
<FormalSpec>ctrid:id</FormalSpec>
<Private>1</Private>
<Implementation><![CDATA[
	New %ISCDBCounter
	Set %ISCDBCounter = $INCREMENT(^||DocBook.CursorCount)
	Kill %DocBookCursor(%ISCDBCounter)
#EXECUTE Set %msqlvar = "%DocBookCursor(%ISCDBCounter"

	Set lastcls = ""

	// loop over components
	&sql(DECLARE CompCursor CURSOR FOR
		SELECT ID,blockid, title, subtitle, x__classname
		INTO :compid,:key, :title, :desc, :cls
		FROM component
		WHERE container = :ctrid
		ORDER BY blockpos
	)

	&sql(OPEN CompCursor)
	&sql(FETCH CompCursor)

	While (SQLCODE = 0) {
		// figure out what kind of component this is
		If (cls [ "chapter") {
			Set no(cls) = $G(no(cls),0) + 1
			Set no = no(cls)
			Set label = $$$T("Chapter ") _ no
		}
		ElseIf (cls [ "part") {
			Set no(cls) = $G(no(cls),0) + 1
			Set no = no(cls)
			Set label = $$$T("Part ") _ ..Roman(no)
		}
		ElseIf (cls [ "appendix") {
			Set no(cls) = $G(no(cls),0) + 1
			Set no = ..Letter(no(cls))
			Set label = $$$T("Appendix ") _ no
		}
		ElseIf (cls [ "glossary") {
			Set no(cls) = $G(no(cls),0) + 1
			Set no = ..Letter(no(cls))
			Set label = $$$T("Glossary ") _ no
		}
		ElseIf (cls [ "preface") {
			Set no(cls) = $G(no(cls),0) + 1
			Set no = ..Letter(no(cls))
			Set label = $$$T("Preface ") // !!!
		}
		ElseIf (cls [ "reference") {
			Set no(cls) = $G(no(cls),0) + 1
			Set no = ..Letter(no(cls))
			Set label = $$$T("Reference ") _ no
		}
		Else {
			Set no = ""
			Set label = ""
		}

		If ((lastcls '= "") && (lastcls '= cls)) {
			// draw a ruler between different types of components
			&html<<TR><TD ALIGN="RIGHT" WIDTH="20%">&nbsp;</TD><TD><HR></TD></TR>>
		}

		Set lastcls = cls
		
		&html<<TR><TD ALIGN="RIGHT" WIDTH="20%"><FONT SIZE="-1">>

		&html<#(label)#:&nbsp;</FONT></TD><TD><DIV CLASS="TOC">>
		
		If (cls [ "part") {
			&html<<DIV CLASS="Set">#(title)#</DIV>>
		}
		Else {
			&html<<A CLASS="TOCChapter" TITLE='#(desc)#' HREF='DocBook.UI.Page.cls?KEY=#($ZCVT(key,"O","URL"))#'>#(title)#</A>>
		}

		&html<</DIV>
			</TD></TR>
		>
		&html<<TR><TD>&nbsp;</TD><TD>>
		If (cls [ "reference") {
			Do ..ShowRefEntries(compid)
		}
		ElseIf (cls [ "part") {
			Do ..ShowComponents(compid)
		}
		Else {
			Do ..ShowSect1(compid,no)
		}
	
		&html<</TD></TR>>

		&sql(FETCH CompCursor)
	}
	&sql(CLOSE CompCursor)
#EXECUTE Kill %msqlvar

	Quit
]]></Implementation>
</Method>

<Method name="Letter">
<Description>
Convert number to letter label</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>val:%Integer</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	// this handles up to 26 * 26 items

	Set lo = val - 1
	Set hi = lo \ 26
	Set lo = (lo # 26) + 1
	Quit:(hi = 0) $C(64 + lo)
	Quit ($C(64 + hi) _ $C(64 + lo))
]]></Implementation>
</Method>

<Method name="Roman">
<Description>
Convert number to Roman numeral (incomplete)</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>val:%Integer</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	// this is only used for Part #s, so an incomplete
	// implementation is sufficient.
	If (val = 1) {
		Quit "I"
	}
	ElseIf (val = 2) {
		Quit "II"
	}
	ElseIf (val = 3) {
		Quit "III"
	}
	ElseIf (val = 4) {
		Quit "IV"
	}
	ElseIf (val = 5) {
		Quit "V"
	}
	ElseIf (val = 6) {
		Quit "VI"
	}
	ElseIf (val = 7) {
		Quit "VII"
	}
	ElseIf (val = 8) {
		Quit "VIII"
	}
	ElseIf (val = 9) {
		Quit "IX"
	}
	ElseIf (val = 10) {
		Quit "X"
	}
	ElseIf (val = 11) {
		Quit "XI"
	}
	ElseIf (val = 12) {
		Quit "XII"
	}

	Quit ""
]]></Implementation>
</Method>

<Method name="ShowChapters">
<Description>
Show the list of chapters for this container</Description>
<Internal>1</Internal>
<FormalSpec>ctrid:id</FormalSpec>
<Private>1</Private>
<Implementation><![CDATA[

	Set chapno = 1

	// loop over chapters	
	&sql(DECLARE ChapCursor CURSOR FOR
		SELECT ID,blockid, title, subtitle
		INTO :chapid,:key, :title, :desc
		FROM chapter
		WHERE container = :ctrid
		ORDER BY blockpos
	)

	&sql(OPEN ChapCursor)
	&sql(FETCH ChapCursor)

	While (SQLCODE = 0) {
		&html<<TR><TD ALIGN="RIGHT" WIDTH="20%"><FONT SIZE="-1">>

		&html<Chapter #(chapno)#:&nbsp;</FONT></TD><TD><DIV CLASS="TOC">>
		
		&html<<A CLASS="TOCChapter" TITLE='#(desc)#' HREF='DocBook.UI.Page.cls?KEY=#($ZCVT(key,"O","URL"))#'>#(title)#</A>>

		&html<</DIV>
			</TD></TR>
		>
		&html<<TR><TD>&nbsp;</TD><TD>>
		Do ..ShowSect1(chapid,chapno)
	
		&html<</TD></TR>>

		Set chapno = chapno + 1
		&sql(FETCH ChapCursor)
	}
	&sql(CLOSE ChapCursor)
]]></Implementation>
</Method>

<Method name="ShowReferences">
<Description>
Show the list of references for this container</Description>
<Internal>1</Internal>
<FormalSpec>ctrid:id</FormalSpec>
<Private>1</Private>
<Implementation><![CDATA[

	Set chapno = 1
	Set ruler = 1 // !!!

	// loop over references
	&sql(DECLARE RefCursor CURSOR FOR
		SELECT ID, blockid, title, subtitle
		INTO :refid, :key, :title, :desc
		FROM reference
		WHERE container = :ctrid
		ORDER BY blockpos
	)

	&sql(OPEN RefCursor)
	&sql(FETCH RefCursor)

	While (SQLCODE = 0) {
		If (ruler = 0) {
			// draw ruler before references
			&html<<TR><TD ALIGN="RIGHT" WIDTH="20%">&nbsp;</TD><TD><HR></TD></TR>>
			Set ruler = 1
		}

		&html<<TR><TD ALIGN="RIGHT" WIDTH="20%"><FONT SIZE="-1">>

		&html<Reference:</FONT></TD><TD><DIV CLASS="TOC">>

		&html<<A CLASS="TOCChapter" TITLE='#(desc)#'>#(title)#</A>>
		
		&html<</DIV>
			</TD></TR>
		>
		&html<<TR><TD>&nbsp;</TD><TD>>
		// have the reference display its entries
		Do ..ShowRefEntries(refid)	
		&html<</TD></TR>>

		Set chapno = chapno + 1
		&sql(FETCH RefCursor)
	}
	&sql(CLOSE RefCursor)
]]></Implementation>
</Method>

<Method name="ShowAppendices">
<Description>
Show the list of appendices for this container</Description>
<Internal>1</Internal>
<FormalSpec>ctrid:id</FormalSpec>
<Private>1</Private>
<Implementation><![CDATA[

	Set chapno = 1
	Set ruler = 0

	// loop over appendices
	&sql(DECLARE AppCursor CURSOR FOR
		SELECT ID,blockid, title, subtitle
		INTO :chapid,:key, :title, :desc
		FROM appendix
		WHERE container = :ctrid
		ORDER BY blockpos
	)

	&sql(OPEN AppCursor)
	&sql(FETCH AppCursor)

	While (SQLCODE = 0) {
		Set desc = ##class(DocBook.Renderer).FilterText(desc)
		If (ruler = 0) {
			// draw ruler before appendices
			&html<<TR><TD ALIGN="RIGHT" WIDTH="20%">&nbsp;</TD><TD><HR></TD></TR>>
			Set ruler = 1
		}

		&html<<TR><TD ALIGN="RIGHT" WIDTH="20%"><FONT SIZE="-1">>

		&html<Appendix #($C(64+chapno))#:&nbsp;</FONT></TD><TD><DIV CLASS="TOC">>
		
		&html<<A CLASS="TOCChapter" TITLE='#(desc)#' HREF='DocBook.UI.Page.cls?KEY=#($ZCVT(key,"O","URL"))#'>#(title)#</A>>

		&html<</DIV>
			</TD></TR>
		>
		&html<<TR><TD>&nbsp;</TD><TD>>
		Do ..ShowSect1(chapid,chapno)
	
		&html<</TD></TR>>

		Set chapno = chapno + 1
		&sql(FETCH AppCursor)
	}
	&sql(CLOSE AppCursor)
]]></Implementation>
</Method>

<Method name="ShowSect1">
<Description>
display the level 1 sections for the given chapter</Description>
<Internal>1</Internal>
<FormalSpec>id:id,label:dbint</FormalSpec>
<Private>1</Private>
<Implementation><![CDATA[

	Set num = 1

	// list all of the sect1 blocks
	&sql(DECLARE S1Cursor CURSOR FOR
		SELECT ID,blockid, title, component->blockid
		INTO :sid,:key, :title, :chap
		FROM sect1
		WHERE container = :id
	)

	&sql(OPEN S1Cursor)
	&sql(FETCH S1Cursor)

	Write "<MENU>",!
	While (SQLCODE = 0) {
		&html<<LI><A CLASS="TOCSect1" HREF='DocBook.UI.Page.cls?KEY=#($ZCVT(chap,"O","URL"))##("#"_key)#'>#(label _ "." _ num)# #(title)#</A></LI>>

		Do ..ShowSect2(sid,label _ "." _ num)
		&sql(FETCH S1Cursor)
		Set num = num + 1
	}
	Write "</MENU>",!

	&sql(CLOSE S1Cursor)
]]></Implementation>
</Method>

<Method name="ShowSect2">
<Description>
display the level 2 sections for the given chapter</Description>
<Internal>1</Internal>
<FormalSpec>id:id,label:cdata</FormalSpec>
<Private>1</Private>
<Implementation><![CDATA[

	Set num = 1

	// list all of the sect2 blocks
	&sql(DECLARE S2Cursor CURSOR FOR
		SELECT ID,blockid, title, component->blockid
		INTO :sid,:key, :title, :chap
		FROM sect2
		WHERE container = :id
	)

	&sql(OPEN S2Cursor)
	&sql(FETCH S2Cursor)

	Write "<MENU>",!

	While (SQLCODE = 0) {
		&html<<LI><A CLASS="TOCSect2" HREF='DocBook.UI.Page.cls?KEY=#($ZCVT(chap,"O","URL"))##("#"_key)#'>#(label _ "." _ num)# #(title)#</A></LI>>
		&sql(FETCH S2Cursor)
		Set num = num + 1
	}

	Write "</MENU>",!

	&sql(CLOSE S2Cursor)
]]></Implementation>
</Method>

<Method name="ShowRefEntries">
<Internal>1</Internal>
<FormalSpec>id:id</FormalSpec>
<Implementation><![CDATA[

	&sql(DECLARE RECursor CURSOR FOR
		SELECT %ID,blockid, refmeta_refentrytitle
		INTO :eid,:key, :title
		FROM refentry
		WHERE container = :id
		ORDER BY blockpos
	)

	&sql(OPEN RECursor)
	&sql(FETCH RECursor)

	Set last = ""

	// No longer emitted
	// <TABLE CELLPADDING="5" CELLSPACING="0" BORDER="0" WIDTH="100%">

	Write "<MENU>",!
	While (SQLCODE = 0) {
		
		// find refpurpose for this entry
		Set purpose = ""
		&sql(SELECT content INTO :purpose FROM refpurpose WHERE component = :eid)
		
		// look at first letter of string
		Set c = $ZCONVERT($E(title,1,1), "U")
		If ((c '= last)) {
			// special banner for start of new letter
			// No longer emitted
			// <TR><TD ALIGN="LEFT" CLASS="Letter">&#151; #(c)# &#151;</TD></TR>
		}
		Set last = c
		
		Set href = "DocBook.UI.Page.cls?KEY=" _ $ZCVT(key,"O","URL")
		
		//!!! (make it easier to find missing titles)
		Set:title="" title = "[" _ key _ "] (untitled)"
		
		Set purpose = ##class(DocBook.Renderer).FilterText(purpose)

		// add mdash
		Set:purpose'="" purpose = "&nbsp;&#151;&nbsp;" _ purpose
		
		&html<<LI><A CLASS="TOCRef" HREF='#(href)#'>#(title)#</A><SPAN CLASS="TOCrefpurpose">#(purpose)#</SPAN></LI>>

		// no longer emitted
		// <TR><TD ALIGN="LEFT"><DIV CLASS="TOC"><A CLASS="TOCRef" HREF='#(href)#'>#(title)#</A></DIV></TD></TR>
		
		&sql(FETCH RECursor)
	}
	Write "</MENU>",!

	// No longer emitted
	// </TABLE>
	&sql(CLOSE RECursor)
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>bookDefaultData</DefaultData>
<ExtentSize>151</ExtentSize>
<Data name="bookDefaultData">
<Subscript>"book"</Subscript>
<Value name="1">
<Value>set</Value>
</Value>
</Data>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>32</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>2.36</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.6623%</Selectivity>
<AverageFieldSize>2.36</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>3.79</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.6623%</Selectivity>
<AverageFieldSize>30.09</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>0.6623%</Selectivity>
<AverageFieldSize>4.39</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>6.2500%</Selectivity>
<AverageFieldSize>1.14</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>5.2632%</Selectivity>
<AverageFieldSize>2.2</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>1.3961%</Selectivity>
<OutlierSelectivity>.483444:</OutlierSelectivity>
<AverageFieldSize>6.42</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>4.39</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>4.1667%</Selectivity>
<AverageFieldSize>1.33</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.7857%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>10.1545%</Selectivity>
<OutlierSelectivity>.695364:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.98</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.6623%</Selectivity>
<AverageFieldSize>12.38</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="set">
<Selectivity>5.2632%</Selectivity>
<AverageFieldSize>2.2</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.6623%</Selectivity>
<AverageFieldSize>8.39</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>7.6923%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>1.9868%</Selectivity>
<OutlierSelectivity>.980132:</OutlierSelectivity>
<AverageFieldSize>.12</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.6667%</Selectivity>
<AverageFieldSize>89.16</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.6623%</Selectivity>
<AverageFieldSize>109.23</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.6623%</Selectivity>
<AverageFieldSize>33.65</AverageFieldSize>
</Property>
<SQLMap name="$book">
<BlockCount>-4</BlockCount>
</SQLMap>
<SQLMap name="setIdx">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.bookinfo">
<Description>
The instantiation of a book information block.  
This is a no-op as far as editing goes but is here because it can contain
sub-elements all of whose data must be ignored.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.containerNull</Super>
<TimeChanged>65278,75360.436152</TimeChanged>
<TimeCreated>59241,40474</TimeCreated>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>26</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>58</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.96</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>3.8462%</Selectivity>
<AverageFieldSize>5.96</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>3.62</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>3.8462%</Selectivity>
<AverageFieldSize>3.88</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>3.8462%</Selectivity>
<AverageFieldSize>2.54</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>3.8462%</Selectivity>
<AverageFieldSize>2.54</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>10.0000%</Selectivity>
<AverageFieldSize>13.19</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>11.85</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>13.4615%</Selectivity>
<OutlierSelectivity>.730769:"Cache"</OutlierSelectivity>
<AverageFieldSize>6.38</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>3.8462%</Selectivity>
<AverageFieldSize>7.88</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>11.1111%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$bookinfo">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.caution">
<Description>
A caution admonition.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75360.585874</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderPostChildren">
<Internal>1</Internal>
<Implementation><![CDATA[	Write "</DIV>",!
]]></Implementation>
</Method>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[	Write "<DIV CLASS=""caution""><SPAN CLASS=""caution"">", $$$T("Caution:"), "</SPAN> ",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>189</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>35</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.77</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.9259%</Selectivity>
<AverageFieldSize>5.67</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>3.2077%</Selectivity>
<OutlierSelectivity>.486772:500</OutlierSelectivity>
<AverageFieldSize>3.51</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>1.8342%</Selectivity>
<OutlierSelectivity>.174603:"GCAS"</OutlierSelectivity>
<AverageFieldSize>4.31</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>5.0642%</Selectivity>
<OutlierSelectivity>.291005:1</OutlierSelectivity>
<AverageFieldSize>1.04</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>1.8342%</Selectivity>
<OutlierSelectivity>.174603:76</OutlierSelectivity>
<AverageFieldSize>2.03</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.9259%</Selectivity>
<AverageFieldSize>5.67</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.5348%</Selectivity>
<AverageFieldSize>5.77</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>3.5714%</Selectivity>
<OutlierSelectivity>.428571:</OutlierSelectivity>
<AverageFieldSize>5.44</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.05</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>3.1746%</Selectivity>
<OutlierSelectivity>.904762:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.7857%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>9.5238%</Selectivity>
<OutlierSelectivity>.904762:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.29</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>1.0000%</Selectivity>
<AverageFieldSize>15.23</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>5.4422%</Selectivity>
<OutlierSelectivity>.619048:"2019-09-22 19:31:30"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$caution">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.cdata">
<Description>
A simple datatype corresponding to a CDATA string</Description>
<ClassType>datatype</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Parameter name="COLLATION">
<Description>
Make id values case-insensitive</Description>
<Default>SQLUPPER</Default>
</Parameter>

<Parameter name="MAXLEN">
<Default>50</Default>
</Parameter>
</Class>


<Class name="DocBook.chapter">
<Description>
This class represents a DocBook chapter.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.component</Super>
<TimeChanged>65278,75360.746493</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="GetBannerInfo">
<Internal>1</Internal>
<FormalSpec>info:DocBook.UI.BannerInfo</FormalSpec>
<Implementation><![CDATA[
	Set info.title = ..title
	
	If (..book '= "") {
		Set info.booktitle = ..book.title
	}
	Else {
		Set info.booktitle = ""
	}

	//!!! this is not really the chapter no!
	Set info.chap = ..blockpos + 1
	
	// find prev/next chapter
	Do ..GetNextPrevInfo(info)
]]></Implementation>
</Method>

<Method name="GetGotoList">
<Internal>1</Internal>
<FormalSpec><![CDATA[&gtl:cdata]]></FormalSpec>
<Implementation><![CDATA[

	Set id = ..%Id()

	// list all of the sect1 blocks
	&sql(DECLARE G1Cursor CURSOR FOR
		SELECT ID,blockid, title
		INTO :sid, :key, :title
		FROM sect1
		WHERE container = :id
	)

	&sql(OPEN G1Cursor)
	&sql(FETCH G1Cursor)

	Set num = 1
	While (SQLCODE = 0) {
		Set gtl(num) = $LB("#" _ key,title)
		&sql(FETCH G1Cursor)
		Set num = num + 1
	}

	&sql(CLOSE G1Cursor)
	
	Quit
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>1773</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>0.0564%</Selectivity>
<OutlierSelectivity>.994444:"~DocBook.container~DocBook.component~DocBook.chapter~"</OutlierSelectivity>
<AverageFieldSize>53</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.78</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.0564%</Selectivity>
<AverageFieldSize>5.78</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>14.2857%</Selectivity>
<AverageFieldSize>3.83</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0863%</Selectivity>
<AverageFieldSize>25</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>0.0564%</Selectivity>
<OutlierSelectivity>.994444:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>1.3046%</Selectivity>
<AverageFieldSize>4.21</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>3.0630%</Selectivity>
<AverageFieldSize>1.37</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>1.3046%</Selectivity>
<AverageFieldSize>2.44</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.0564%</Selectivity>
<OutlierSelectivity>.994444:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.8381%</Selectivity>
<AverageFieldSize>4.15</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0564%</Selectivity>
<OutlierSelectivity>.994444:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>3.0155%</Selectivity>
<OutlierSelectivity>.230159:</OutlierSelectivity>
<AverageFieldSize>14.8</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>16.34</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0564%</Selectivity>
<OutlierSelectivity>.994444:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>5.2573%</Selectivity>
<AverageFieldSize>1.14</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>2.2447%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>10.3174%</Selectivity>
<OutlierSelectivity>.793651:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.69</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0564%</Selectivity>
<OutlierSelectivity>.994444:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0564%</Selectivity>
<OutlierSelectivity>.994444:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0564%</Selectivity>
<OutlierSelectivity>.994444:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>1.0806%</Selectivity>
<AverageFieldSize>9.82</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>9.0909%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0564%</Selectivity>
<OutlierSelectivity>.994444:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.0564%</Selectivity>
<OutlierSelectivity>.994444:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.0779%</Selectivity>
<AverageFieldSize>32.06</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0863%</Selectivity>
<AverageFieldSize>26.01</AverageFieldSize>
</Property>
<SQLMap name="$chapter">
<BlockCount>-16</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.component">
<Description>
This class represents the chapter-like elements of a book.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75360.94929</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="GetNextPrevInfo">
<Description>
 Find the next and prev component to this one</Description>
<Internal>1</Internal>
<FormalSpec>info:DocBook.UI.BannerInfo</FormalSpec>
<Implementation><![CDATA[
	If (..book = "") {
		Quit
	}
	
	// find prev/next component

	Set ctrid = ..container.%Id()
	Set pos = ..blockpos
	
	// too inefficient!
	//SELECT blockid INTO :prev
	//	FROM component
	//	WHERE (book = :bid) AND (blockpos < :pos)
	//	ORDER BY blockpos DESC

	// assume all components have sequential blockpos
	Set ppos = pos - 1
	&sql(SELECT blockid INTO :prev
		FROM component
		WHERE (container = :ctrid) AND (blockpos = :ppos)
	)
		
	If (SQLCODE = 0) {
		Set info.prev = prev
	}

	&sql(SELECT blockid INTO :next
		FROM component
		WHERE (container = :ctrid) AND (blockpos > :pos)
		ORDER BY blockpos)
		
	If (SQLCODE = 0) {
		Set info.next = next
	}
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>4246</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>14.2857%</Selectivity>
<AverageFieldSize>53.62</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.59</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.0359%</Selectivity>
<AverageFieldSize>5.43</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>11.1111%</Selectivity>
<AverageFieldSize>3.7</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0704%</Selectivity>
<AverageFieldSize>18.19</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>3.5897%</Selectivity>
<OutlierSelectivity>.964103:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>1.4766%</Selectivity>
<AverageFieldSize>4.31</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>1.4766%</Selectivity>
<AverageFieldSize>1.52</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>1.4766%</Selectivity>
<AverageFieldSize>2.23</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.0236%</Selectivity>
<OutlierSelectivity>.979487:</OutlierSelectivity>
<AverageFieldSize>.11</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.6944%</Selectivity>
<AverageFieldSize>4.36</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0359%</Selectivity>
<OutlierSelectivity>.99641:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>2.6926%</Selectivity>
<OutlierSelectivity>.215385:</OutlierSelectivity>
<AverageFieldSize>10.34</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>15.32</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0359%</Selectivity>
<OutlierSelectivity>.99641:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>5.5555%</Selectivity>
<AverageFieldSize>1.1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.3709%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>3.8460%</Selectivity>
<OutlierSelectivity>.923077:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.26</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0359%</Selectivity>
<OutlierSelectivity>.99641:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0359%</Selectivity>
<OutlierSelectivity>.99641:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0359%</Selectivity>
<OutlierSelectivity>.99641:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.4593%</Selectivity>
<AverageFieldSize>11.95</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>5.4871%</Selectivity>
<OutlierSelectivity>.451282:"2019-09-22 19:31:34"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0359%</Selectivity>
<OutlierSelectivity>.99641:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.0239%</Selectivity>
<OutlierSelectivity>.989744:</OutlierSelectivity>
<AverageFieldSize>.63</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.0516%</Selectivity>
<AverageFieldSize>30.39</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0704%</Selectivity>
<AverageFieldSize>18.8</AverageFieldSize>
</Property>
<SQLMap name="$component">
<BlockCount>-16</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.container">
<Description>
A container is a specialized block that can contain one or more blocks.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.block</Super>
<TimeChanged>65278,75362.71286</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Property name="lastChildPos">
<Description>
Blockpos of last child in container</Description>
<Type>dbint</Type>
<InitialExpression>0</InitialExpression>
</Property>

<Property name="subtitle">
<Description>
SubTitle for this container</Description>
<Type>cdata</Type>
</Property>

<Method name="%OnDelete">
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>oid:%ObjectIdentity</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    // delete all of our dependents
    Do ..DeleteDependents($LG(oid,1))
    
    Quit $$$OK
]]></Implementation>
</Method>

<Method name="DeleteDependents">
<Description>
Delete all dependent blocks</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<FormalSpec>cid:cdata,display:%Boolean=0</FormalSpec>
<Implementation><![CDATA[
    New %ISCDBCounter
    Set %ISCDBCounter = $INCREMENT(^||DocBook.CursorCount)
    Kill %DocBookCursor(%ISCDBCounter)
#EXECUTE Set %msqlvar = "%DocBookCursor(%ISCDBCounter"

    Set bid = ""
    
    // find child blocks
    &sql(DECLARE DEL1 CURSOR FOR 
         SELECT ID
         INTO :bid
         FROM block
         WHERE container = :cid
    )

    &sql(OPEN DEL1)
    &sql(FETCH DEL1)
    
    While (SQLCODE = 0) {
        Write:display "-"
        // Use concurrency of 0!!!
        Do ##class(DocBook.block).%DeleteId(bid,0)
        &sql(FETCH DEL1)
    }

    &sql(CLOSE DEL1)
#EXECUTE Kill %msqlvar
    
    Quit $$$OK
]]></Implementation>
</Method>

<Method name="GetGotoList">
<Description>
Get list of sections in this container:
This is used to create the "goto" list dropdown
gtl is an array passed by reference</Description>
<Internal>1</Internal>
<FormalSpec><![CDATA[&gtl:cdata]]></FormalSpec>
<Implementation><![CDATA[
    // override in subclasses
    Quit
]]></Implementation>
</Method>

<Method name="HTMLRender">
<Description>
render this container's children</Description>
<Internal>1</Internal>
<Implementation><![CDATA[
    // if this block has a recognized status value, then wrap
    // it with the appropriate DIV.
    // Does not work for netscape

    Set statusmark = ""
    If ((..status'="")&&%ie&&'%ie6)
    {
        If ($TRANSLATE(..status, "L") [ "draft")
        {
            Set statusmark = "draft"
        }
        If ($TRANSLATE(..status, "L") [ "broken")
        {
            Set statusmark = "broken"
        }
    }
    Write:(statusmark'="") "<DIV CLASS=""",statusmark,""">"
    Do ..HTMLRenderPreChildren()
    Do ..HTMLRenderChildren()
    Do ..HTMLRenderPostChildren()
    Write:(statusmark'="") "</DIV>"
    
    // counter keeps track of when to flush
    If ($D(%counter) & $D(%response)) {
        Set %counter = %counter + 1
        If ((%counter # 5) = 0) {
            //Do %response.Flush()
        }
    }
]]></Implementation>
</Method>

<Method name="HTMLRenderPreChildren">
<Description>
render any HTML before children</Description>
<Internal>1</Internal>
<Implementation><![CDATA[   // override in subclass
]]></Implementation>
</Method>

<Method name="HTMLRenderPostChildren">
<Description>
render any HTML after children</Description>
<Internal>1</Internal>
<Implementation><![CDATA[   // override in subclass
]]></Implementation>
</Method>

<Method name="HTMLRenderChildren">
<Description>
Render this container's children as HTML.</Description>
<Internal>1</Internal>
<Implementation><![CDATA[
    New %ISCDBCounter
    Set %ISCDBCounter = $INCREMENT(^||DocBook.CursorCount)
    Kill %DocBookCursor(%ISCDBCounter)
#EXECUTE Set %msqlvar = "%DocBookCursor(%ISCDBCounter"

    Set cid = ..%Id()
    Set bid = ""

    // find child blocks
    &sql(DECLARE C1 CURSOR FOR 
         SELECT ID
         INTO :bid
         FROM block
         WHERE container = :cid
         ORDER BY blockpos
    )

    &sql(OPEN C1)
    &sql(FETCH C1)

    If (SQLCODE '= 0) {
        // no children, render content
        Do ..HTMLRenderContent()
    }
    While (SQLCODE = 0) {
        Do ..HTMLRenderId(bid)
        &sql(FETCH C1)
    }

    &sql(CLOSE C1)
#EXECUTE Kill %msqlvar
]]></Implementation>
</Method>

<Method name="XMLRender">
<Internal>1</Internal>
<Implementation><![CDATA[
    Do ..XMLRenderPreChildren()
    Do ..XMLRenderChildren()
    Do ..XMLRenderPostChildren()
]]></Implementation>
</Method>

<Method name="XMLRenderPreChildren">
<Description>
render any XML before children</Description>
<Internal>1</Internal>
<Implementation><![CDATA[
    // assume class name is XML element name

    Set attr = ""
    Set:(..tagattrs '= "") attr = " " _ ..FmtAttrs(..tagattrs)
    If (..HasAttr("id", ..tagattrs) = "") {
        If (..id '= "") {
            Set attr = attr _ " id=""" _ ..id _ """"
        }
    }
    If (..HasAttr("role", ..tagattrs) = "") {
        If (..role '= "") {
            Set attr = attr _ " role=""" _ ..role _ """"
        }
    }
    
    Write "<",..%ClassName(),attr,">",!
    If (..title '= "") {
        Write "<title>", ..title, "</title>",!
    }
    If (..subtitle '= "") {
        Write "<subtitle>", ..subtitle,"</subtitle>",!
    }
]]></Implementation>
</Method>

<Method name="XMLRenderPostChildren">
<Description>
render any XML after children</Description>
<Internal>1</Internal>
<Implementation><![CDATA[
    // assume class name is XML element name
    Write "</",..%ClassName(),">",!
]]></Implementation>
</Method>

<Method name="XMLRenderChildren">
<Internal>1</Internal>
<Implementation><![CDATA[
    New %ISCDBCounter
    Set %ISCDBCounter = $INCREMENT(^||DocBook.CursorCount)
    Kill %DocBookCursor(%ISCDBCounter)
#EXECUTE Set %msqlvar = "%DocBookCursor(%ISCDBCounter"

    Set cid = ..%Id()
    Set bid = ""

    // find child blocks
    &sql(DECLARE C2 CURSOR FOR 
         SELECT ID
         INTO :bid
         FROM block
         WHERE container = :cid
         ORDER BY blockpos
    )

    &sql(OPEN C2)
    &sql(FETCH C2)
    
    If (SQLCODE '= 0) {
        // no children, render content
        Write ..content
    }

    While (SQLCODE = 0) {
        Do ..XMLRenderId(bid)
        &sql(FETCH C2)
    }

    &sql(CLOSE C2)
#EXECUTE Kill %msqlvar
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>containerDefaultData</DefaultData>
<ExtentSize>241760</ExtentSize>
<Data name="containerDefaultData">
<Structure>listnode</Structure>
<Subscript>"container"</Subscript>
<Value name="1">
<Value>lastChildPos</Value>
</Value>
<Value name="2">
<Value>subtitle</Value>
</Value>
</Data>
<Property name="%%CLASSNAME">
<Selectivity>1.5277%</Selectivity>
<OutlierSelectivity>.541695:"~DocBook.container~DocBook.para~"</OutlierSelectivity>
<AverageFieldSize>34.22</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.61</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.0787%</Selectivity>
<AverageFieldSize>5.42</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>3.0896%</Selectivity>
<OutlierSelectivity>.351186:500</OutlierSelectivity>
<AverageFieldSize>3.62</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0120%</Selectivity>
<OutlierSelectivity>.909831:</OutlierSelectivity>
<AverageFieldSize>2.22</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>49.9999%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>0.6431%</Selectivity>
<OutlierSelectivity>.061017:"RCOS"</OutlierSelectivity>
<AverageFieldSize>4.53</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>1.5922%</Selectivity>
<OutlierSelectivity>.474576:0</OutlierSelectivity>
<AverageFieldSize>1.04</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>0.6755%</Selectivity>
<OutlierSelectivity>.061017:47</OutlierSelectivity>
<AverageFieldSize>2.17</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.0812%</Selectivity>
<AverageFieldSize>5.36</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.0018%</Selectivity>
<AverageFieldSize>5.57</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0014%</Selectivity>
<OutlierSelectivity>.442034:</OutlierSelectivity>
<AverageFieldSize>102.56</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>1.4006%</Selectivity>
<OutlierSelectivity>.341695:</OutlierSelectivity>
<AverageFieldSize>7.45</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.73</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0047%</Selectivity>
<OutlierSelectivity>.999525:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>2.5499%</Selectivity>
<OutlierSelectivity>.541017:0</OutlierSelectivity>
<AverageFieldSize>.99</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>0.9901%</Selectivity>
<AverageFieldSize>18.67</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>7.6610%</Selectivity>
<OutlierSelectivity>.84678:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.53</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0004%</Selectivity>
<OutlierSelectivity>.999322:</OutlierSelectivity>
<AverageFieldSize>.01</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0047%</Selectivity>
<OutlierSelectivity>.999525:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0047%</Selectivity>
<OutlierSelectivity>.999525:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.1768%</Selectivity>
<AverageFieldSize>12.56</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>5.5085%</Selectivity>
<OutlierSelectivity>.338983:"2019-09-22 19:31:30"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0047%</Selectivity>
<OutlierSelectivity>.999525:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.0004%</Selectivity>
<OutlierSelectivity>.999322:</OutlierSelectivity>
<AverageFieldSize>.03</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.0352%</Selectivity>
<OutlierSelectivity>.919322:</OutlierSelectivity>
<AverageFieldSize>4</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0120%</Selectivity>
<OutlierSelectivity>.909831:</OutlierSelectivity>
<AverageFieldSize>2.24</AverageFieldSize>
</Property>
<SQLMap name="$container">
<BlockCount>-20</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.containerNull">
<Description>
A container is a specialized block that can contain one or more blocks.
This one functions like a container but never displays anything.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75362.809728</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="%OnBeforeSave">
<Description>
render this container's children</Description>
<Internal>1</Internal>
<FormalSpec>insert:%Boolean</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	If ($LENGTH(..content) > 0)
	{
		Write "Content truncated", ! 
		Set ..content = ""
	}
	
	Do ..DeleteDependents(..%Id())
	
	Set ..lastChildPos = 0

	Quit $$$OK

]]></Implementation>
</Method>

<Method name="HTMLRender">
<Description>
render this container's children</Description>
<Internal>1</Internal>
<Implementation><![CDATA[
	// HTML rendering is null

	Quit

]]></Implementation>
</Method>

<Method name="XMLRender">
<Internal>1</Internal>
<Implementation><![CDATA[
	// XML rendering is null
	Quit

]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>26</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>58</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.96</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>3.8462%</Selectivity>
<AverageFieldSize>5.96</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>3.62</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>3.8462%</Selectivity>
<AverageFieldSize>3.88</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>3.8462%</Selectivity>
<AverageFieldSize>2.54</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>3.8462%</Selectivity>
<AverageFieldSize>2.54</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>10.0000%</Selectivity>
<AverageFieldSize>13.19</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>11.85</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>13.4615%</Selectivity>
<OutlierSelectivity>.730769:"Cache"</OutlierSelectivity>
<AverageFieldSize>6.38</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>3.8462%</Selectivity>
<AverageFieldSize>7.88</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>11.1111%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$containerNull">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.dbfloat">
<Description>
A simple floating point value.</Description>
<ClassType>datatype</ClassType>
<ClientDataType>DOUBLE</ClientDataType>
<IncludeCode>DocBookMac</IncludeCode>
<OdbcType>DOUBLE</OdbcType>
<ProcedureBlock>0</ProcedureBlock>
<SqlCategory>DOUBLE</SqlCategory>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>
</Class>


<Class name="DocBook.dbint">
<Description>
A simple integer</Description>
<ClassType>datatype</ClassType>
<ClientDataType>INTEGER</ClientDataType>
<IncludeCode>DocBookMac</IncludeCode>
<OdbcType>INTEGER</OdbcType>
<ProcedureBlock>0</ProcedureBlock>
<SqlCategory>INTEGER</SqlCategory>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>
</Class>


<Class name="DocBook.example">
<Description>
A formal example, with a title.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75363.459481</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[
	Write "<DIV CLASS=""exampletitle"">"
	Write "<A name=""",..id,"""></A>",!
	Write "&mdash;",..title,"&mdash;"
	Write "</DIV>",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>92</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>35</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.97</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>1.2658%</Selectivity>
<AverageFieldSize>5.95</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>4.7101%</Selectivity>
<OutlierSelectivity>.858696:1250</OutlierSelectivity>
<AverageFieldSize>3.93</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>3.4483%</Selectivity>
<AverageFieldSize>16.18</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>3.0435%</Selectivity>
<OutlierSelectivity>.847826:"TWEB"</OutlierSelectivity>
<AverageFieldSize>4</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>10.0000%</Selectivity>
<AverageFieldSize>1.01</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>3.0435%</Selectivity>
<OutlierSelectivity>.847826:91</OutlierSelectivity>
<AverageFieldSize>2.02</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>1.2658%</Selectivity>
<AverageFieldSize>5.95</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>1.2048%</Selectivity>
<AverageFieldSize>5.97</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>3.8043%</Selectivity>
<OutlierSelectivity>.847826:"CSP;tutorials;CSP+Zen;web technologies"</OutlierSelectivity>
<AverageFieldSize>34.87</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>11.97</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>3.6232%</Selectivity>
<OutlierSelectivity>.891304:1</OutlierSelectivity>
<AverageFieldSize>1.02</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>2.5362%</Selectivity>
<OutlierSelectivity>.847826:"2019-09-22 20:55:50"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>5.4348%</Selectivity>
<OutlierSelectivity>.945652:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.33</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>3.0435%</Selectivity>
<OutlierSelectivity>.847826:"TWEB.xml"</OutlierSelectivity>
<AverageFieldSize>8.68</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>4.7101%</Selectivity>
<OutlierSelectivity>.858696:"2019-09-22 19:31:35"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>3.4483%</Selectivity>
<AverageFieldSize>16.18</AverageFieldSize>
</Property>
<SQLMap name="$example">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.figure">
<Description>
A figure.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75363.60899</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderContent">
<Description>
Render the contents of this block</Description>
<Internal>1</Internal>
<Implementation><![CDATA[
	Write "<DIV CLASS=""figure-title"">",..title,"</DIV>",!
	Write "<DIV CLASS=""figure"">"
	Write "<A name=""",..id,"""></A>",!
	Do ##class(Renderer).RenderText(..content)
	Write "</DIV>",!
]]></Implementation>
</Method>

<Method name="XMLRender">
<Description>
Render the contents of this block as DocBook XML</Description>
<Internal>1</Internal>
<Implementation><![CDATA[

	Set attrtext = ..FmtAttrs(..tagattrs)
	Set gensym = "label=" _ """" _ ..id _ """"
	
	If (attrtext '[ "label=")
	{
		Set attrtext = attrtext _ " " _ gensym
	}

	Write "<",..%ClassName()," ",attrtext,">"

	Write "<title>", ..title, "</title>", !
	Write ..content
	Write "</",..%ClassName(),">",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>178</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>34</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.76</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>1.3167%</Selectivity>
<OutlierSelectivity>.157303:217152</OutlierSelectivity>
<AverageFieldSize>5.69</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>3.71</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.5780%</Selectivity>
<AverageFieldSize>31.54</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>2.7121%</Selectivity>
<OutlierSelectivity>.213483:"GZCP"</OutlierSelectivity>
<AverageFieldSize>3.96</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>4.7940%</Selectivity>
<OutlierSelectivity>.280899:1</OutlierSelectivity>
<AverageFieldSize>1.08</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>2.7121%</Selectivity>
<OutlierSelectivity>.213483:121</OutlierSelectivity>
<AverageFieldSize>2.41</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>1.3167%</Selectivity>
<OutlierSelectivity>.157303:217152</OutlierSelectivity>
<AverageFieldSize>5.69</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.7299%</Selectivity>
<AverageFieldSize>5.76</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.5650%</Selectivity>
<AverageFieldSize>77.87</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>5.2434%</Selectivity>
<OutlierSelectivity>.52809:</OutlierSelectivity>
<AverageFieldSize>10.27</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>13.19</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>2.2324%</Selectivity>
<OutlierSelectivity>.151685:"2019-09-22 20:55:54"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>3.3708%</Selectivity>
<OutlierSelectivity>.932584:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.24</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>1.8291%</Selectivity>
<OutlierSelectivity>.213483:"GZCP.xml"</OutlierSelectivity>
<AverageFieldSize>10.99</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>8.2665%</Selectivity>
<OutlierSelectivity>.421348:"2019-09-22 19:31:30"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.5618%</Selectivity>
<OutlierSelectivity>.876404:$lb("","float","float","CDATA","0")</OutlierSelectivity>
<AverageFieldSize>34.33</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.5780%</Selectivity>
<AverageFieldSize>32.05</AverageFieldSize>
</Property>
<SQLMap name="$figure">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.formalpara">
<Description>
A formal paragraph: a paragraph with a title.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75363.786779</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderPostChildren">
<Internal>1</Internal>
<Implementation><![CDATA[	Quit
]]></Implementation>
</Method>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[	Write "<DIV CLASS=""formalparatitle"">",..title,"</DIV>",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>1439</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>0.0695%</Selectivity>
<OutlierSelectivity>.99386:"~DocBook.container~DocBook.formalpara~"</OutlierSelectivity>
<AverageFieldSize>38</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.56</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.2211%</Selectivity>
<OutlierSelectivity>.359649:58512</OutlierSelectivity>
<AverageFieldSize>5.56</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>7.3927%</Selectivity>
<OutlierSelectivity>.482456:500</OutlierSelectivity>
<AverageFieldSize>3.52</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>1.7248%</Selectivity>
<AverageFieldSize>17.52</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>0.0695%</Selectivity>
<OutlierSelectivity>.99386:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>3.0706%</Selectivity>
<OutlierSelectivity>.368421:"RCPF"</OutlierSelectivity>
<AverageFieldSize>3.97</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>7.1413%</Selectivity>
<AverageFieldSize>1.04</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>3.0706%</Selectivity>
<OutlierSelectivity>.368421:86</OutlierSelectivity>
<AverageFieldSize>2.06</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.2211%</Selectivity>
<OutlierSelectivity>.359649:58512</OutlierSelectivity>
<AverageFieldSize>5.56</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.2451%</Selectivity>
<AverageFieldSize>5.56</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0695%</Selectivity>
<OutlierSelectivity>.99386:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>1.2846%</Selectivity>
<OutlierSelectivity>.885965:</OutlierSelectivity>
<AverageFieldSize>1.43</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>11.54</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0695%</Selectivity>
<OutlierSelectivity>.99386:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>0.0695%</Selectivity>
<OutlierSelectivity>.99386:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>3.2421%</Selectivity>
<OutlierSelectivity>.236842:"2019-09-22 20:44:52"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>0.0731%</Selectivity>
<OutlierSelectivity>.991228:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.03</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0695%</Selectivity>
<OutlierSelectivity>.99386:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0695%</Selectivity>
<OutlierSelectivity>.99386:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0695%</Selectivity>
<OutlierSelectivity>.99386:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>2.2511%</Selectivity>
<OutlierSelectivity>.368421:"RCPF.xml"</OutlierSelectivity>
<AverageFieldSize>13.23</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>16.6666%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0695%</Selectivity>
<OutlierSelectivity>.99386:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.0695%</Selectivity>
<OutlierSelectivity>.99386:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.0731%</Selectivity>
<OutlierSelectivity>.991228:</OutlierSelectivity>
<AverageFieldSize>.32</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>1.7248%</Selectivity>
<AverageFieldSize>17.73</AverageFieldSize>
</Property>
<SQLMap name="$formalpara">
<BlockCount>-16</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.glossary">
<Description>
A glossary.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.component</Super>
<TimeChanged>65278,75363.938313</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="GetBannerInfo">
<Internal>1</Internal>
<FormalSpec>info:DocBook.UI.BannerInfo</FormalSpec>
<Implementation><![CDATA[
	Set info.title = ..title
	If (..book '= "") {
		Set info.booktitle = ..book.title
	}
	Else {
		Set info.booktitle = ""
	}		
	Set info.chap = $$$T("Glossary")
	Set info.prev = ""
	Set info.next = ""
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>2</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>54</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.5</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>50.0000%</Selectivity>
<AverageFieldSize>2.5</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>50.0000%</Selectivity>
<AverageFieldSize>4</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>50.0000%</Selectivity>
<AverageFieldSize>19.5</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>50.0000%</Selectivity>
<AverageFieldSize>5</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>50.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>50.0000%</Selectivity>
<AverageFieldSize>2.5</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>50.0000%</Selectivity>
<AverageFieldSize>2.5</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>50.0000%</Selectivity>
<AverageFieldSize>3.5</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>18.5</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>50.0000%</Selectivity>
<AverageFieldSize>2</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>50.0000%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>50.0000%</Selectivity>
<AverageFieldSize>6.5</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>50.0000%</Selectivity>
<AverageFieldSize>9</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>50.0000%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>50.0000%</Selectivity>
<AverageFieldSize>34.5</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>50.0000%</Selectivity>
<AverageFieldSize>19.5</AverageFieldSize>
</Property>
<SQLMap name="$glossary">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.glossdef">
<Description>
A definition within a glossentry.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75364.130373</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderPostChildren">
<Internal>1</Internal>
<Implementation><![CDATA[	Write "</DIV>",!
]]></Implementation>
</Method>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[	Write "<DIV CLASS=""glossdef"">",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>3722</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:"~DocBook.container~DocBook.glossdef~"</OutlierSelectivity>
<AverageFieldSize>36</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.52</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.9144%</Selectivity>
<AverageFieldSize>5.42</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>14.2857%</Selectivity>
<AverageFieldSize>3.78</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:0</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>1.8613%</Selectivity>
<AverageFieldSize>4.65</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:0</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>1.8613%</Selectivity>
<AverageFieldSize>2.21</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.9144%</Selectivity>
<AverageFieldSize>5.36</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.0269%</Selectivity>
<AverageFieldSize>5.52</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>1.8370%</Selectivity>
<OutlierSelectivity>.677596:</OutlierSelectivity>
<AverageFieldSize>3.26</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.16</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>12.5000%</Selectivity>
<AverageFieldSize>1.01</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>2.2922%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>8.1967%</Selectivity>
<OutlierSelectivity>.836066:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.59</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>1.5443%</Selectivity>
<AverageFieldSize>12.09</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>9.0909%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$glossdef">
<BlockCount>-16</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.glossentry">
<Description>
An entry in a glossary or glosslist.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75364.332568</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Property name="glossterm">
<Description>
the glossterm associated with this glossentry</Description>
<Type>cdata</Type>
</Property>

<Method name="%OnBeforeSave">
<Internal>1</Internal>
<FormalSpec>insert:%Boolean</FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
    Set ..content = ..glossterm
    
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[
	Write "<DIV CLASS=""glossentry"">"
	Write "<A name=""",..id,"""></A>",!
	If (..glossterm [ "<") {
		// there is inline markup
		Do ##class(Renderer).RenderText(..glossterm)
	}
	Else {
		Write ..glossterm
	}
	Write "</DIV>",!
]]></Implementation>
</Method>

<Method name="XMLRender">
<Internal>1</Internal>
<Implementation><![CDATA[
	Do ..XMLRenderPreChildren()
	Do ..XMLRenderChildren()
	Do ..XMLRenderPostChildren()

]]></Implementation>
</Method>

<Method name="XMLRenderPreChildren">
<Description>
render any XML before children</Description>
<Internal>1</Internal>
<Implementation><![CDATA[
	// assume class name is XML element name

	Set attr = ""
	Set:(..tagattrs '= "") attr = " " _ ..FmtAttrs(..tagattrs)
	If (..HasAttr("id", ..tagattrs) = "") {
		If (..id '= "") {
			Set attr = attr _ " id=""" _ ..id _ """"
		}
	}
	If (..HasAttr("role", ..tagattrs) = "") {
		If (..role '= "") {
			Set attr = attr _ " role=""" _ ..role _ """"
		}
	}
	
	Write "<",..%ClassName(),attr,">",!
	write "<glossterm>", ..glossterm, "</glossterm>", !
	If (..title '= "") {
		Write "<title>", ..title, "</title>",!
	}

]]></Implementation>
</Method>

<Method name="XMLRenderPostChildren">
<Description>
render any XML after children</Description>
<Internal>1</Internal>
<Implementation><![CDATA[
	// assume class name is XML element name
	Write "</glossentry>",!

]]></Implementation>
</Method>

<Method name="XMLRenderChildren">
<Internal>1</Internal>
<Implementation><![CDATA[
	New %ISCDBCounter
	Set %ISCDBCounter = $INCREMENT(^||DocBook.CursorCount)
	Kill %DocBookCursor(%ISCDBCounter)
#EXECUTE Set %msqlvar = "%DocBookCursor(%ISCDBCounter"

	Set cid = ..%Id()
	Set bid = ""

	// find child blocks
	&sql(DECLARE C2 CURSOR FOR 
		 SELECT ID
		 INTO :bid
		 FROM block
		 WHERE container = :cid
		 ORDER BY blockpos
	)

	&sql(OPEN C2)
	&sql(FETCH C2)
	
	If (SQLCODE '= 0) {
		// no children, render content
		Write ..content
	}

	While (SQLCODE = 0) {
		Do ..XMLRenderId(bid)
		&sql(FETCH C2)
	}

	&sql(CLOSE C2)
#EXECUTE Kill %msqlvar

	Quit
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>glossentryDefaultData</DefaultData>
<ExtentSize>3720</ExtentSize>
<Data name="containerDefaultData">
<Subscript>"container"</Subscript>
<Value name="1">
<Value>title</Value>
</Value>
<Value name="2">
<Value>subtitle</Value>
</Value>
<Value name="3">
<Value>glossterm</Value>
</Value>
</Data>
<Data name="glossentryDefaultData">
<Subscript>"glossentry"</Subscript>
<Value name="1">
<Value>lastChildPos</Value>
</Value>
</Data>
<Property name="%%CLASSNAME">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:"~DocBook.container~DocBook.glossentry~"</OutlierSelectivity>
<AverageFieldSize>38</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.47</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.8497%</Selectivity>
<AverageFieldSize>5.33</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>3.84</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>1.7457%</Selectivity>
<AverageFieldSize>4.56</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>2.3864%</Selectivity>
<OutlierSelectivity>.251366:0</OutlierSelectivity>
<AverageFieldSize>1.24</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>1.7457%</Selectivity>
<AverageFieldSize>2.18</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.8654%</Selectivity>
<AverageFieldSize>5.23</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.3619%</Selectivity>
<AverageFieldSize>5.47</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0639%</Selectivity>
<AverageFieldSize>25.18</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>1.5515%</Selectivity>
<OutlierSelectivity>.737705:</OutlierSelectivity>
<AverageFieldSize>2.1</AverageFieldSize>
</Property>
<Property name="glossterm">
<Selectivity>0.0639%</Selectivity>
<AverageFieldSize>25.18</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>17.26</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>7.9235%</Selectivity>
<OutlierSelectivity>.84153:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.51</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>1.4558%</Selectivity>
<AverageFieldSize>12.13</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>6.3934%</Selectivity>
<OutlierSelectivity>.360656:"2019-09-22 19:31:30"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.0269%</Selectivity>
<OutlierSelectivity>.726776:</OutlierSelectivity>
<AverageFieldSize>12.72</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0383%</Selectivity>
<OutlierSelectivity>.996175:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$glossentry">
<BlockCount>-16</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.glosslist">
<Description>
A wrapper for a set of glossentry objects.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75364.580492</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>810</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>37</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.37</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.2862%</Selectivity>
<OutlierSelectivity>.092593:65078</OutlierSelectivity>
<AverageFieldSize>5.36</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>14.2857%</Selectivity>
<AverageFieldSize>3.74</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>1.0253%</Selectivity>
<OutlierSelectivity>.159259:"ITECHREF"</OutlierSelectivity>
<AverageFieldSize>4.88</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>5.0088%</Selectivity>
<OutlierSelectivity>.298765:1</OutlierSelectivity>
<AverageFieldSize>1.01</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>1.0380%</Selectivity>
<OutlierSelectivity>.159259:45</OutlierSelectivity>
<AverageFieldSize>2.16</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.2862%</Selectivity>
<OutlierSelectivity>.092593:65078</OutlierSelectivity>
<AverageFieldSize>5.36</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.1361%</Selectivity>
<AverageFieldSize>5.37</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>0.9544%</Selectivity>
<OutlierSelectivity>.751852:</OutlierSelectivity>
<AverageFieldSize>2.12</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.25</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>1.8759%</Selectivity>
<OutlierSelectivity>.324691:1</OutlierSelectivity>
<AverageFieldSize>1.1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.5681%</Selectivity>
<OutlierSelectivity>.106173:"2019-09-22 20:44:56"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>6.4815%</Selectivity>
<OutlierSelectivity>.87037:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.45</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.7311%</Selectivity>
<OutlierSelectivity>.159259:"ITECHREF.xml"</OutlierSelectivity>
<AverageFieldSize>12.25</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>6.1953%</Selectivity>
<OutlierSelectivity>.318519:"2019-09-22 19:31:28"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$glosslist">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.id">
<Description>
A simple datatype corresponding to an XML ID value</Description>
<ClassType>datatype</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>0</ProcedureBlock>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Parameter name="COLLATION">
<Description>
Make id values case-insensitive</Description>
<Default>SQLUPPER</Default>
</Parameter>
</Class>


<Class name="DocBook.important">
<Description>
An 'important' admonition.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75364.753806</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderPostChildren">
<Internal>1</Internal>
<Implementation><![CDATA[	Write "</DIV>",!
]]></Implementation>
</Method>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[	Write "<DIV CLASS=""important""><SPAN CLASS=""important"">", $$$T("Important:"), "</SPAN> ",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>549</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>37</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.7</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.3922%</Selectivity>
<AverageFieldSize>5.58</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>2.6614%</Selectivity>
<OutlierSelectivity>.520947:500</OutlierSelectivity>
<AverageFieldSize>3.45</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>1.2102%</Selectivity>
<OutlierSelectivity>.116576:"GCAS"</OutlierSelectivity>
<AverageFieldSize>4.19</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>3.9785%</Selectivity>
<OutlierSelectivity>.24408:1</OutlierSelectivity>
<AverageFieldSize>1.04</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>1.2270%</Selectivity>
<OutlierSelectivity>.116576:76</OutlierSelectivity>
<AverageFieldSize>2.17</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.3937%</Selectivity>
<AverageFieldSize>5.58</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.1862%</Selectivity>
<AverageFieldSize>5.7</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>1.7760%</Selectivity>
<OutlierSelectivity>.431694:</OutlierSelectivity>
<AverageFieldSize>6.9</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>11.89</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>3.1330%</Selectivity>
<OutlierSelectivity>.843352:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.3699%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>6.0109%</Selectivity>
<OutlierSelectivity>.879781:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.42</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.6289%</Selectivity>
<AverageFieldSize>13.03</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>3.7920%</Selectivity>
<OutlierSelectivity>.582878:"2019-09-22 19:31:30"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$important">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.informaltable">
<Description>
A table without a title.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.block</Super>
<TimeChanged>65278,75364.925605</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Property name="colsep">
<Type>dbint</Type>
</Property>

<Property name="frame">
<Type>cdata</Type>
</Property>

<Method name="HTMLRenderContent">
<Internal>1</Internal>
<Implementation><![CDATA[
    Write "<DIV CLASS=""informaltable"">"
    Write "<A name=""",..id,"""></A>",!
    Do ##class(Renderer).RenderTable(..content,..frame,..colsep)
    Write "</DIV>",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>informaltableDefaultData</DefaultData>
<ExtentSize>3484</ExtentSize>
<Data name="informaltableDefaultData">
<Subscript>"informaltable"</Subscript>
<Value name="1">
<Value>colsep</Value>
</Value>
<Value name="2">
<Value>frame</Value>
</Value>
</Data>
<Property name="%%CLASSNAME">
<Selectivity>11.2993%</Selectivity>
<OutlierSelectivity>.887006:"~DocBook.informaltable~"</OutlierSelectivity>
<AverageFieldSize>24.58</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.71</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.2180%</Selectivity>
<AverageFieldSize>5.47</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>12.5000%</Selectivity>
<AverageFieldSize>3.69</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0288%</Selectivity>
<OutlierSelectivity>.887006:</OutlierSelectivity>
<AverageFieldSize>3.24</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>0.0395%</Selectivity>
<OutlierSelectivity>.996045:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>1.8529%</Selectivity>
<AverageFieldSize>4.21</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>3.5255%</Selectivity>
<OutlierSelectivity>.435028:0</OutlierSelectivity>
<AverageFieldSize>1.05</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>1.8529%</Selectivity>
<AverageFieldSize>2.22</AverageFieldSize>
</Property>
<Property name="colsep">
<Selectivity>49.9999%</Selectivity>
<AverageFieldSize>.37</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.2180%</Selectivity>
<AverageFieldSize>5.47</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.0481%</Selectivity>
<AverageFieldSize>5.71</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0629%</Selectivity>
<AverageFieldSize>1971.67</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>3.9518%</Selectivity>
<OutlierSelectivity>.288136:</OutlierSelectivity>
<AverageFieldSize>8.96</AverageFieldSize>
</Property>
<Property name="frame">
<Selectivity>1.6949%</Selectivity>
<OutlierSelectivity>.983051:"all"</OutlierSelectivity>
<AverageFieldSize>3.02</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.21</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0395%</Selectivity>
<OutlierSelectivity>.996045:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.2115%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>2.8221%</Selectivity>
<OutlierSelectivity>.943503:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.19</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0395%</Selectivity>
<OutlierSelectivity>.996045:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0395%</Selectivity>
<OutlierSelectivity>.996045:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0395%</Selectivity>
<OutlierSelectivity>.996045:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.3228%</Selectivity>
<AverageFieldSize>13.65</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>6.3276%</Selectivity>
<OutlierSelectivity>.367232:"2019-09-22 19:31:34"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0395%</Selectivity>
<OutlierSelectivity>.996045:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>4.4751%</Selectivity>
<OutlierSelectivity>.418079:$lb("","frame","frame","ENUMERATION","all")</OutlierSelectivity>
<AverageFieldSize>52.95</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0288%</Selectivity>
<OutlierSelectivity>.887006:</OutlierSelectivity>
<AverageFieldSize>3.3</AverageFieldSize>
</Property>
<SQLMap name="$informaltable">
<BlockCount>-12</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.itemizedlist">
<Description>
Represents a bulleted list.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75365.116031</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderPostChildren">
<Internal>1</Internal>
<Implementation><![CDATA[
	Write "</ul>",!

]]></Implementation>
</Method>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[
	Write "<ul>",!

]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>11220</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>0.0220%</Selectivity>
<OutlierSelectivity>.997799:"~DocBook.container~DocBook.itemizedlist~"</OutlierSelectivity>
<AverageFieldSize>40</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.55</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.1112%</Selectivity>
<AverageFieldSize>5.37</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>6.2579%</Selectivity>
<OutlierSelectivity>.374214:500</OutlierSelectivity>
<AverageFieldSize>3.61</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0220%</Selectivity>
<OutlierSelectivity>.997799:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>0.0220%</Selectivity>
<OutlierSelectivity>.997799:0</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>0.9412%</Selectivity>
<AverageFieldSize>4.53</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>4.6598%</Selectivity>
<OutlierSelectivity>.487421:1</OutlierSelectivity>
<AverageFieldSize>1.01</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>0.9752%</Selectivity>
<AverageFieldSize>2.1</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.1112%</Selectivity>
<AverageFieldSize>5.37</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.0111%</Selectivity>
<AverageFieldSize>5.55</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0220%</Selectivity>
<OutlierSelectivity>.997799:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>2.0226%</Selectivity>
<OutlierSelectivity>.311321:</OutlierSelectivity>
<AverageFieldSize>6.8</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.05</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0220%</Selectivity>
<OutlierSelectivity>.997799:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>4.0141%</Selectivity>
<OutlierSelectivity>.31761:2</OutlierSelectivity>
<AverageFieldSize>1.07</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.0489%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>7.0755%</Selectivity>
<OutlierSelectivity>.858491:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.46</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0220%</Selectivity>
<OutlierSelectivity>.997799:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0220%</Selectivity>
<OutlierSelectivity>.997799:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0220%</Selectivity>
<OutlierSelectivity>.997799:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.3421%</Selectivity>
<AverageFieldSize>12.45</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>6.0606%</Selectivity>
<OutlierSelectivity>.333333:"2019-09-22 19:31:30"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0220%</Selectivity>
<OutlierSelectivity>.997799:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.0220%</Selectivity>
<OutlierSelectivity>.997799:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>7.5471%</Selectivity>
<OutlierSelectivity>.924528:</OutlierSelectivity>
<AverageFieldSize>2.19</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0220%</Selectivity>
<OutlierSelectivity>.997799:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$itemizedlist">
<BlockCount>-20</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.listitem">
<Description>
Represents an item in a list (ordered or unordered).</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75365.681307</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderPostChildren">
<Internal>1</Internal>
<Implementation><![CDATA[	Write "</li>",!
]]></Implementation>
</Method>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[	Write "<li>",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>54577</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>0.0100%</Selectivity>
<OutlierSelectivity>.999001:"~DocBook.container~DocBook.listitem~"</OutlierSelectivity>
<AverageFieldSize>36</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.62</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.1066%</Selectivity>
<AverageFieldSize>5.5</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>3.7929%</Selectivity>
<OutlierSelectivity>.355207:500</OutlierSelectivity>
<AverageFieldSize>3.61</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0100%</Selectivity>
<OutlierSelectivity>.999001:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>0.0100%</Selectivity>
<OutlierSelectivity>.999001:0</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>0.7657%</Selectivity>
<AverageFieldSize>4.57</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>3.9492%</Selectivity>
<OutlierSelectivity>.249643:1</OutlierSelectivity>
<AverageFieldSize>1.03</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>0.7780%</Selectivity>
<AverageFieldSize>2.21</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.1066%</Selectivity>
<AverageFieldSize>5.5</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.0096%</Selectivity>
<AverageFieldSize>5.62</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0100%</Selectivity>
<OutlierSelectivity>.999001:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>1.4978%</Selectivity>
<OutlierSelectivity>.340942:</OutlierSelectivity>
<AverageFieldSize>7.5</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.17</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0100%</Selectivity>
<OutlierSelectivity>.999001:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>3.8873%</Selectivity>
<OutlierSelectivity>.844508:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.0520%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>7.6319%</Selectivity>
<OutlierSelectivity>.847361:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.55</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0100%</Selectivity>
<OutlierSelectivity>.999001:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0100%</Selectivity>
<OutlierSelectivity>.999001:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0100%</Selectivity>
<OutlierSelectivity>.999001:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.2722%</Selectivity>
<AverageFieldSize>12.31</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>5.5278%</Selectivity>
<OutlierSelectivity>.336662:"2019-09-22 19:31:30"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0100%</Selectivity>
<OutlierSelectivity>.999001:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.0100%</Selectivity>
<OutlierSelectivity>.999001:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.0100%</Selectivity>
<OutlierSelectivity>.999001:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0100%</Selectivity>
<OutlierSelectivity>.999001:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$listitem">
<BlockCount>-24</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.literallayout">
<Description>
Represents a chunk of text that must be rendered as is.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.block</Super>
<TimeChanged>65278,75365.784885</TimeChanged>
<TimeCreated>58696,41768</TimeCreated>

<Method name="HTMLRenderContent">
<Internal>1</Internal>
<Implementation><![CDATA[

	Set mt = ""
	//Set:(%ie||%ie6) mt = " oncontextmenu=""if (!event.ctrlKey){showContextMenu();return false;} else {menu1.style.display='none'}"""

	set attrs = ..tagattrs
	set class = "normal"
	for i = 1 : 5 : $LISTLENGTH(attrs)
	{
		if ($ZCONVERT($LIST(attrs, (i + 1)), "U") = "CLASS")
		{
			set class = $LIST(attrs, (i + 4))
			quit
		}
	}
	set class = $ZCONVERT(class, "U")
	
	Write "<DIV CLASS=""literallayout""",mt,">",!
	Write "<A name=""",..id,"""></A>",!
	Write "<PRE CLASS=""", class, """>",..content,"</PRE>",!
	Write "</DIV>",!

]]></Implementation>
</Method>

<Method name="XMLRender">
<Description>
Render the contents of this block as DocBook XML</Description>
<Internal>1</Internal>
<Implementation><![CDATA[

	set attrs = ..tagattrs
	set class = "normal"
	for i = 1 : 5 : $LISTLENGTH(attrs)
	{
		if ($ZCONVERT($LIST(attrs, (i + 1)), "U") = "CLASS")
		{
			set class = $LIST(attrs, (i + 4))
			quit
		}
	}
	set class = $ZCONVERT(class, "L")
	
	Write "<",..%ClassName()
	Write:(class '= "") " class=""", class, """"
	Write ">"
	Write ..content
	Write "</",..%ClassName(),">",!

]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>literallayoutDefaultData</DefaultData>
<ExtentSize>1090</ExtentSize>
<Data name="literallayoutDefaultData">
<Subscript>"literallayout"</Subscript>
<Value name="1">
<Value>syntaxError</Value>
</Value>
</Data>
<Property name="%%CLASSNAME">
<Selectivity>0.0917%</Selectivity>
<OutlierSelectivity>.992929:"~DocBook.literallayout~"</OutlierSelectivity>
<AverageFieldSize>23</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.86</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>1.0399%</Selectivity>
<AverageFieldSize>5.71</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>4.6959%</Selectivity>
<OutlierSelectivity>.242424:500</OutlierSelectivity>
<AverageFieldSize>3.73</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0917%</Selectivity>
<OutlierSelectivity>.992929:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>0.0917%</Selectivity>
<OutlierSelectivity>.992929:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>2.3921%</Selectivity>
<AverageFieldSize>4.49</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>5.0224%</Selectivity>
<OutlierSelectivity>.393939:1</OutlierSelectivity>
<AverageFieldSize>1.06</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>2.4771%</Selectivity>
<AverageFieldSize>2.07</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>1.0399%</Selectivity>
<AverageFieldSize>5.71</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.1269%</Selectivity>
<AverageFieldSize>5.86</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.1025%</Selectivity>
<AverageFieldSize>217.23</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>4.1998%</Selectivity>
<OutlierSelectivity>.40404:</OutlierSelectivity>
<AverageFieldSize>9.07</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.34</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0917%</Selectivity>
<OutlierSelectivity>.992929:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.7029%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>6.0591%</Selectivity>
<OutlierSelectivity>.878788:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.45</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0917%</Selectivity>
<OutlierSelectivity>.992929:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0917%</Selectivity>
<OutlierSelectivity>.992929:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0917%</Selectivity>
<OutlierSelectivity>.992929:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>1.1621%</Selectivity>
<AverageFieldSize>13.46</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>4.6370%</Selectivity>
<OutlierSelectivity>.626263:"2019-09-22 19:31:30"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0917%</Selectivity>
<OutlierSelectivity>.992929:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>49.9999%</Selectivity>
<AverageFieldSize>81.55</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0917%</Selectivity>
<OutlierSelectivity>.992929:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$literallayout">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.note">
<Description>
A note admonition.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75365.899157</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderPostChildren">
<Internal>1</Internal>
<Implementation><![CDATA[	Write "</DIV>",!
]]></Implementation>
</Method>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[	Write "<DIV CLASS=""note""><SPAN CLASS=""note"">", $$$T("Note:"), "</SPAN> ",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>2426</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>0.0473%</Selectivity>
<OutlierSelectivity>.99527:"~DocBook.container~DocBook.note~"</OutlierSelectivity>
<AverageFieldSize>32</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.8</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.1826%</Selectivity>
<AverageFieldSize>5.66</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>4.7265%</Selectivity>
<OutlierSelectivity>.385135:500</OutlierSelectivity>
<AverageFieldSize>3.55</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0473%</Selectivity>
<OutlierSelectivity>.99527:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>0.0473%</Selectivity>
<OutlierSelectivity>.99527:0</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>1.4509%</Selectivity>
<AverageFieldSize>4.06</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>8.3333%</Selectivity>
<AverageFieldSize>1.01</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>1.4509%</Selectivity>
<AverageFieldSize>2.3</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.1826%</Selectivity>
<AverageFieldSize>5.66</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.0412%</Selectivity>
<AverageFieldSize>5.8</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0473%</Selectivity>
<OutlierSelectivity>.99527:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>2.1980%</Selectivity>
<OutlierSelectivity>.452703:</OutlierSelectivity>
<AverageFieldSize>7.47</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>11.86</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0473%</Selectivity>
<OutlierSelectivity>.99527:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>6.0810%</Selectivity>
<OutlierSelectivity>.817568:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.2102%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>5.4053%</Selectivity>
<OutlierSelectivity>.891892:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.34</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0473%</Selectivity>
<OutlierSelectivity>.99527:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0473%</Selectivity>
<OutlierSelectivity>.99527:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0473%</Selectivity>
<OutlierSelectivity>.99527:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.5883%</Selectivity>
<AverageFieldSize>12.15</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>5.8778%</Selectivity>
<OutlierSelectivity>.412162:"2019-09-22 19:31:30"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0473%</Selectivity>
<OutlierSelectivity>.99527:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.0473%</Selectivity>
<OutlierSelectivity>.99527:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.0473%</Selectivity>
<OutlierSelectivity>.99527:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0473%</Selectivity>
<OutlierSelectivity>.99527:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$note">
<BlockCount>-8</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.orderedlist">
<Description>
Represents a numbered list.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75366.019627</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderPostChildren">
<Internal>1</Internal>
<Implementation><![CDATA[
	Write "</ol>",!

]]></Implementation>
</Method>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[
	Set typecode = "1"
	If (..HasAttr("numeration", ..tagattrs))
	{
		Set fmt = ..GetAttrValue("numeration", ..tagattrs)
		Set fmt = $ZCONVERT(fmt, "L")
		Set:(fmt = "arabic") typecode = "1"
		Set:(fmt = "loweralpha") typecode = "a"
		//Set:(fmt = "upperalpha") typecode = "A"
		//Set:(fmt = "lowerroman") typecode = "i"
		//Set:(fmt = "upperroman") typecode = "I"
	}
	Write "<ol type=""", typecode, """>", !

]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>2673</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>0.0452%</Selectivity>
<OutlierSelectivity>.995484:"~DocBook.container~DocBook.orderedlist~"</OutlierSelectivity>
<AverageFieldSize>39</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.77</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.3012%</Selectivity>
<AverageFieldSize>5.75</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>12.5000%</Selectivity>
<AverageFieldSize>3.62</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0452%</Selectivity>
<OutlierSelectivity>.995484:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>0.0452%</Selectivity>
<OutlierSelectivity>.995484:0</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>1.3228%</Selectivity>
<AverageFieldSize>4.26</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>5.0309%</Selectivity>
<OutlierSelectivity>.496774:1</OutlierSelectivity>
<AverageFieldSize>1.01</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>1.3228%</Selectivity>
<AverageFieldSize>2.39</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.3012%</Selectivity>
<AverageFieldSize>5.75</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.0418%</Selectivity>
<AverageFieldSize>5.77</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0452%</Selectivity>
<OutlierSelectivity>.995484:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>2.2225%</Selectivity>
<OutlierSelectivity>.335484:</OutlierSelectivity>
<AverageFieldSize>9.27</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.03</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0452%</Selectivity>
<OutlierSelectivity>.995484:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>9.0909%</Selectivity>
<AverageFieldSize>1.03</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.7680%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>13.2257%</Selectivity>
<OutlierSelectivity>.735484:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.91</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0452%</Selectivity>
<OutlierSelectivity>.995484:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0452%</Selectivity>
<OutlierSelectivity>.995484:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0452%</Selectivity>
<OutlierSelectivity>.995484:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.9561%</Selectivity>
<AverageFieldSize>10.66</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>5.6299%</Selectivity>
<OutlierSelectivity>.380645:"2019-09-22 19:31:30"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0452%</Selectivity>
<OutlierSelectivity>.995484:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.0452%</Selectivity>
<OutlierSelectivity>.995484:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>7.0967%</Selectivity>
<OutlierSelectivity>.858065:$lb("","inheritnum","inheritnum","ENUMERATION","ignore","","continuation","continuation","ENUMERATION","restarts")</OutlierSelectivity>
<AverageFieldSize>107.19</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0452%</Selectivity>
<OutlierSelectivity>.995484:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$orderedlist">
<BlockCount>-8</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.para">
<Description>
This class represents a DocBook para.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75366.601223</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderContent">
<Description>
Render the contents of this block</Description>
<Internal>1</Internal>
<Implementation><![CDATA[

    Set searchword = $G(%request.Data("KEYWORD",1))
    Set ancestors = "chapter,appendix,preface"
    
    Set mt = ""
    //Set:(%ie||%ie6) mt = "oncontextmenu=""if (!event.ctrlKey){showContextMenu();return false;} else {menu1.style.display='none'}"""
    
    // test for first paragraph in a chapter
    Set class = "para"
    /* JMD257
    If ((..blockpos = 0) && (ancestors [ ..container.%ClassName())) {
        Set class = "para1"
    }
    */
    
    // JMD257: test for first para on a page
    If (ancestors [ ..container.%ClassName()) {
        If (..blockpos = 0) { 
            Set class = "para1"
        }
        ElseIf (..blockpos = 1) {
            #; find out if the first block was a para
            Set cid = ..container.%Id()
            &sql(SELECT x__classname INTO :cls FROM block WHERE container=:cid AND blockpos = 0)
            If ($G(cls)'["~DocBook.para~") {
                Set class = "para1"
            }
        }
    }
    
    Set filteredcontent = ##class(DocBook.Renderer).FilterText(..content)
    // check for Latin-1 first character
    Set Chr1 = $ASCII($EXTRACT(filteredcontent, 1))
    Set OOB = ((Chr1 < 38) 
            + ((Chr1 >= 39) && (Chr1 <=47))
            + ((Chr1 >= 58) && (Chr1 <= 64)) 
            + ((Chr1 >= 91) && (Chr1 <= 96)) 
            + ((Chr1 >= 123) && (Chr1 <= 191)) 
            + ((Chr1 >= 204) && (Chr1 <= 207)) 
            + (Chr1 = 215) 
            + (Chr1 = 247))
    Set:(OOB > 0) class = "para" 

    If ($LENGTH(filteredcontent) > 0)
    {
    
        Write "<DIV CLASS=""",class,""" TEXTID=""",..id,""" ",mt,">"
    
        Write "<A name=""",..id,"""></A>",!
        Do ##class(Renderer).RenderText(filteredcontent,searchword)
        Write "</DIV>",!
        Write:(class [ "para1") "<BR CLEAR=""LEFT"">",!
    }
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>129441</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>0.0065%</Selectivity>
<OutlierSelectivity>.999351:"~DocBook.container~DocBook.para~"</OutlierSelectivity>
<AverageFieldSize>32</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.6</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.0902%</Selectivity>
<AverageFieldSize>5.41</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>2.9025%</Selectivity>
<OutlierSelectivity>.361446:500</OutlierSelectivity>
<AverageFieldSize>3.61</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0065%</Selectivity>
<OutlierSelectivity>.999351:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>6.9508%</Selectivity>
<OutlierSelectivity>.930491:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>0.7089%</Selectivity>
<AverageFieldSize>4.52</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>1.9267%</Selectivity>
<OutlierSelectivity>.63392:0</OutlierSelectivity>
<AverageFieldSize>1.01</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>0.7405%</Selectivity>
<AverageFieldSize>2.17</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.0908%</Selectivity>
<AverageFieldSize>5.41</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.0017%</Selectivity>
<AverageFieldSize>5.59</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0018%</Selectivity>
<AverageFieldSize>186.48</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>1.4486%</Selectivity>
<OutlierSelectivity>.333642:</OutlierSelectivity>
<AverageFieldSize>7.35</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.09</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0065%</Selectivity>
<OutlierSelectivity>.999351:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>0.1854%</Selectivity>
<OutlierSelectivity>.998146:0</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.0309%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>7.4606%</Selectivity>
<OutlierSelectivity>.850788:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.49</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0065%</Selectivity>
<OutlierSelectivity>.999351:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0065%</Selectivity>
<OutlierSelectivity>.999351:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0065%</Selectivity>
<OutlierSelectivity>.999351:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.2113%</Selectivity>
<AverageFieldSize>12.63</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>5.3136%</Selectivity>
<OutlierSelectivity>.362373:"2019-09-22 19:31:30"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0065%</Selectivity>
<OutlierSelectivity>.999351:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.0065%</Selectivity>
<OutlierSelectivity>.999351:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.0065%</Selectivity>
<OutlierSelectivity>.999351:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0065%</Selectivity>
<OutlierSelectivity>.999351:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$para">
<BlockCount>-20</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.part">
<Description>
This class represents a Part of a book.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.component</Super>
<TimeChanged>65278,75366.655732</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Property name="intro">
<Description>
Intro for this part</Description>
<Type>partintro</Type>
</Property>

<Method name="GetBannerInfo">
<Internal>1</Internal>
<FormalSpec>info:DocBook.UI.BannerInfo</FormalSpec>
<Implementation><![CDATA[
	Set info.title = ..title
	If (..book '= "") {
		Set info.booktitle = ..book.title
	}
	Else {
		Set info.booktitle = ""
	}
	
	Set info.chap = ""
	Set info.prev = ""
	Set info.next = ""
]]></Implementation>
</Method>

<Method name="HTMLRender">
<Internal>1</Internal>
<Implementation><![CDATA[
	Set id = ..%Id()
	
	If (..intro '= "") {
		Do ..intro.HTMLRender()
	}
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>partDefaultData</DefaultData>
<ExtentSize>44</ExtentSize>
<Data name="partDefaultData">
<Subscript>"part"</Subscript>
<Value name="1">
<Value>intro</Value>
</Value>
</Data>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>50</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>6</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>7.1429%</Selectivity>
<AverageFieldSize>2.73</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>33.3333%</Selectivity>
<AverageFieldSize>4</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>2.4390%</Selectivity>
<AverageFieldSize>21.61</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>7.1429%</Selectivity>
<AverageFieldSize>4</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>14.2857%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>7.1429%</Selectivity>
<AverageFieldSize>2.73</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>2.2727%</Selectivity>
<OutlierSelectivity>.681818:</OutlierSelectivity>
<AverageFieldSize>1.91</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>7.1429%</Selectivity>
<AverageFieldSize>2.73</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>10.0000%</Selectivity>
<AverageFieldSize>20.07</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.64</AverageFieldSize>
</Property>
<Property name="intro">
<Selectivity>2.2727%</Selectivity>
<AverageFieldSize>5.86</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>3.5714%</Selectivity>
<AverageFieldSize>1.89</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>9.0909%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>13.6364%</Selectivity>
<OutlierSelectivity>.863636:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.41</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>7.1429%</Selectivity>
<AverageFieldSize>8</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>33.3333%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>2.2727%</Selectivity>
<AverageFieldSize>28.64</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>2.4390%</Selectivity>
<AverageFieldSize>23.05</AverageFieldSize>
</Property>
<SQLMap name="$part">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.partintro">
<Description>
An introduction to a Part of a Book.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.component</Super>
<TimeChanged>65278,75366.713067</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Property name="part">
<Description>
part this intro belongs to</Description>
<Type>part</Type>
</Property>

<Method name="GetBannerInfo">
<Internal>1</Internal>
<FormalSpec>info:DocBook.UI.BannerInfo</FormalSpec>
<Implementation><![CDATA[
	Set info.title = $$$T("Introduction")
	If (..book '= "") {
		Set info.booktitle = ..book.title
	}
	Else {
		Set info.booktitle = ""
	}
	
	Set info.chap = ""
	Set info.next = ""
	Set info.prev = ""
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>partintroDefaultData</DefaultData>
<ExtentSize>117</ExtentSize>
<Data name="partintroDefaultData">
<Subscript>"partintro"</Subscript>
<Value name="1">
<Value>part</Value>
</Value>
</Data>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>55</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.76</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.8547%</Selectivity>
<OutlierSelectivity>.367521:</OutlierSelectivity>
<AverageFieldSize>3.56</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>20.0000%</Selectivity>
<AverageFieldSize>3.96</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>9.4017%</Selectivity>
<OutlierSelectivity>.905983:</OutlierSelectivity>
<AverageFieldSize>1.13</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>9.4017%</Selectivity>
<OutlierSelectivity>.905983:0</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>2.2373%</Selectivity>
<OutlierSelectivity>.239316:"RCPF"</OutlierSelectivity>
<AverageFieldSize>4.27</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>50.0000%</Selectivity>
<AverageFieldSize>.63</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>2.2373%</Selectivity>
<OutlierSelectivity>.239316:86</OutlierSelectivity>
<AverageFieldSize>2.39</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.8547%</Selectivity>
<OutlierSelectivity>.25641:</OutlierSelectivity>
<AverageFieldSize>4.22</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.8547%</Selectivity>
<OutlierSelectivity>.367521:</OutlierSelectivity>
<AverageFieldSize>3.56</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>2.4929%</Selectivity>
<OutlierSelectivity>.700855:</OutlierSelectivity>
<AverageFieldSize>2.44</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.03</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>12.5000%</Selectivity>
<AverageFieldSize>1.03</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>4.3478%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="part">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>50.0000%</Selectivity>
<AverageFieldSize>5.59</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>1.7288%</Selectivity>
<OutlierSelectivity>.239316:"RCPF.xml"</OutlierSelectivity>
<AverageFieldSize>9.03</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>8.5470%</Selectivity>
<OutlierSelectivity>.487179:"2019-09-22 19:31:34"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>9.4017%</Selectivity>
<OutlierSelectivity>.905983:</OutlierSelectivity>
<AverageFieldSize>1.13</AverageFieldSize>
</Property>
<SQLMap name="$partintro">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.preface">
<Description>
A preface: Introductory material before the start of a book.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.component</Super>
<TimeChanged>65278,75366.771532</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="GetBannerInfo">
<Internal>1</Internal>
<FormalSpec>info:DocBook.UI.BannerInfo</FormalSpec>
<Implementation><![CDATA[
	Set info.title = ..title
	If (..book '= "") {
		Set info.booktitle = ..book.title
	}
	Else {
		Set info.booktitle = ""
	}
	
	Set info.chap = ""
	
	// find prev/next chapter
	If ($G(%tutorial)'=1) {
		Do ..GetNextPrevInfo(info)
	}
]]></Implementation>
</Method>

<Method name="GetGotoList">
<Internal>1</Internal>
<FormalSpec><![CDATA[&gtl:cdata]]></FormalSpec>
<Implementation><![CDATA[

	Set id = ..%Id()

	// list all of the sect1 blocks
	&sql(DECLARE G1Cursor CURSOR FOR
		SELECT ID,blockid, title
		INTO :sid, :key, :title
		FROM sect1
		WHERE container = :id
	)

	&sql(OPEN G1Cursor)
	&sql(FETCH G1Cursor)

	Set num = 1
	While (SQLCODE = 0) {
		Set gtl(num) = $LB("#" _ key,title)
		&sql(FETCH G1Cursor)
		Set num = num + 1
	}

	&sql(CLOSE G1Cursor)
	
	Quit
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>147</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>53</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.61</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.6803%</Selectivity>
<AverageFieldSize>5.61</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>3.79</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>1.7857%</Selectivity>
<OutlierSelectivity>.857143:"About This Book"</OutlierSelectivity>
<AverageFieldSize>15.31</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>0.6803%</Selectivity>
<AverageFieldSize>4.4</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>50.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>0.6803%</Selectivity>
<AverageFieldSize>2.37</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.6803%</Selectivity>
<AverageFieldSize>2.37</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>1.3605%</Selectivity>
<OutlierSelectivity>.482993:</OutlierSelectivity>
<AverageFieldSize>6.51</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.4</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>5.4422%</Selectivity>
<OutlierSelectivity>.346939:7</OutlierSelectivity>
<AverageFieldSize>1.04</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.6667%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>10.4308%</Selectivity>
<OutlierSelectivity>.687075:"Cache"</OutlierSelectivity>
<AverageFieldSize>6.01</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.6803%</Selectivity>
<AverageFieldSize>8.4</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>7.6923%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.6803%</Selectivity>
<OutlierSelectivity>.986395:</OutlierSelectivity>
<AverageFieldSize>.69</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.6803%</Selectivity>
<AverageFieldSize>28.96</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>1.7857%</Selectivity>
<OutlierSelectivity>.857143:"About This Book"</OutlierSelectivity>
<AverageFieldSize>15.45</AverageFieldSize>
</Property>
<SQLMap name="$preface">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.product">
<Super>%Persistent</Super>
<TimeChanged>65278,75366.792533</TimeChanged>
<TimeCreated>64152,52742.494571</TimeCreated>

<Property name="Name">
<Type>%String</Type>
</Property>

<Index name="MainIdx">
<IdKey>1</IdKey>
<Properties>Name</Properties>
<Unique>1</Unique>
</Index>

<Property name="DisplayName">
<Type>%String</Type>
</Property>

<Method name="%OnBeforeSave">
<FormalSpec>insert:%Boolean</FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<ServerOnly>1</ServerOnly>
<Implementation><![CDATA[
	if (..Name="cache") {
		set ..DisplayName="Cache"
	} elseif (..Name="ensemble") {
		set ..DisplayName="Ensemble"
	} elseif (..Name="healthshare") {
		set ..DisplayName="HealthShare"
	} elseif (..Name="trakcare") {
		set ..DisplayName="TrakCare"
	} else {
		set char1=$$$UPPER($E(..Name,1))
		set ..DisplayName=char1_$E(..Name,2,*)
	}
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="GetLogicalName">
<ClassMethod>1</ClassMethod>
<FormalSpec>DisplayName:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	&sql(SELECT Name into :LogicalName FROM DocBook.product WHERE DisplayName=:DisplayName)
	if (SQLCODE=0) {
		quit LogicalName
	} else {
		quit ""
	}
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^DocBook.productD</DataLocation>
<DefaultData>productDefaultData</DefaultData>
<IdLocation>^DocBook.productD</IdLocation>
<IndexLocation>^DocBook.productI</IndexLocation>
<StreamLocation>^DocBook.productS</StreamLocation>
<ExtentSize>3</ExtentSize>
<Data name="productDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>DisplayName</Value>
</Value>
</Data>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>8</AverageFieldSize>
</Property>
<Property name="DisplayName">
<Selectivity>33.3333%</Selectivity>
<AverageFieldSize>8</AverageFieldSize>
</Property>
<Property name="Name">
<Selectivity>1</Selectivity>
<AverageFieldSize>8</AverageFieldSize>
</Property>
<SQLMap name="MainIdx">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.programlisting">
<Description>
Represents a programming example.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.block</Super>
<TimeChanged>65278,75366.931824</TimeChanged>
<TimeCreated>58696,41768</TimeCreated>

<Property name="syntaxError">
<Description>
If there is a syntax error in this programlisting, this is true</Description>
<Type>%Boolean</Type>
</Property>

<Property name="errorInfo">
<Description>
This is the value of $ZERROR is the coloring failed</Description>
<Type>cdata</Type>
</Property>

<Property name="errorLang">
<Description>
This is the value of "lang" when an error is reported</Description>
<Type>cdata</Type>
</Property>

<Method name="HTMLRenderContent">
<Internal>1</Internal>
<Implementation><![CDATA[

    Set mt = ""
    //Set:(%ie||%ie6) mt = "oncontextmenu=""if (!event.ctrlKey){showContextMenu();return false;} else {menu1.style.display='none'}"""

    Set lang = $ZCVT($P(..lang,":",1),"U")
    If (lang = "COS") {
        Set lang = "ObjectScript"
    }
    ElseIf (lang = "BAS") {
        Set lang = "Basic"
    }
    ElseIf (lang = "JAVASCRIPT") {
        Set lang = "JavaScript"
    }
    ElseIf (lang = "CSP") {
        Set lang = "CSP"
    }
    ElseIf (lang = "XML") {
        Set lang = "XML"
    }
    ElseIf (lang = "XML!FRAGMENT") {
        Set lang = "XML!FRAGMENT"
    }
    ElseIf (lang = "HTML") {
        Set lang = "HTML"
    }
    ElseIf (lang = "SQL") {
        Set lang = "SQL"
    }
    ElseIf (lang = "TSQL") {
        Set lang = "TSQL"
    }
    ElseIf (lang [ "CLS") {
        Set lang = "Cache Class Definition Syntax"
    }
    ElseIf (lang [ "JAVA") {
        Set lang = "Java"
    }
    Else {
        Set lang = ""
    }
    
    Set:lang'="" lang = "This example uses " _ lang _ "."
    // neuter hover text
    Set lang=""

    Write "<DIV CLASS=""programlisting"" TITLE=""",lang,""" TEXTID=""",..id,""" ",mt,">"
    Write "<A name=""",..id,"""></A>",!
    If (..renderedContent = "") {
        Write "<PRE>",..content,"</PRE>",!
    }
    Else {
        Write "<PRE>",..renderedContent,"</PRE>",!
    }
    
    /*
    Write "<P>"
    Write ..id
    Write "<P>"
    Write "<BR">
    */
    If (($ZCVT($P(..lang,":",2),"U")="RUN") && $ZUTIL(90, 10, "SAMPLES")) {
        // if run flag is set, and SAMPLES exists, show button
        Write "<DIV ALIGN=""right"">"
        Write "<FORM>"
        Write "<INPUT CLASS=""runitbutton"" TYPE=""BUTTON"" VALUE=""", $$$T("Run It"), """ onclick=""executeExample('", ..id, "');"">"
        Write "&nbsp;"
        Write "</FORM>"
        Write "</DIV>", !
    }
    Write "</DIV>",!
]]></Implementation>
</Method>

<Method name="Colorize">
<Description><![CDATA[
Generate, if appropriate, a syntax-colored 
version of this program listing.<BR>
Returns an error message (or "")]]></Description>
<Internal>1</Internal>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[

    ; Format of the attribute list
    ; A sequence of 5-element chunks as follows: 
    ; +0 - the uri
    ; +1 - local (unqualified) name
    ; +2 - qualified name
    ; +3 - the type ("CDATA", NMTOKEN", "ENTITY", etc.)
    ; +4 - the attribute value.
    ;
    Set ColorizerDebug = 0
    Set attrs = ..tagattrs
    For i = 1:5:$LL(attrs) {
        Set attrname = $LG(attrs,i+1)
        If (attrname '= "") {
            If (attrname = "condition") {
                Set attrvalue = $LG(attrs,i+4)
                Set:(attrvalue = "DEBUG") ColorizerDebug = 1
                }
            }
        }

    Set errmsg = ""

    // get lang name    
    Set lang = $ZCVT($P(..lang,":",1),"U")

    If (lang = "CACHE") {
        Set lang = "COS"
    }

    Set ..renderedContent = ""
    Set errString = ""
    Set ..errorLang = lang
    
    // strip out leading/trailing CRLFs (control chars)
    // Don't strip tabs
    // Set ..content = $ZSTRIP(..content,"<>C",,$C(9))

    If ((lang '= "") && (lang '= "NONE")) {
        Set cont = $ZCVT(..content,"I","HTML")
        
        Set streamIn = ##class(%GlobalCharacterStream).%New()

        // convert to CR/LF
        Set cont = $TR(cont,$C(13),"")
        For i=1:1:$L(cont,$C(10)) {
            Do streamIn.Write($P(cont,$C(10),i) _ $C(13,10))
        }
        
        Do streamIn.Rewind()
        
        Set streamOut = ##class(%GlobalCharacterStream).%New()

        Set errors = 0
        Set errString = ""
        Do ..RenderCode(..id,streamIn,lang,ColorizerDebug,streamOut,.errors,.errString)
        
        Set ..syntaxError = 0
        Set ..errorInfo = errString
        Set:(errors) ..syntaxError = 1
    
        Do streamOut.Rewind()
        Set ..renderedContent = streamOut.Read(32000)
        
        // strip again, just in case!
        Set ..renderedContent = $ZSTRIP(..renderedContent,"<>C")
    }
    Quit errmsg
]]></Implementation>
</Method>

<Method name="RenderCode">
<Internal>1</Internal>
<FormalSpec><![CDATA[progname:%String,streamIn:%CharacterStream,lang:%String,debugdll:%Boolean,streamOut:%AbstractStream,&errors:%Boolean,&errorinfo:%String]]></FormalSpec>
<Implementation><![CDATA[

    Set $ZT="TrapColor"
    Set flags = "ESFNUJ"

    If (lang = "COSX") {
        // special EXACT coloring mode
        Set lang = "COS"
        Set flags = "ESF"
    }

    If lang="NONE" Goto LangNone
    
    If (debugdll)
    {
        Write $$$T("Invoking Colorizer in debug mode"),!
        Set flags = flags _ "I"
        Write $$$T("Lang: "), lang, "; ", $$$T("Flags: "), flags, !
    }

    Set synColor=##class(%Library.SyntaxColor).%New()
    Set streamHtmlOut=##class(%GlobalCharacterStream).%New()
    
    #; This will generate the colored output, if it fails (returns FALSE) then display output in plain text
    Set errors = 0
    Set errorinfo = ""
    Set colored = synColor.Color(streamIn,streamHtmlOut,lang,flags,,,.langs,.errors,.errorinfo)
    Goto:('colored) EchoInput
    
    Do streamOut.CopyFrom(streamHtmlOut)
    Goto CheckErrors
    
    #; If we get an error coloring the routine just display the plain text instead
    #; so this will handle cases where color does not work or is not installed on this platform
TrapColor      Set $ZT=""
    Write $$$T("Fault occurred in colorizer DLL"), !
    Set colored = synColor.DLLResultCode
    Write $$$T("DLLResultCode: "), $SELECT((colored'=""):colored, 1:$$$T("[not supplied]")), !
    Set errors = 1

EchoInput
    Do streamOut.Write("<!-- DLLResultCode: " _ $ZCVT(synColor.DLLResultCode, "O", "HTML") _ " -->")
    Do streamOut.Write($CHAR(13, 10))
    Do streamOut.Write("<!-- ErrorInfo: " _ $ZCVT(errorinfo, "O", "HTML") _ " -->")
    Do streamOut.Write($CHAR(13, 10))
    If ($ZCONVERT(synColor.DLLResultCode, "U") [ "ZF6 FAILED")
    {
        Goto LangNone
    }
    Do streamOut.Write("<!-- input echo -->")
    Do streamOut.Write("<PRE>")
    Do streamOut.Write($CHAR(13, 10))
    Do streamIn.Rewind()
    Do streamOut.Write(..content)
    Do streamOut.Write($CHAR(13, 10))
    Do streamOut.Write("</PRE>")
    Do streamOut.Write($CHAR(13, 10))
    
CheckErrors
    If ('(##class(DocBook.ConfigUtils).GetIGNORECOLORERROR()))
    {
        If 'colored,'errors {
            Write $$$T("Fault occurred in colorizer DLL"), !
            Set colored = synColor.DLLResultCode
            Write $$$T("DLLResultCode: "), $SELECT((colored'=""):colored, 1:$$$T("[not supplied]")), !
        }
        ElseIf (errors) 
        {
            Set errmsg = $$$T("BAD SYNTAX in programlisting: ") _ progname
            Write errmsg,!
            Write $$$T("Language: "), lang, !
            Set RetCode = synColor.DLLResultCode
            //Set DispPfx = $$$T("ERROR: ")
            Set DispPfx = $$$T("WARN: ")
            Set:((RetCode = "") || ( RetCode = "OK")) DispPfx = ""
            Write DispPfx, $$$T("DLLResultCode: ") _ RetCode, !
            Write $$$T("ErrorInfo: ") _ errorinfo, !
            // display part of bad syntax
            Write "----------------------------------",!
            write $$$T("Input stream:"), !
            Do streamIn.Rewind()
            Write $ZCVT(streamIn.Read(streamIn.Size),"O","HTML"),!
            Write "----------------------------------",!
            write $$$T("Output stream:"), !
            Do streamOut.Rewind()
            Write $ZCVT(streamOut.Read(streamOut.Size),"O","HTML"),!
            Write !
        }
    }
    Do streamIn.Rewind()
    Do streamOut.Rewind()
    Quit
    
LangNone
    Quit
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>programlistingDefaultData</DefaultData>
<ExtentSize>14327</ExtentSize>
<Data name="programlistingDefaultData">
<Subscript>"programlisting"</Subscript>
<Value name="1">
<Value>syntaxError</Value>
</Value>
<Value name="2">
<Value>errorInfo</Value>
</Value>
<Value name="3">
<Value>errorLang</Value>
</Value>
</Data>
<Property name="%%CLASSNAME">
<Selectivity>0.0195%</Selectivity>
<OutlierSelectivity>.99805:"~DocBook.programlisting~"</OutlierSelectivity>
<AverageFieldSize>24</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.48</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.1674%</Selectivity>
<AverageFieldSize>5.21</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>14.2857%</Selectivity>
<AverageFieldSize>3.64</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0195%</Selectivity>
<OutlierSelectivity>.99805:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>0.0195%</Selectivity>
<OutlierSelectivity>.99805:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>0.9736%</Selectivity>
<OutlierSelectivity>.116992:"RSQL"</OutlierSelectivity>
<AverageFieldSize>4.31</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>2.9804%</Selectivity>
<OutlierSelectivity>.4039:1</OutlierSelectivity>
<AverageFieldSize>1.08</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>0.9736%</Selectivity>
<OutlierSelectivity>.116992:46</OutlierSelectivity>
<AverageFieldSize>2.06</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.1674%</Selectivity>
<AverageFieldSize>5.21</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.0164%</Selectivity>
<AverageFieldSize>5.48</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0070%</Selectivity>
<AverageFieldSize>210.35</AverageFieldSize>
</Property>
<Property name="errorInfo">
<Selectivity>0.0195%</Selectivity>
<OutlierSelectivity>.99805:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="errorLang">
<Selectivity>5.8496%</Selectivity>
<OutlierSelectivity>.415042:</OutlierSelectivity>
<AverageFieldSize>2.41</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>2.1929%</Selectivity>
<OutlierSelectivity>.29805:</OutlierSelectivity>
<AverageFieldSize>7.36</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>11.72</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>2.7854%</Selectivity>
<OutlierSelectivity>.415042:</OutlierSelectivity>
<AverageFieldSize>3.25</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.0636%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>2.9248%</Selectivity>
<OutlierSelectivity>.941504:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.18</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0195%</Selectivity>
<OutlierSelectivity>.99805:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0070%</Selectivity>
<OutlierSelectivity>.518106:</OutlierSelectivity>
<AverageFieldSize>860.6</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.8356%</Selectivity>
<OutlierSelectivity>.991643:</OutlierSelectivity>
<AverageFieldSize>.03</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.3093%</Selectivity>
<AverageFieldSize>13.4</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>9.0909%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0195%</Selectivity>
<OutlierSelectivity>.99805:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="syntaxError">
<Selectivity>49.9999%</Selectivity>
<AverageFieldSize>.48</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>2.6037%</Selectivity>
<OutlierSelectivity>.401114:$lb("","format","format","NOTATION","linespecific")</OutlierSelectivity>
<AverageFieldSize>59.04</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0195%</Selectivity>
<OutlierSelectivity>.99805:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$programlisting">
<BlockCount>-24</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.qandadiv">
<Description>
A question and answer division</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75366.999751</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[
	Write "<DIV CLASS=""qandadiv"">"
	Write "<A name=""",..id,"""></A>",!
	Write ..title,"</DIV>",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>29</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>36</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.79</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>5.79</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>25.0000%</Selectivity>
<AverageFieldSize>3.93</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>3.5714%</Selectivity>
<AverageFieldSize>17.14</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>4.55</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>7.1429%</Selectivity>
<AverageFieldSize>1.14</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>1.93</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>5.79</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>7.3892%</Selectivity>
<OutlierSelectivity>.482759:151623</OutlierSelectivity>
<AverageFieldSize>5.79</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>7.76</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.34</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>9.0909%</Selectivity>
<AverageFieldSize>1.1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>8.6207%</Selectivity>
<OutlierSelectivity>.482759:"2019-09-22 20:45:31"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>5</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>9.1</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>33.3333%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>3.4483%</Selectivity>
<OutlierSelectivity>.931034:</OutlierSelectivity>
<AverageFieldSize>2.28</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>3.5714%</Selectivity>
<AverageFieldSize>17.38</AverageFieldSize>
</Property>
<SQLMap name="$qandadiv">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.qandaentry">
<Description>
A question and answer entry.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75367.090493</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[
	Write "<DIV CLASS=""qandaentry"">"
	Write "<A name=""",..id,"""></A>",!
	Write ..title,"</DIV>",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>133</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>38</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.68</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>5.68</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>25.0000%</Selectivity>
<AverageFieldSize>3.97</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>4.66</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>7.1429%</Selectivity>
<AverageFieldSize>1.07</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>1.95</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>5.68</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>3.4483%</Selectivity>
<AverageFieldSize>5.68</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>11.17</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.35</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>14.2857%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>5</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>8.9</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>33.3333%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$qandaentry">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.qandaset">
<Description>
A question and answer set.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75367.140013</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[
	// show list of divisions
	Write "<DIV CLASS=""para"">", $$$T("This Question and Answer Set includes the following topics:"), "<MENU>", !
	
	Do ..ShowTopics()
	
	Write "</MENU></DIV><HR>"

	Write "<DIV CLASS=""qandaset"">"
	Write "<A name=""",..id,"""></A>",!
	Write ..title,"</DIV>",!
]]></Implementation>
</Method>

<Method name="ShowTopics">
<Internal>1</Internal>
<Implementation><![CDATA[

	Set id = ..%Id()
	
	&sql(DECLARE sql1 CURSOR FOR
		SELECT ID,blockID,title 
		INTO :did,:bid, :title
		FROM qandadiv 
		WHERE container = :id
		ORDER BY title
	)

	&sql(OPEN sql1)

	&sql(FETCH sql1)
	While (SQLCODE = 0) {
		Write "<LI><A CLASS=""TOCSect1"" HREF=""#",bid,""">",title,"</A></LI>",!
		&sql(FETCH sql1)
	}
	&sql(CLOSE sql1)
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>8</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>36</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.75</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>5.75</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>25.0000%</Selectivity>
<AverageFieldSize>3.88</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>5</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>12.5000%</Selectivity>
<OutlierSelectivity>.875:0</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>1.75</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>5.75</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>12.5000%</Selectivity>
<AverageFieldSize>5.75</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>10.38</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.75</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>20.0000%</Selectivity>
<AverageFieldSize>1.13</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>5</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>10</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>33.3333%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$qandaset">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.question">
<Description>
A question.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75367.194966</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[
	Write "<DIV CLASS=""question""><SPAN CLASS=""note"">", $$$T("Question:"), "</SPAN>"
	Write "<A name=""",..id,"""></A>",!
	Write ..title,"</DIV>",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>133</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>36</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.68</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>5.68</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>25.0000%</Selectivity>
<AverageFieldSize>3.97</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>4.66</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>1.95</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>5.68</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.7519%</Selectivity>
<AverageFieldSize>5.68</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>11.17</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.35</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>1.1278%</Selectivity>
<OutlierSelectivity>.977444:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>14.2857%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>5</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>16.6667%</Selectivity>
<AverageFieldSize>8.9</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>33.3333%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.7519%</Selectivity>
<OutlierSelectivity>.984962:</OutlierSelectivity>
<AverageFieldSize>.49</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$question">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.refdescriptor">
<Description>
The name of the contents of a refentry.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.block</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>58696,41768</TimeCreated>

<Method name="HTMLRenderContent">
<Description>
Render the contents of this block</Description>
<Internal>1</Internal>
<Implementation><![CDATA[
	quit:($LENGTH($ZSTRIP(..content, "<>W")) = 0)
	Write "<DIV CLASS=""refdescriptor"">"
	Write ..content
	Write "</DIV>",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
</Storage>
</Class>


<Class name="DocBook.refentry">
<Description>
Represents a reference entry.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.component</Super>
<TimeChanged>65278,75367.273334</TimeChanged>
<TimeCreated>58696,41768</TimeCreated>

<Property name="refmeta">
<Type>refmeta</Type>
</Property>

<Method name="GetGotoList">
<Internal>1</Internal>
<FormalSpec><![CDATA[&gtl:cdata]]></FormalSpec>
<Implementation><![CDATA[
	Set id = ..%Id()

	// list all of the sect1 blocks
	&sql(DECLARE G1Cursor CURSOR FOR
		SELECT ID,blockid, title
		INTO :sid, :key, :title
		FROM refsect1
		WHERE container = :id
	)

	&sql(OPEN G1Cursor)
	&sql(FETCH G1Cursor)

	Set num = 1
	While (SQLCODE = 0) {
		Set gtl(num) = $LB("#" _ key,title)
		&sql(FETCH G1Cursor)
		Set num = num + 1
	}

	&sql(CLOSE G1Cursor)
	
	Quit
]]></Implementation>
</Method>

<Method name="GetBannerInfo">
<Internal>1</Internal>
<FormalSpec>info:DocBook.UI.BannerInfo</FormalSpec>
<Implementation><![CDATA[
	Set info.title = ..refmeta.refentrytitle
	If (..book '= "") {
		Set info.booktitle = ..book.title
	}
	Else {
		Set info.booktitle = ""
	}		

	If (..container = "") {
		Set info.chap = ""
		Quit
	}
	
	Set info.chap = ..container.title
	
	// find prev/next chapter

	If (..container = "") {
		Quit
	}
	Set cid = ..container.%Id()
	Set pos = ..blockpos
	
	&sql(SELECT blockid INTO :prev
		FROM refentry 
		WHERE (container = :cid) AND (blockpos < :pos)
		ORDER BY blockpos DESC)
		
	If (SQLCODE = 0) {
		Set info.prev = prev
	}
		
	&sql(SELECT blockid INTO :next
		FROM refentry 
		WHERE (container = :cid) AND (blockpos > :pos)
		ORDER BY blockpos)
		
	If (SQLCODE = 0) {
		Set info.next = next
	}
]]></Implementation>
</Method>

<Method name="XMLRenderPreChildren">
<Description>
render any XML before children</Description>
<Internal>1</Internal>
<Implementation><![CDATA[
	// assume class name is XML element name

	Set attr = ""
	If (..id '= "") {
		Set attr = attr _ " id=""" _ ..id _ """"
	}
	If (..role '= "") {
		Set attr = attr _ " role=""" _ ..role _ """"
	}
	
	Write "<",..%ClassName(),attr,">",!

	Write "<refmeta>",!
	If (..refmeta.refentrytitle '= "") {
		Write "<refentrytitle>", ..refmeta.refentrytitle, "</refentrytitle>",!
	}
	Write "</refmeta>",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>refentryDefaultData</DefaultData>
<ExtentSize>1882</ExtentSize>
<Data name="refentryDefaultData">
<Structure>listnode</Structure>
<Subscript>"refentry"</Subscript>
<Value name="1">
<Value>refmeta</Value>
</Value>
</Data>
<Property name="%%CLASSNAME">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:"~DocBook.container~DocBook.component~DocBook.refentry~"</OutlierSelectivity>
<AverageFieldSize>54</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.47</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.0531%</Selectivity>
<AverageFieldSize>5.47</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>25.0000%</Selectivity>
<AverageFieldSize>3.53</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0531%</Selectivity>
<AverageFieldSize>10.38</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>5.5522%</Selectivity>
<AverageFieldSize>4.52</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>0.8001%</Selectivity>
<AverageFieldSize>1.84</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>5.5522%</Selectivity>
<AverageFieldSize>2.12</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>2.2588%</Selectivity>
<AverageFieldSize>5.47</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>7.6921%</Selectivity>
<AverageFieldSize>7.22</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>14.21</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>7.0936%</Selectivity>
<OutlierSelectivity>.361538:5</OutlierSelectivity>
<AverageFieldSize>1.03</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.7679%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>8.4615%</Selectivity>
<OutlierSelectivity>.915385:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.25</AverageFieldSize>
</Property>
<Property name="refmeta">
<Selectivity>0.0531%,refentrytitle:0.0531%</Selectivity>
<AverageFieldSize>12.85,refentrytitle:10.85</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.4779%</Selectivity>
<AverageFieldSize>14.16</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>8.4615%</Selectivity>
<OutlierSelectivity>.576923:"2019-09-22 19:31:34"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.0531%</Selectivity>
<AverageFieldSize>30.52</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0531%</Selectivity>
<AverageFieldSize>10.85</AverageFieldSize>
</Property>
<SQLMap name="$refentry">
<BlockCount>-12</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.reference">
<Description>
The reference section of a book.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.component</Super>
<TimeChanged>65278,75367.328963</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="GetBannerInfo">
<Internal>1</Internal>
<FormalSpec>info:DocBook.UI.BannerInfo</FormalSpec>
<Implementation><![CDATA[
	Set info.title = $$$T("Contents")
	Set info.booktitle = ..title
	Set info.chap = ""
	Set info.prev = ""
	Set info.next = ""
]]></Implementation>
</Method>

<Method name="HTMLRender">
<Description>
render this container's children</Description>
<Internal>1</Internal>
<Implementation><![CDATA[

	Set id = ..%Id()
	
	&sql(DECLARE PartIntroCursor CURSOR FOR
		SELECT ID
		INTO :partintrokey
		FROM partintro
		WHERE container = :id
	)

	&sql(OPEN PartIntroCursor)
	&sql(FETCH PartIntroCursor)
	if (SQLCODE = 0)
	{

		set partintroref = ##class(DocBook.partintro).%OpenId(partintrokey)
		do partintroref.HTMLRender()
	}
	else
	{
	}
	&sql(CLOSE PartIntroCursor)
	
	&sql(DECLARE REFCursor CURSOR FOR
		SELECT blockid, refmeta_refentrytitle
		INTO :key, :title
		FROM refentry
		WHERE container = :id
		ORDER BY refmeta_refentrytitle
	)

	&sql(OPEN REFCursor)
	&sql(FETCH REFCursor)

	// Show only top level for Reference books 
	Set last = ""

	&html<<TABLE CELLPADDING="5" CELLSPACING="0" BORDER="0" WIDTH="100%">>
	If ..subtitle'="" { &html<<TR><TD ALIGN="RIGHT" WIDTH="20%">&nbsp;</TD><TD><DIV CLASS="subtitle">#(..subtitle)#</DIV></TD></TR>> }
	&html<<TR><TD ALIGN="RIGHT" WIDTH="20%">&nbsp;</TD><TD>>
	Write "<DIV CLASS=""TOC""><B>", $$$T("Contents"), "</B></DIV>",!
	&html<<HR></TD></TR>>

	While (SQLCODE = 0) {
		// look at first letter of string
		Set c = $ZCONVERT($E(title,1,1), "U")
		If (c = "&") {
		    If ($LENGTH(title, ";") > 1) {
		        Set c = $PIECE(title, ";") _ ";"
		    }
		}
		If ((c '= last)) {
			if (c?1ANP) {
				&html<<TR>>
				&html<<TD WIDTH="20%">&nbsp;</TD>>
				&html<<TD ALIGN="LEFT" CLASS="Letter">&#151; #(c)# &#151;</TD>>
				&html<</TR>>
			} else {
				// skip for Japanese
			}
		}
		
		Set last = c

		&html<<TR><TD ALIGN="RIGHT" WIDTH="20%">&nbsp;</TD><TD ALIGN="LEFT">
			<DIV CLASS="TOC">
			<A CLASS="TOCRef" HREF='DocBook.UI.Page.cls?KEY=#($ZCVT(key,"O","URL"))#'>#(title)#</A>
			</DIV>
			</TD></TR>
		>
		&sql(FETCH REFCursor)
	}

	&html<</TABLE>>
	&sql(CLOSE REFCursor)
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>106</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>55</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.56</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.9434%</Selectivity>
<AverageFieldSize>5.56</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>25.0000%</Selectivity>
<AverageFieldSize>3.44</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>1.0638%</Selectivity>
<AverageFieldSize>18.08</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>2.7254%</Selectivity>
<OutlierSelectivity>.264151:"RCPF"</OutlierSelectivity>
<AverageFieldSize>4.3</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>3.4483%</Selectivity>
<AverageFieldSize>1.26</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>2.7254%</Selectivity>
<OutlierSelectivity>.264151:86</OutlierSelectivity>
<AverageFieldSize>2.18</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>2.7254%</Selectivity>
<OutlierSelectivity>.264151:86</OutlierSelectivity>
<AverageFieldSize>2.18</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>3.9505%</Selectivity>
<OutlierSelectivity>.367925:</OutlierSelectivity>
<AverageFieldSize>5.55</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>14.46</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>2.0908%</Selectivity>
<OutlierSelectivity>.226415:2</OutlierSelectivity>
<AverageFieldSize>1.42</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>4.1667%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>50.0000%</Selectivity>
<AverageFieldSize>5.51</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>1.9364%</Selectivity>
<OutlierSelectivity>.264151:"RCPF.xml"</OutlierSelectivity>
<AverageFieldSize>9.14</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>8.4906%</Selectivity>
<OutlierSelectivity>.575472:"2019-09-22 19:31:34"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.9434%</Selectivity>
<OutlierSelectivity>.990566:</OutlierSelectivity>
<AverageFieldSize>.71</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.9434%</Selectivity>
<AverageFieldSize>35.79</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>1.0638%</Selectivity>
<AverageFieldSize>18.67</AverageFieldSize>
</Property>
<SQLMap name="$reference">
<BlockCount>-8</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.refmeta">
<Description>
Meta-information for a reference entry.</Description>
<ClassType>serial</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>%Library.SerialObject</Super>
<TimeChanged>65278,70283</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Property name="refentrytitle">
<Type>cdata</Type>
</Property>

<Storage name="Default">
<Type>%Library.CacheSerialState</Type>
<State>refmetaState</State>
<StreamLocation>^DocBook.refmetaS</StreamLocation>
<Data name="refmetaState">
<Value name="1">
<Value>refentrytitle</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="DocBook.refname">
<Description>
The name of the contents of a refentry.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.block</Super>
<TimeChanged>65278,75367.392763</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderContent">
<Description>
Render the contents of this block</Description>
<Internal>1</Internal>
<Implementation><![CDATA[
	// supress rendering of this block

]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>1882</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:"~DocBook.refname~"</OutlierSelectivity>
<AverageFieldSize>17</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.72</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.0531%</Selectivity>
<AverageFieldSize>5.48</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>25.0000%</Selectivity>
<AverageFieldSize>3.48</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:0</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>5.5522%</Selectivity>
<AverageFieldSize>4.35</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:0</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>5.5522%</Selectivity>
<AverageFieldSize>2.14</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.0531%</Selectivity>
<AverageFieldSize>5.48</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.0531%</Selectivity>
<AverageFieldSize>5.72</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0594%</Selectivity>
<AverageFieldSize>11.16</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>7.6921%</Selectivity>
<AverageFieldSize>8.65</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.02</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.7220%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>6.1538%</Selectivity>
<OutlierSelectivity>.938462:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.18</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.4779%</Selectivity>
<AverageFieldSize>14.02</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>7.0767%</Selectivity>
<OutlierSelectivity>.646154:"2019-09-22 19:31:34"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$refname">
<BlockCount>-12</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.refnamediv">
<Description>
Contains the name section of a refentry.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75367.457738</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>1882</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:"~DocBook.container~DocBook.refnamediv~"</OutlierSelectivity>
<AverageFieldSize>38</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.66</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.0531%</Selectivity>
<AverageFieldSize>5.42</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>25.0000%</Selectivity>
<AverageFieldSize>3.53</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:0</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>5.5522%</Selectivity>
<AverageFieldSize>4.39</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:0</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>5.5522%</Selectivity>
<AverageFieldSize>2.12</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.0531%</Selectivity>
<AverageFieldSize>5.42</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.0531%</Selectivity>
<AverageFieldSize>5.42</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>7.6921%</Selectivity>
<AverageFieldSize>7.19</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.02</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:2</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.8152%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>8.4615%</Selectivity>
<OutlierSelectivity>.915385:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.25</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.4779%</Selectivity>
<AverageFieldSize>14.31</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>7.6922%</Selectivity>
<OutlierSelectivity>.615385:"2019-09-22 19:31:34"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$refnamediv">
<BlockCount>-16</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.refpurpose">
<Description>
A summary of the topic of a reference page.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.block</Super>
<TimeChanged>65278,75367.54717</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderContent">
<Internal>1</Internal>
<Implementation><![CDATA[
	Write "<DIV CLASS=""para"">",##class(DocBook.Renderer).FilterText(..content),"</DIV>",!

]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>1882</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:"~DocBook.refpurpose~"</OutlierSelectivity>
<AverageFieldSize>20</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.65</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.0531%</Selectivity>
<AverageFieldSize>5.44</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>25.0000%</Selectivity>
<AverageFieldSize>3.45</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>5.8801%</Selectivity>
<AverageFieldSize>4.55</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>5.8801%</Selectivity>
<AverageFieldSize>2.09</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.0531%</Selectivity>
<AverageFieldSize>5.44</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.0531%</Selectivity>
<AverageFieldSize>5.65</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0594%</Selectivity>
<AverageFieldSize>86.18</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>7.1424%</Selectivity>
<AverageFieldSize>6.67</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.15</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.8152%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>7.6922%</Selectivity>
<OutlierSelectivity>.923077:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.23</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.5699%</Selectivity>
<AverageFieldSize>14.08</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>7.6922%</Selectivity>
<OutlierSelectivity>.615385:"2019-09-22 19:31:34"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0538%</Selectivity>
<OutlierSelectivity>.994615:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$refpurpose">
<BlockCount>-16</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.refsect1">
<Description>
Level 1 section of a reference entry.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75367.76332</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[
	Write "<DIV CLASS=""refsect1"">"
	Write "<A name=""",..id,"""></A>",!
	Write ..title,"</DIV>",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>5436</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>0.0317%</Selectivity>
<OutlierSelectivity>.996833:"~DocBook.container~DocBook.refsect1~"</OutlierSelectivity>
<AverageFieldSize>36</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.67</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.0471%</Selectivity>
<AverageFieldSize>5.36</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>25.0000%</Selectivity>
<AverageFieldSize>3.56</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>1.6520%</Selectivity>
<OutlierSelectivity>.271493:"Description"</OutlierSelectivity>
<AverageFieldSize>10.95</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>0.0317%</Selectivity>
<OutlierSelectivity>.996833:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>3.8347%</Selectivity>
<OutlierSelectivity>.19457:"RVBS"</OutlierSelectivity>
<AverageFieldSize>4.44</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>5.6938%</Selectivity>
<OutlierSelectivity>.316742:2</OutlierSelectivity>
<AverageFieldSize>1.02</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>3.8347%</Selectivity>
<OutlierSelectivity>.19457:61</OutlierSelectivity>
<AverageFieldSize>2.1</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.0471%</Selectivity>
<AverageFieldSize>5.36</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.0471%</Selectivity>
<AverageFieldSize>5.36</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0317%</Selectivity>
<OutlierSelectivity>.996833:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>6.6667%</Selectivity>
<AverageFieldSize>7.23</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>13.12</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0317%</Selectivity>
<OutlierSelectivity>.996833:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>3.8305%</Selectivity>
<OutlierSelectivity>.425339:1</OutlierSelectivity>
<AverageFieldSize>1.1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.7161%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>10.4072%</Selectivity>
<OutlierSelectivity>.895928:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.31</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0317%</Selectivity>
<OutlierSelectivity>.996833:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0317%</Selectivity>
<OutlierSelectivity>.996833:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0317%</Selectivity>
<OutlierSelectivity>.996833:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.2616%</Selectivity>
<AverageFieldSize>14.1</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>16.6666%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0317%</Selectivity>
<OutlierSelectivity>.996833:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.0317%</Selectivity>
<OutlierSelectivity>.996833:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.0184%</Selectivity>
<OutlierSelectivity>.78733:</OutlierSelectivity>
<AverageFieldSize>6.99</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>1.6520%</Selectivity>
<OutlierSelectivity>.271493:"Description"</OutlierSelectivity>
<AverageFieldSize>10.95</AverageFieldSize>
</Property>
<SQLMap name="$refsect1">
<BlockCount>-16</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.refsect2">
<Description>
Level 2 section of a reference entry.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75367.956315</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[
	Write "<DIV CLASS=""refsect2"">"
	Write "<A name=""",..id,"""></A>",!
	Write ..title,"</DIV>",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>2957</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>0.0429%</Selectivity>
<OutlierSelectivity>.995706:"~DocBook.container~DocBook.refsect2~"</OutlierSelectivity>
<AverageFieldSize>36</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.72</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.1933%</Selectivity>
<AverageFieldSize>5.25</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>24.9999%</Selectivity>
<AverageFieldSize>3.38</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.2595%</Selectivity>
<OutlierSelectivity>.263804:"Arguments"</OutlierSelectivity>
<AverageFieldSize>16.55</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>0.0429%</Selectivity>
<OutlierSelectivity>.995706:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>11.1111%</Selectivity>
<AverageFieldSize>4.01</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>3.7974%</Selectivity>
<OutlierSelectivity>.429448:1</OutlierSelectivity>
<AverageFieldSize>1.09</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>11.1111%</Selectivity>
<AverageFieldSize>2.04</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.1933%</Selectivity>
<AverageFieldSize>5.25</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.0743%</Selectivity>
<AverageFieldSize>5.72</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0429%</Selectivity>
<OutlierSelectivity>.995706:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>14.2857%</Selectivity>
<AverageFieldSize>8.93</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.62</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0429%</Selectivity>
<OutlierSelectivity>.995706:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>4.9069%</Selectivity>
<OutlierSelectivity>.509202:1</OutlierSelectivity>
<AverageFieldSize>1.03</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>2.6699%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>0.0341%</Selectivity>
<OutlierSelectivity>.993865:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.02</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0429%</Selectivity>
<OutlierSelectivity>.995706:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0429%</Selectivity>
<OutlierSelectivity>.995706:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0429%</Selectivity>
<OutlierSelectivity>.995706:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.2308%</Selectivity>
<AverageFieldSize>16.31</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>33.3332%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0429%</Selectivity>
<OutlierSelectivity>.995706:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.0429%</Selectivity>
<OutlierSelectivity>.995706:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.0338%</Selectivity>
<OutlierSelectivity>.815951:</OutlierSelectivity>
<AverageFieldSize>6.09</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.2595%</Selectivity>
<OutlierSelectivity>.263804:"Arguments"</OutlierSelectivity>
<AverageFieldSize>16.55</AverageFieldSize>
</Property>
<SQLMap name="$refsect2">
<BlockCount>-16</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.refsect3">
<Description>
Level 3 section of a reference entry.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75368.135428</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[
	Write "<DIV CLASS=""refsect3"">"
	Write "<A name=""",..id,"""></A>",!
	Write ..title,"</DIV>",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>357</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>36</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.9</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.8130%</Selectivity>
<AverageFieldSize>5.76</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>9.4304%</Selectivity>
<OutlierSelectivity>.717087:1250</OutlierSelectivity>
<AverageFieldSize>3.76</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.7964%</Selectivity>
<OutlierSelectivity>.187675:"General Attributes"</OutlierSelectivity>
<AverageFieldSize>17.36</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>7.0728%</Selectivity>
<OutlierSelectivity>.717087:"RCSP"</OutlierSelectivity>
<AverageFieldSize>4.01</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>6.2500%</Selectivity>
<AverageFieldSize>1.04</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>7.0728%</Selectivity>
<OutlierSelectivity>.717087:125</OutlierSelectivity>
<AverageFieldSize>2.73</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.8130%</Selectivity>
<AverageFieldSize>5.76</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.6993%</Selectivity>
<AverageFieldSize>5.9</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>7.0728%</Selectivity>
<OutlierSelectivity>.717087:"CSP;CSP+Zen;web technologies"</OutlierSelectivity>
<AverageFieldSize>22.57</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.29</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>2.3682%</Selectivity>
<OutlierSelectivity>.739496:1</OutlierSelectivity>
<AverageFieldSize>1.01</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.2301%</Selectivity>
<OutlierSelectivity>.717087:"2019-09-22 20:55:52"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>1.4006%</Selectivity>
<OutlierSelectivity>.985994:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.04</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.8130%</Selectivity>
<AverageFieldSize>14.49</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>8.8235%</Selectivity>
<OutlierSelectivity>.823529:"2019-09-22 19:31:34"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.2801%</Selectivity>
<OutlierSelectivity>.938375:</OutlierSelectivity>
<AverageFieldSize>2.11</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.7964%</Selectivity>
<OutlierSelectivity>.187675:"General Attributes"</OutlierSelectivity>
<AverageFieldSize>17.45</AverageFieldSize>
</Property>
<SQLMap name="$refsect3">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.refsynopsisdiv">
<Description>
A container for the synopsis of a reference entry.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75368.298914</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[
    Write "<DIV CLASS=""refsynopsisdiv"">", $$$T("Synopsis"), "</DIV>",!

]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>1367</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>0.0732%</Selectivity>
<OutlierSelectivity>.993694:"~DocBook.container~DocBook.refsynopsisdiv~"</OutlierSelectivity>
<AverageFieldSize>42</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.87</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.0732%</Selectivity>
<AverageFieldSize>5.59</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>25.0000%</Selectivity>
<AverageFieldSize>3.5</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0732%</Selectivity>
<OutlierSelectivity>.993694:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>0.0732%</Selectivity>
<OutlierSelectivity>.993694:0</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>9.9999%</Selectivity>
<AverageFieldSize>4.05</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>0.0732%</Selectivity>
<OutlierSelectivity>.993694:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>9.9999%</Selectivity>
<AverageFieldSize>2.16</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.0732%</Selectivity>
<AverageFieldSize>5.59</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.0732%</Selectivity>
<AverageFieldSize>5.59</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0732%</Selectivity>
<OutlierSelectivity>.993694:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>12.5000%</Selectivity>
<AverageFieldSize>8.78</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>11.85</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0732%</Selectivity>
<OutlierSelectivity>.993694:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>33.3333%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>2.1068%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>5.4054%</Selectivity>
<OutlierSelectivity>.945946:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.16</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0732%</Selectivity>
<OutlierSelectivity>.993694:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0732%</Selectivity>
<OutlierSelectivity>.993694:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0732%</Selectivity>
<OutlierSelectivity>.993694:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.4627%</Selectivity>
<AverageFieldSize>14.35</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>33.3333%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0732%</Selectivity>
<OutlierSelectivity>.993694:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.0732%</Selectivity>
<OutlierSelectivity>.993694:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.0734%</Selectivity>
<OutlierSelectivity>.837838:</OutlierSelectivity>
<AverageFieldSize>4.92</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0732%</Selectivity>
<OutlierSelectivity>.993694:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$refsynopsisdiv">
<BlockCount>-8</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.remark">
<Description>
Represents editorial material usually associated with a document
while it is in development</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.block</Super>
<TimeChanged>65278,75368.527632</TimeChanged>
<TimeCreated>58696,41768</TimeCreated>

<Property name="InclRemark">
<Description>
Indicate whether this remark should render itself</Description>
<Type>%Integer</Type>
</Property>

<Property name="remarkContent">
<Description>
The text content of this block</Description>
<Type>cdata</Type>
<Parameter name="MAXLEN" value="32000"/>
</Property>

<Method name="HTMLRenderContent">
<Internal>1</Internal>
<Implementation><![CDATA[
    //show anything
    if (..InclRemark)
    {
        Write "<DIV CLASS=""remark"">",!
        Write "<SPAN CLASS=""remark"">", $$$T("Comments/Questions for Reviewers of This Draft"), "</SPAN>",!
        Write "<P>"
        do ##class(DocBook.Renderer).RenderText(..remarkContent)
        Write "</DIV>",!
    }
    quit
]]></Implementation>
</Method>

<Method name="XMLRender">
<Description>
Render the contents of this block as DocBook XML</Description>
<Internal>1</Internal>
<Implementation><![CDATA[
    //show anything
    Quit:(..InclRemark=0)

    set attrs = ..tagattrs
    set class = "normal"
    for i = 1 : 5 : $LISTLENGTH(attrs)
    {
        if ($ZCONVERT($LIST(attrs, (i + 1)), "U") = "CLASS")
        {
            set class = $LIST(attrs, (i + 4))
            quit
        }
    }
    set class = $ZCONVERT(class, "L")
    
    Write "<",..%ClassName(),">",!
    Write ..remarkContent
    Write "</",..%ClassName(),">",!

]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>remarkDefaultData</DefaultData>
<ExtentSize>644</ExtentSize>
<Data name="remarkDefaultData">
<Structure>listnode</Structure>
<Subscript>"remark"</Subscript>
<Value name="1">
<Value>InclRemark</Value>
</Value>
<Value name="2">
<Value>remarkContent</Value>
</Value>
</Data>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>16</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.49</AverageFieldSize>
</Property>
<Property name="InclRemark">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.6497%</Selectivity>
<OutlierSelectivity>.11646:242563</OutlierSelectivity>
<AverageFieldSize>5.48</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>4.9548%</Selectivity>
<OutlierSelectivity>.454969:1500</OutlierSelectivity>
<AverageFieldSize>3.81</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>1.4275%</Selectivity>
<OutlierSelectivity>.186335:"GCNV"</OutlierSelectivity>
<AverageFieldSize>4.19</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>3.6749%</Selectivity>
<OutlierSelectivity>.338509:0</OutlierSelectivity>
<AverageFieldSize>1.03</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>1.4275%</Selectivity>
<OutlierSelectivity>.186335:70</OutlierSelectivity>
<AverageFieldSize>2.24</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.6497%</Selectivity>
<OutlierSelectivity>.11646:242563</OutlierSelectivity>
<AverageFieldSize>5.48</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.1842%</Selectivity>
<AverageFieldSize>5.49</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>2.1894%</Selectivity>
<OutlierSelectivity>.562112:</OutlierSelectivity>
<AverageFieldSize>5.11</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>11.68</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.6883%</Selectivity>
<OutlierSelectivity>.206522:"2019-09-22 20:44:55"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>9.3944%</Selectivity>
<OutlierSelectivity>.812112:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.57</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="remarkContent">
<Selectivity>0.1792%</Selectivity>
<AverageFieldSize>97.32</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>1.0870%</Selectivity>
<OutlierSelectivity>.98913:</OutlierSelectivity>
<AverageFieldSize>.07</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.8035%</Selectivity>
<OutlierSelectivity>.124224:"EGRN.xml"</OutlierSelectivity>
<AverageFieldSize>13.63</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>6.6253%</Selectivity>
<OutlierSelectivity>.403727:"2019-09-22 19:31:28"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>1.0870%</Selectivity>
<OutlierSelectivity>.98913:</OutlierSelectivity>
<AverageFieldSize>.32</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$remark">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.searchTag">
<Super>%Persistent</Super>
<TimeChanged>65278,75368.586413</TimeChanged>
<TimeCreated>64152,52742.494571</TimeCreated>

<Property name="Name">
<Type>%String</Type>
</Property>

<Property name="UPPERName">
<Type>%String</Type>
</Property>

<Index name="MainIDX">
<Properties>UPPERName</Properties>
<Unique>1</Unique>
</Index>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^DocBook.searchTagD</DataLocation>
<DefaultData>searchTagDefaultData</DefaultData>
<IdLocation>^DocBook.searchTagD</IdLocation>
<IndexLocation>^DocBook.searchTagI</IndexLocation>
<StreamLocation>^DocBook.searchTagS</StreamLocation>
<ExtentSize>35</ExtentSize>
<Data name="searchTagDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Name</Value>
</Value>
<Value name="3">
<Value>UPPERName</Value>
</Value>
</Data>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>1.74</AverageFieldSize>
</Property>
<Property name="Name">
<Selectivity>2.8571%</Selectivity>
<AverageFieldSize>6.31</AverageFieldSize>
</Property>
<Property name="UPPERName">
<Selectivity>1</Selectivity>
<AverageFieldSize>6.31</AverageFieldSize>
</Property>
<SQLMap name="IDKEY">
<BlockCount>-4</BlockCount>
</SQLMap>
<SQLMap name="MainIDX">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.sect1">
<Description>
A top-level section.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75368.798827</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="GetBannerInfo">
<Internal>1</Internal>
<FormalSpec>info:DocBook.UI.BannerInfo</FormalSpec>
<Implementation><![CDATA[
	Set info.title = ..title
	If (..book '= "") {
		Set info.booktitle = ..book.title
	}
	Else {
		Set info.booktitle = ""
	}
	
	// find prev/next section
	Do ..GetNextPrevInfo(info)
]]></Implementation>
</Method>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[
	If ($G(%tutorial) '= 1) {
		Write "<DIV CLASS=""sect1"">"
		Write "<A name=""",..id,"""></A>",!
		Write ##class(DocBook.Renderer).XFormEntity(..title),"</DIV>",!
	}
]]></Implementation>
</Method>

<Method name="GetNextPrevInfo">
<Description>
 Find the next and prev component to this one</Description>
<Internal>1</Internal>
<FormalSpec>info:DocBook.UI.BannerInfo</FormalSpec>
<Implementation><![CDATA[
	If (..component = "") {
		Quit
	}

	// find prev/next section

	Set cid = ..component.%Id()
	Set pos = ..blockpos

	// inefficient	
	//SELECT blockid INTO :prev
	//	FROM sect1
	//	WHERE (component = :cid) AND (blockpos < :pos)
	//	ORDER BY blockpos DESC
		
	// assume all components have sequential blockpos
	Set ppos = pos - 1
	&sql(SELECT blockid INTO :prev
		FROM sect1
		WHERE (component = :cid) AND (blockpos = :ppos)
	)
	
	If (SQLCODE = 0) {
		Set info.prev = prev
	}
		
	&sql(SELECT blockid INTO :next
		FROM sect1
		WHERE (component = :cid) AND (blockpos > :pos)
		ORDER BY blockpos)
		
	If (SQLCODE = 0) {
		Set info.next = next
	}
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>5073</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>0.0327%</Selectivity>
<OutlierSelectivity>.996729:"~DocBook.container~DocBook.sect1~"</OutlierSelectivity>
<AverageFieldSize>33</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.5</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.1729%</Selectivity>
<AverageFieldSize>5.38</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>10.0000%</Selectivity>
<AverageFieldSize>3.76</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0197%</Selectivity>
<AverageFieldSize>25.29</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>0.0327%</Selectivity>
<OutlierSelectivity>.996729:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>1.0218%</Selectivity>
<AverageFieldSize>5</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>3.7025%</Selectivity>
<AverageFieldSize>1.23</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>1.1069%</Selectivity>
<AverageFieldSize>2.1</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.1729%</Selectivity>
<AverageFieldSize>5.38</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.1729%</Selectivity>
<AverageFieldSize>5.38</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0327%</Selectivity>
<OutlierSelectivity>.996729:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>2.2107%</Selectivity>
<OutlierSelectivity>.420561:</OutlierSelectivity>
<AverageFieldSize>5.11</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>22.64</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0327%</Selectivity>
<OutlierSelectivity>.996729:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>6.2500%</Selectivity>
<AverageFieldSize>1.08</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.5011%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>8.4112%</Selectivity>
<OutlierSelectivity>.831776:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.52</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0327%</Selectivity>
<OutlierSelectivity>.996729:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0327%</Selectivity>
<OutlierSelectivity>.996729:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0327%</Selectivity>
<OutlierSelectivity>.996729:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.5682%</Selectivity>
<AverageFieldSize>12.31</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>6.3551%</Selectivity>
<OutlierSelectivity>.364486:"2019-09-22 19:31:30"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0327%</Selectivity>
<OutlierSelectivity>.996729:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.0203%</Selectivity>
<OutlierSelectivity>.995327:</OutlierSelectivity>
<AverageFieldSize>.23</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.0271%</Selectivity>
<AverageFieldSize>38.3</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0197%</Selectivity>
<AverageFieldSize>25.72</AverageFieldSize>
</Property>
<SQLMap name="$sect1">
<BlockCount>-16</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.sect2">
<Description>
A level 2 section.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75369.008123</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[
	Write "<DIV CLASS=""sect2"">"
	Write "<A name=""",..id,"""></A>",!
	Write ##class(DocBook.Renderer).XFormEntity(..title),"</DIV>",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>5538</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>0.0314%</Selectivity>
<OutlierSelectivity>.996861:"~DocBook.container~DocBook.sect2~"</OutlierSelectivity>
<AverageFieldSize>33</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.52</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.3048%</Selectivity>
<AverageFieldSize>5.36</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>3.8859%</Selectivity>
<OutlierSelectivity>.300448:500</OutlierSelectivity>
<AverageFieldSize>3.69</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0249%</Selectivity>
<AverageFieldSize>25.09</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>0.0314%</Selectivity>
<OutlierSelectivity>.996861:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>1.3614%</Selectivity>
<AverageFieldSize>4.6</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>3.5704%</Selectivity>
<AverageFieldSize>1.17</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>1.3846%</Selectivity>
<AverageFieldSize>2.05</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.3048%</Selectivity>
<AverageFieldSize>5.36</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.1143%</Selectivity>
<AverageFieldSize>5.51</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0314%</Selectivity>
<OutlierSelectivity>.996861:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>2.0160%</Selectivity>
<OutlierSelectivity>.511211:</OutlierSelectivity>
<AverageFieldSize>5.61</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>24.45</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0314%</Selectivity>
<OutlierSelectivity>.996861:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>5.5555%</Selectivity>
<AverageFieldSize>1.08</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.5651%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>5.6054%</Selectivity>
<OutlierSelectivity>.887892:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.38</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0314%</Selectivity>
<OutlierSelectivity>.996861:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0314%</Selectivity>
<OutlierSelectivity>.996861:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0314%</Selectivity>
<OutlierSelectivity>.996861:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.5736%</Selectivity>
<AverageFieldSize>13.25</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>5.4310%</Selectivity>
<OutlierSelectivity>.511211:"2019-09-22 19:31:30"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0314%</Selectivity>
<OutlierSelectivity>.996861:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.0314%</Selectivity>
<OutlierSelectivity>.996861:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.0695%</Selectivity>
<AverageFieldSize>38.35</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0249%</Selectivity>
<AverageFieldSize>25.52</AverageFieldSize>
</Property>
<SQLMap name="$sect2">
<BlockCount>-20</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.sect3">
<Description>
A level 3 section.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75369.077524</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[
	Write "<DIV CLASS=""sect3"">"
	Write "<A name=""",..id,"""></A>",!
	Write ##class(DocBook.Renderer).XFormEntity(..title),"</DIV>",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>2755</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>0.0446%</Selectivity>
<OutlierSelectivity>.995541:"~DocBook.container~DocBook.sect3~"</OutlierSelectivity>
<AverageFieldSize>33</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.78</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>1.0295%</Selectivity>
<AverageFieldSize>5.66</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>3.4581%</Selectivity>
<OutlierSelectivity>.305732:500</OutlierSelectivity>
<AverageFieldSize>3.69</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0554%</Selectivity>
<AverageFieldSize>35.99</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>0.0446%</Selectivity>
<OutlierSelectivity>.995541:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>1.9421%</Selectivity>
<OutlierSelectivity>.267516:"GCNVA"</OutlierSelectivity>
<AverageFieldSize>4.3</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>5.5548%</Selectivity>
<AverageFieldSize>1.14</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>1.9421%</Selectivity>
<OutlierSelectivity>.267516:73</OutlierSelectivity>
<AverageFieldSize>2.08</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>1.0295%</Selectivity>
<AverageFieldSize>5.66</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.1522%</Selectivity>
<AverageFieldSize>5.78</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0446%</Selectivity>
<OutlierSelectivity>.995541:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>4.0710%</Selectivity>
<OutlierSelectivity>.388535:"upgrade checklists"</OutlierSelectivity>
<AverageFieldSize>10.09</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>18.27</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0446%</Selectivity>
<OutlierSelectivity>.995541:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>6.1955%</Selectivity>
<OutlierSelectivity>.318471:2</OutlierSelectivity>
<AverageFieldSize>1.03</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>2.0446%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>2.2108%</Selectivity>
<OutlierSelectivity>.955414:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.15</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0446%</Selectivity>
<OutlierSelectivity>.995541:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0446%</Selectivity>
<OutlierSelectivity>.995541:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0446%</Selectivity>
<OutlierSelectivity>.995541:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>1.2473%</Selectivity>
<AverageFieldSize>14.11</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>2.6245%</Selectivity>
<OutlierSelectivity>.840764:"2019-09-22 19:31:30"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0446%</Selectivity>
<OutlierSelectivity>.995541:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>0.0446%</Selectivity>
<OutlierSelectivity>.995541:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.0363%</Selectivity>
<OutlierSelectivity>.592357:</OutlierSelectivity>
<AverageFieldSize>17.64</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0554%</Selectivity>
<AverageFieldSize>36.25</AverageFieldSize>
</Property>
<SQLMap name="$sect3">
<BlockCount>-8</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.sect4">
<Description>
A level 4 section.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75369.146273</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[
	Write "<DIV CLASS=""sect4"">"
	Write "<A name=""",..id,"""></A>",!
	Write ##class(DocBook.Renderer).XFormEntity(..title),"</DIV>",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>360</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>33</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.84</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>1.5657%</Selectivity>
<OutlierSelectivity>.138889:152067</OutlierSelectivity>
<AverageFieldSize>5.72</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>3.6111%</Selectivity>
<OutlierSelectivity>.458333:500</OutlierSelectivity>
<AverageFieldSize>3.54</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.2915%</Selectivity>
<AverageFieldSize>34.96</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>4.6875%</Selectivity>
<OutlierSelectivity>.25:"GCNV"</OutlierSelectivity>
<AverageFieldSize>4.11</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>5.2632%</Selectivity>
<AverageFieldSize>1.04</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>4.6875%</Selectivity>
<OutlierSelectivity>.25:70</OutlierSelectivity>
<AverageFieldSize>2</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>1.5657%</Selectivity>
<OutlierSelectivity>.138889:152067</OutlierSelectivity>
<AverageFieldSize>5.72</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.6579%</Selectivity>
<AverageFieldSize>5.84</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>6.2153%</Selectivity>
<OutlierSelectivity>.502778:</OutlierSelectivity>
<AverageFieldSize>7.76</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>18.83</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>7.1429%</Selectivity>
<AverageFieldSize>1.03</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>2.3254%</Selectivity>
<OutlierSelectivity>.186111:"2019-09-22 20:45:36"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>0.5556%</Selectivity>
<OutlierSelectivity>.994444:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.03</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>1.7940%</Selectivity>
<OutlierSelectivity>.138889:"GCNVA_R51.xml"</OutlierSelectivity>
<AverageFieldSize>14.48</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>1.5000%</Selectivity>
<OutlierSelectivity>.925:"2019-09-22 19:31:30"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.2778%</Selectivity>
<OutlierSelectivity>.669444:</OutlierSelectivity>
<AverageFieldSize>16.02</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.2915%</Selectivity>
<AverageFieldSize>35.54</AverageFieldSize>
</Property>
<SQLMap name="$sect4">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.set">
<Description>
A collection of books.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<SqlTableName>db_set</SqlTableName>
<Super>DocBook.container</Super>
<TimeChanged>65278,75362.962278</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Property name="books">
<Type>book</Type>
<Cardinality>many</Cardinality>
<Inverse>set</Inverse>
<Relationship>1</Relationship>
</Property>

<Method name="GetBannerInfo">
<Internal>1</Internal>
<FormalSpec>info:DocBook.UI.BannerInfo</FormalSpec>
<Implementation><![CDATA[
	Set info.title = ..title
	Set info.booktitle = $$$T("InterSystems Online Documentation")
	Set info.chap = ""
	Set info.prev = ""
	Set info.next = ""

]]></Implementation>
</Method>

<Method name="HTMLRender">
<Internal>1</Internal>
<Implementation><![CDATA[
	&html<<DIV CLASS="para1">#(..subtitle)#</DIV><BR>>

	Do ..ShowBooks(..%Id())

]]></Implementation>
</Method>

<Method name="ShowBooks">
<Description>
Show list of books for the this set</Description>
<Internal>1</Internal>
<FormalSpec>setid</FormalSpec>
<Implementation><![CDATA[

	// loop over books
	&sql(DECLARE BookCursor CURSOR FOR
		SELECT ID,blockid,title,subtitle,dbrole,remap
		INTO :id,:bookKey,:title,:desc, :role, :remap
		FROM DocBook.book
		WHERE container = :setid
		ORDER BY remap, title
	)
	
	&sql(OPEN BookCursor)
	&sql(FETCH BookCursor)

	&html<<TABLE CLASS="Home" BORDER="0" CELLPADDING="0" CELLSPACING="0" COLS="2">>
	&html<<TR CLASS="HomeGap"><TD COLSPAN="2">&nbsp;</TD></TR>>

	// list books
	While (SQLCODE = 0) {
		Set url = ""

		// if there is a preface, link to it (tutorial only!)
		If (role = "tutorial" && (##class(DocBook.preface).FindId(bookKey _ "_preface") '= ""))	{
			Set url = "DocBook.UI.Page.cls?KEY=" _ $ZCVT(bookKey,"O","URL") _ "_preface"
		}
		Else {
			// link to TOC
			Set url = "DocBook.UI.Page.cls?KEY=" _ $ZCVT(bookKey,"O","URL")
		}

		&html<<TR CLASS="Home">>
		&html<<TD CLASS="HomeTitle" NOWRAP 
				onclick="self.document.location='#(url)#';" 
				onmouseover="this.className = 'HomeTitleHi'; self.document.all.item('#(bookKey)#').className = 'HomeSubTitleHi';" 
				onmouseout="this.className='HomeTitle'; self.document.all.item('#(bookKey)#').className = 'HomeSubTitle';">>
		Write "<A HREF=""", url, """ TITLE=""", $$$T("Show contents of this book."), """>", title,"&nbsp;</A>"
		&html<</TD>>
		&html<<TD CLASS="HomeSubTitle" ID="#(bookKey)#">#(desc)#</TD></TR>>
		&html<<TR CLASS="HomeGap"><TD COLSPAN="2">&nbsp;</TD></TR>>

		&sql(FETCH BookCursor)
	}

	&html<</TABLE>>

	&sql(CLOSE BookCursor)

]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>19</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>31</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>2.37</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>5</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>5.2632%</Selectivity>
<AverageFieldSize>25.58</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>5.2632%</Selectivity>
<AverageFieldSize>11.95</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>11.95</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>8.3333%</Selectivity>
<AverageFieldSize>1.42</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>10.5263%</Selectivity>
<OutlierSelectivity>.894737:"2019-09-22 20:44:35"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>5.2632%</Selectivity>
<AverageFieldSize>20.16</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>5.2632%</Selectivity>
<AverageFieldSize>15.95</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>33.3333%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>5.2632%</Selectivity>
<AverageFieldSize>106.58</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>5.2632%</Selectivity>
<AverageFieldSize>73.11</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>5.2632%</Selectivity>
<AverageFieldSize>29.26</AverageFieldSize>
</Property>
<SQLMap name="$set">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.synopsis">
<Description>
A block containing a function synposis</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.block</Super>
<TimeChanged>65278,75369.212889</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderContent">
<Internal>1</Internal>
<Implementation><![CDATA[
	Write "<DIV CLASS=""synopsis""><PRE>",..content,"</PRE></DIV>",!

]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>2292</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>0.0486%</Selectivity>
<OutlierSelectivity>.995139:"~DocBook.synopsis~"</OutlierSelectivity>
<AverageFieldSize>18</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.67</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.0957%</Selectivity>
<AverageFieldSize>5.32</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>24.9999%</Selectivity>
<AverageFieldSize>3.56</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.0486%</Selectivity>
<OutlierSelectivity>.995139:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>0.0486%</Selectivity>
<OutlierSelectivity>.995139:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>4.9969%</Selectivity>
<AverageFieldSize>4.27</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>5.2069%</Selectivity>
<OutlierSelectivity>.6875:0</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>4.9969%</Selectivity>
<AverageFieldSize>2.03</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.0957%</Selectivity>
<AverageFieldSize>5.32</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.0436%</Selectivity>
<AverageFieldSize>5.67</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.0487%</Selectivity>
<AverageFieldSize>59.44</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>7.6922%</Selectivity>
<AverageFieldSize>7.9</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>11.85</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>0.0486%</Selectivity>
<OutlierSelectivity>.995139:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.6534%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>2.0833%</Selectivity>
<OutlierSelectivity>.979167:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.06</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>0.0486%</Selectivity>
<OutlierSelectivity>.995139:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>0.0486%</Selectivity>
<OutlierSelectivity>.995139:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>0.0486%</Selectivity>
<OutlierSelectivity>.995139:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.3948%</Selectivity>
<AverageFieldSize>15.16</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>8.7500%</Selectivity>
<OutlierSelectivity>.5625:"2019-09-22 19:31:34"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>0.0486%</Selectivity>
<OutlierSelectivity>.995139:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.0486%</Selectivity>
<OutlierSelectivity>.995139:$lb("","format","format","NOTATION","linespecific")</OutlierSelectivity>
<AverageFieldSize>42</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.0486%</Selectivity>
<OutlierSelectivity>.995139:</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$synopsis">
<BlockCount>-8</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.table">
<Description>
A table with a title.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<SqlTableName>db_table</SqlTableName>
<Super>DocBook.informaltable</Super>
<TimeChanged>65278,75363.332105</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderContent">
<Internal>1</Internal>
<Implementation><![CDATA[
    Write "<DIV CLASS=""table-title"">",..title,"</DIV>",!
    Write "<DIV CLASS=""table"">"
    Write "<A name=""",..id,"""></A>",!
    Do ##class(Renderer).RenderTable(..content,..frame,..colsep)
    Write "</DIV>",!
]]></Implementation>
</Method>

<Method name="XMLRender">
<Description>
Render the contents of this block as DocBook XML</Description>
<Internal>1</Internal>
<Implementation><![CDATA[

    Set attrtext = ..FmtAttrs(..tagattrs)
    Set gensym = "label=" _ """" _ ..id _ """"
    
    If (attrtext '[ "label=")
    {
        Set attrtext = attrtext _ " " _ gensym
    }

    Write "<",..%ClassName()," ",attrtext,">"
    
    Write "<title>", ..title, "</title>", !
    Write ..content
    Write "</",..%ClassName(),">",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>610</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>37</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.83</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>0.4086%</Selectivity>
<OutlierSelectivity>.178689:105249</OutlierSelectivity>
<AverageFieldSize>5.67</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>12.5000%</Selectivity>
<AverageFieldSize>3.76</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>0.1706%</Selectivity>
<AverageFieldSize>32.22</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>1.2971%</Selectivity>
<OutlierSelectivity>.260656:"RERR"</OutlierSelectivity>
<AverageFieldSize>4</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>0.6407%</Selectivity>
<OutlierSelectivity>.301639:1</OutlierSelectivity>
<AverageFieldSize>1.29</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>1.2971%</Selectivity>
<OutlierSelectivity>.260656:53</OutlierSelectivity>
<AverageFieldSize>2.16</AverageFieldSize>
</Property>
<Property name="colsep">
<Selectivity>6.2295%</Selectivity>
<OutlierSelectivity>.937705:</OutlierSelectivity>
<AverageFieldSize>.06</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>0.4086%</Selectivity>
<OutlierSelectivity>.178689:105249</OutlierSelectivity>
<AverageFieldSize>5.67</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>0.2161%</Selectivity>
<OutlierSelectivity>.178689:105249</OutlierSelectivity>
<AverageFieldSize>5.83</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>0.1645%</Selectivity>
<AverageFieldSize>3641.66</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>1.9798%</Selectivity>
<OutlierSelectivity>.485246:</OutlierSelectivity>
<AverageFieldSize>8.64</AverageFieldSize>
</Property>
<Property name="frame">
<Selectivity>1.9672%</Selectivity>
<OutlierSelectivity>.960656:"all"</OutlierSelectivity>
<AverageFieldSize>3.05</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>14.61</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>1.5137%</Selectivity>
<OutlierSelectivity>.091803:"2019-09-22 20:45:10"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>2.1311%</Selectivity>
<OutlierSelectivity>.957377:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.21</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>0.7466%</Selectivity>
<OutlierSelectivity>.178689:"RERR_tsql.xml"</OutlierSelectivity>
<AverageFieldSize>12.13</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>11.1111%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>0.2631%</Selectivity>
<OutlierSelectivity>.486885:$lb("","frame","frame","ENUMERATION","all")</OutlierSelectivity>
<AverageFieldSize>68.45</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>0.1706%</Selectivity>
<AverageFieldSize>32.8</AverageFieldSize>
</Property>
<SQLMap name="$table">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.tip">
<Description>
A tip admonition.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75369.266431</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderPostChildren">
<Internal>1</Internal>
<Implementation><![CDATA[	Write "</DIV>",!
]]></Implementation>
</Method>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[	Write "<DIV CLASS=""tip""><SPAN CLASS=""tip"">", $$$T("Tip:"), "</SPAN> ",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>100</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>31</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>5.44</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>1.2048%</Selectivity>
<AverageFieldSize>5.37</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>20.0000%</Selectivity>
<AverageFieldSize>3.84</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>2.3810%</Selectivity>
<AverageFieldSize>5.23</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>10.0000%</Selectivity>
<AverageFieldSize>1.01</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>2.4390%</Selectivity>
<AverageFieldSize>2.18</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>1.2048%</Selectivity>
<AverageFieldSize>5.37</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>1.0000%</Selectivity>
<AverageFieldSize>5.44</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>3.7000%</Selectivity>
<OutlierSelectivity>.26:"DeepSee"</OutlierSelectivity>
<AverageFieldSize>5.76</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.65</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>7.0000%</Selectivity>
<OutlierSelectivity>.93:1</OutlierSelectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>3.3333%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>50.0000%</Selectivity>
<AverageFieldSize>5.99</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>2.2727%</Selectivity>
<AverageFieldSize>10.27</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>14.2857%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$tip">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="DocBook.warning">
<Description>
A 'warning' admonition.</Description>
<ClassType>persistent</ClassType>
<IncludeCode>DocBookMac</IncludeCode>
<ProcedureBlock>1</ProcedureBlock>
<Super>DocBook.container</Super>
<TimeChanged>65278,75369.320401</TimeChanged>
<TimeCreated>59241,40475</TimeCreated>

<Method name="HTMLRenderPostChildren">
<Internal>1</Internal>
<Implementation><![CDATA[	Write "</DIV>",!
]]></Implementation>
</Method>

<Method name="HTMLRenderPreChildren">
<Internal>1</Internal>
<Implementation><![CDATA[	Write "<DIV CLASS=""warning""><SPAN CLASS=""warning"">", $$$T("Warning:"), "</SPAN> ",!
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<ExtentSize>21</ExtentSize>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>35</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>6</AverageFieldSize>
</Property>
<Property name="NearestLevel1">
<Selectivity>7.6923%</Selectivity>
<AverageFieldSize>6</AverageFieldSize>
</Property>
<Property name="Rank">
<Selectivity>14.2857%</Selectivity>
<AverageFieldSize>3.62</AverageFieldSize>
</Property>
<Property name="RenderedTitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="Searchable">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="TopId">
<Selectivity>10.0000%</Selectivity>
<AverageFieldSize>4.33</AverageFieldSize>
</Property>
<Property name="blockpos">
<Selectivity>14.2857%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="book">
<Selectivity>10.0000%</Selectivity>
<AverageFieldSize>2.33</AverageFieldSize>
</Property>
<Property name="component">
<Selectivity>7.6923%</Selectivity>
<AverageFieldSize>6</AverageFieldSize>
</Property>
<Property name="container">
<Selectivity>4.7619%</Selectivity>
<AverageFieldSize>6</AverageFieldSize>
</Property>
<Property name="content">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="extraTags">
<Selectivity>14.2857%</Selectivity>
<AverageFieldSize>6.86</AverageFieldSize>
</Property>
<Property name="id">
<Selectivity>1</Selectivity>
<AverageFieldSize>12.33</AverageFieldSize>
</Property>
<Property name="lang">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastChildPos">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="lastchange">
<Selectivity>6.2500%</Selectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="product">
<Selectivity>14.2857%</Selectivity>
<OutlierSelectivity>.857143:"Cache"</OutlierSelectivity>
<AverageFieldSize>5.43</AverageFieldSize>
</Property>
<Property name="remap">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="renderedContent">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="role">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="sourcefile">
<Selectivity>7.6923%</Selectivity>
<AverageFieldSize>13</AverageFieldSize>
</Property>
<Property name="sourcetime">
<Selectivity>5.7143%</Selectivity>
<OutlierSelectivity>.714286:"2019-09-22 19:31:30"</OutlierSelectivity>
<AverageFieldSize>19</AverageFieldSize>
</Property>
<Property name="status">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="subtitle">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="tagattrs">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="title">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<SQLMap name="$warning">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>
</Export>
